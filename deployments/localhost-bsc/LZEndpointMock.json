{
  "address": "0x946D57f299631c784Cf52D1a1abb24d078FC3828",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_chainId",
          "type": "uint16"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "srcChainId",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "srcAddress",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "nonce",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "dstAddress",
          "type": "address"
        }
      ],
      "name": "PayloadCleared",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "srcChainId",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "srcAddress",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "dstAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "nonce",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "payload",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "reason",
          "type": "bytes"
        }
      ],
      "name": "PayloadStored",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "chainId",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "srcAddress",
          "type": "bytes"
        }
      ],
      "name": "UaForceResumeReceive",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_a",
          "type": "address"
        }
      ],
      "name": "addrToPackedBytes",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "blockNextMsg",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_payload",
          "type": "bytes"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "estimateFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_nativeFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_zroFee",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_srcChainId",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "_srcAddress",
          "type": "bytes"
        }
      ],
      "name": "forceResumeReceive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getChainId",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "getConfig",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_chainID",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "_srcAddress",
          "type": "bytes"
        }
      ],
      "name": "getInboundNonce",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_srcChainId",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "_srcAddress",
          "type": "bytes"
        }
      ],
      "name": "getLengthOfQueue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_chainID",
          "type": "uint16"
        },
        {
          "internalType": "address",
          "name": "_srcAddress",
          "type": "address"
        }
      ],
      "name": "getOutboundNonce",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getReceiveLibraryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getReceiveVersion",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getSendLibraryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getSendVersion",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_srcChainId",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "_srcAddress",
          "type": "bytes"
        }
      ],
      "name": "hasStoredPayload",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "inboundNonce",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isReceivingPayload",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isSendingPayload",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "lzEndpointLookup",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mockBlockConfirmations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mockChainId",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mockLayerZeroVersion",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mockLibraryVersion",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mockOracle",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mockRelayer",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mockStaticNativeFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "msgsToDeliver",
      "outputs": [
        {
          "internalType": "address",
          "name": "dstAddress",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "nonce",
          "type": "uint64"
        },
        {
          "internalType": "bytes",
          "name": "payload",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nativeFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "outboundNonce",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_b",
          "type": "bytes"
        }
      ],
      "name": "packedBytesToAddr",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_srcChainId",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "_srcAddress",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "_dstAddress",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "_nonce",
          "type": "uint64"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_payload",
          "type": "bytes"
        }
      ],
      "name": "receivePayload",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_srcChainId",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "_srcAddress",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "_payload",
          "type": "bytes"
        }
      ],
      "name": "retryPayload",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_chainId",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "_destination",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "_payload",
          "type": "bytes"
        },
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_adapterParams",
          "type": "bytes"
        }
      ],
      "name": "send",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "setConfig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "destAddr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "lzEndpointAddr",
          "type": "address"
        }
      ],
      "name": "setDestLzEndpoint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_nativeFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_zroFee",
          "type": "uint256"
        }
      ],
      "name": "setEstimatedFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "name": "setReceiveVersion",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "name": "setSendVersion",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "storedPayload",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "payloadLength",
          "type": "uint64"
        },
        {
          "internalType": "address",
          "name": "dstAddress",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "payloadHash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "zroFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x92d0f91f8d35c6f0b6ab30da644fc12ae5fea2d92455fb0a2bf002555a206f70",
  "receipt": {
    "to": null,
    "from": "0x8c623589Ce38936A138a70cCE554553473BbC0f4",
    "contractAddress": "0x946D57f299631c784Cf52D1a1abb24d078FC3828",
    "transactionIndex": 0,
    "gasUsed": "2040567",
    "logsBloom": "0x
    "blockHash": "0x48d7e2b285927b19ee95eaabb5275bc90d4dcbd9642065e010040696fb7cc15d",
    "transactionHash": "0x92d0f91f8d35c6f0b6ab30da644fc12ae5fea2d92455fb0a2bf002555a206f70",
    "logs": [],
    "blockNumber": 18386,
    "cumulativeGasUsed": "2040567",
    "status": 1,
    "byzantium": true
  },
  "args": [
    2
  ],
  "numDeployments": 2,
  "solcInputHash": "ebe9685cad90cf13094170ca99fb6d7a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"srcChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"srcAddress\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"dstAddress\",\"type\":\"address\"}],\"name\":\"PayloadCleared\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"srcChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"srcAddress\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"dstAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"reason\",\"type\":\"bytes\"}],\"name\":\"PayloadStored\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"srcAddress\",\"type\":\"bytes\"}],\"name\":\"UaForceResumeReceive\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_a\",\"type\":\"address\"}],\"name\":\"addrToPackedBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blockNextMsg\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"estimateFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_nativeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_zroFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"forceResumeReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChainId\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getConfig\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_chainID\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"getInboundNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"getLengthOfQueue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_chainID\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"_srcAddress\",\"type\":\"address\"}],\"name\":\"getOutboundNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getReceiveLibraryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getReceiveVersion\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getSendLibraryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getSendVersion\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"hasStoredPayload\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"inboundNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isReceivingPayload\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isSendingPayload\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lzEndpointLookup\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mockBlockConfirmations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mockChainId\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mockLayerZeroVersion\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mockLibraryVersion\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mockOracle\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mockRelayer\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mockStaticNativeFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"msgsToDeliver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"dstAddress\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nativeFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"outboundNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_b\",\"type\":\"bytes\"}],\"name\":\"packedBytesToAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_dstAddress\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"receivePayload\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"retryPayload\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_destination\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"},{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_adapterParams\",\"type\":\"bytes\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lzEndpointAddr\",\"type\":\"address\"}],\"name\":\"setDestLzEndpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_nativeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_zroFee\",\"type\":\"uint256\"}],\"name\":\"setEstimatedFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"setReceiveVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"setSendVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"storedPayload\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"payloadLength\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"dstAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"payloadHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zroFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/LZEndpointMock.sol\":\"LZEndpointMock\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/mocks/LZEndpointMock.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\npragma abicoder v2;\\r\\n\\r\\nimport \\\"layerzero-contracts/contracts/interfaces/ILayerZeroReceiver.sol\\\";\\r\\nimport \\\"layerzero-contracts/contracts/interfaces/ILayerZeroEndpoint.sol\\\";\\r\\n\\r\\n/*\\r\\nmocking multi endpoint connection.\\r\\n- send() will short circuit to lzReceive() directly\\r\\n- no reentrancy guard. the real LayerZero endpoint on main net has a send and receive guard, respectively.\\r\\nif we run a ping-pong-like application, the recursive call might use all gas limit in the block.\\r\\n- not using any messaging library, hence all messaging library func, e.g. estimateFees, version, will not work\\r\\n*/\\r\\ncontract LZEndpointMock is ILayerZeroEndpoint {\\r\\n    mapping(address => address) public lzEndpointLookup;\\r\\n\\r\\n    uint16 public mockChainId;\\r\\n    address payable public mockOracle;\\r\\n    address payable public mockRelayer;\\r\\n    uint public mockBlockConfirmations;\\r\\n    uint16 public mockLibraryVersion;\\r\\n    uint public mockStaticNativeFee;\\r\\n    uint16 public mockLayerZeroVersion;\\r\\n    uint public nativeFee;\\r\\n    uint public zroFee;\\r\\n    bool nextMsgBLocked;\\r\\n\\r\\n    struct StoredPayload {\\r\\n        uint64 payloadLength;\\r\\n        address dstAddress;\\r\\n        bytes32 payloadHash;\\r\\n    }\\r\\n\\r\\n    struct QueuedPayload {\\r\\n        address dstAddress;\\r\\n        uint64 nonce;\\r\\n        bytes payload;\\r\\n    }\\r\\n\\r\\n    // inboundNonce = [srcChainId][srcAddress].\\r\\n    mapping(uint16 => mapping(bytes => uint64)) public inboundNonce;\\r\\n    // outboundNonce = [dstChainId][srcAddress].\\r\\n    mapping(uint16 => mapping(address => uint64)) public outboundNonce;\\r\\n    // storedPayload = [srcChainId][srcAddress]\\r\\n    mapping(uint16 => mapping(bytes => StoredPayload)) public storedPayload;\\r\\n    // msgToDeliver = [srcChainId][srcAddress]\\r\\n    mapping(uint16 => mapping(bytes => QueuedPayload[])) public msgsToDeliver;\\r\\n\\r\\n    event UaForceResumeReceive(uint16 chainId, bytes srcAddress);\\r\\n    event PayloadCleared(uint16 srcChainId, bytes srcAddress, uint64 nonce, address dstAddress);\\r\\n    event PayloadStored(uint16 srcChainId, bytes srcAddress, address dstAddress, uint64 nonce, bytes payload, bytes reason);\\r\\n\\r\\n    constructor(uint16 _chainId) {\\r\\n        mockStaticNativeFee = 42;\\r\\n        mockLayerZeroVersion = 1;\\r\\n        mockChainId = _chainId;\\r\\n    }\\r\\n\\r\\n    // mock helper to set the value returned by `estimateNativeFees`\\r\\n    function setEstimatedFees(uint _nativeFee, uint _zroFee) public {\\r\\n        nativeFee = _nativeFee;\\r\\n        zroFee = _zroFee;\\r\\n    }\\r\\n\\r\\n    function getChainId() external view override returns (uint16) {\\r\\n        return mockChainId;\\r\\n    }\\r\\n\\r\\n    function setDestLzEndpoint(address destAddr, address lzEndpointAddr) external {\\r\\n        lzEndpointLookup[destAddr] = lzEndpointAddr;\\r\\n    }\\r\\n\\r\\n    function send(\\r\\n        uint16 _chainId,\\r\\n        bytes calldata _destination,\\r\\n        bytes calldata _payload,\\r\\n        address payable, // _refundAddress\\r\\n        address, // _zroPaymentAddress\\r\\n        bytes memory _adapterParams\\r\\n    ) external payable override {\\r\\n        address destAddr = packedBytesToAddr(_destination);\\r\\n        address lzEndpoint = lzEndpointLookup[destAddr];\\r\\n\\r\\n        require(lzEndpoint != address(0), \\\"LayerZeroMock: destination LayerZero Endpoint not found\\\");\\r\\n\\r\\n        require(msg.value >= nativeFee * _payload.length, \\\"LayerZeroMock: not enough native for fees\\\");\\r\\n\\r\\n        uint64 nonce;\\r\\n        {\\r\\n            nonce = ++outboundNonce[_chainId][msg.sender];\\r\\n        }\\r\\n\\r\\n        // Mock the relayer paying the dstNativeAddr the amount of extra native token\\r\\n        {\\r\\n            uint extraGas;\\r\\n            uint dstNative;\\r\\n            address dstNativeAddr;\\r\\n            assembly {\\r\\n                extraGas := mload(add(_adapterParams, 34))\\r\\n                dstNative := mload(add(_adapterParams, 66))\\r\\n                dstNativeAddr := mload(add(_adapterParams, 86))\\r\\n            }\\r\\n\\r\\n            // to simulate actually sending the ether, add a transfer call and ensure the LZEndpointMock contract has an ether balance\\r\\n        }\\r\\n\\r\\n        bytes memory bytesSourceUserApplicationAddr = addrToPackedBytes(address(msg.sender)); // cast this address to bytes\\r\\n\\r\\n        // not using the extra gas parameter because this is a single tx call, not split between different chains\\r\\n        // LZEndpointMock(lzEndpoint).receivePayload(mockChainId, bytesSourceUserApplicationAddr, destAddr, nonce, extraGas, _payload);\\r\\n        LZEndpointMock(lzEndpoint).receivePayload(mockChainId, bytesSourceUserApplicationAddr, destAddr, nonce, 0, _payload);\\r\\n    }\\r\\n\\r\\n    function receivePayload(\\r\\n        uint16 _srcChainId,\\r\\n        bytes calldata _srcAddress,\\r\\n        address _dstAddress,\\r\\n        uint64 _nonce,\\r\\n        uint, /*_gasLimit*/\\r\\n        bytes calldata _payload\\r\\n    ) external override {\\r\\n        StoredPayload storage sp = storedPayload[_srcChainId][_srcAddress];\\r\\n\\r\\n        // assert and increment the nonce. no message shuffling\\r\\n        require(_nonce == ++inboundNonce[_srcChainId][_srcAddress], \\\"LayerZero: wrong nonce\\\");\\r\\n\\r\\n        // queue the following msgs inside of a stack to simulate a successful send on src, but not fully delivered on dst\\r\\n        if (sp.payloadHash != bytes32(0)) {\\r\\n            QueuedPayload[] storage msgs = msgsToDeliver[_srcChainId][_srcAddress];\\r\\n            QueuedPayload memory newMsg = QueuedPayload(_dstAddress, _nonce, _payload);\\r\\n\\r\\n            // warning, might run into gas issues trying to forward through a bunch of queued msgs\\r\\n            // shift all the msgs over so we can treat this like a fifo via array.pop()\\r\\n            if (msgs.length > 0) {\\r\\n                // extend the array\\r\\n                msgs.push(newMsg);\\r\\n\\r\\n                // shift all the indexes up for pop()\\r\\n                for (uint i = 0; i < msgs.length - 1; i++) {\\r\\n                    msgs[i + 1] = msgs[i];\\r\\n                }\\r\\n\\r\\n                // put the newMsg at the bottom of the stack\\r\\n                msgs[0] = newMsg;\\r\\n            } else {\\r\\n                msgs.push(newMsg);\\r\\n            }\\r\\n        } else if (nextMsgBLocked) {\\r\\n            storedPayload[_srcChainId][_srcAddress] = StoredPayload(uint64(_payload.length), _dstAddress, keccak256(_payload));\\r\\n            emit PayloadStored(_srcChainId, _srcAddress, _dstAddress, _nonce, _payload, bytes(\\\"\\\"));\\r\\n            // ensure the next msgs that go through are no longer blocked\\r\\n            nextMsgBLocked = false;\\r\\n        } else {\\r\\n            // we ignore the gas limit because this call is made in one tx due to being \\\"same chain\\\"\\r\\n            // ILayerZeroReceiver(_dstAddress).lzReceive{gas: _gasLimit}(_srcChainId, _srcAddress, _nonce, _payload); // invoke lzReceive\\r\\n            ILayerZeroReceiver(_dstAddress).lzReceive(_srcChainId, _srcAddress, _nonce, _payload); // invoke lzReceive\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // used to simulate messages received get stored as a payload\\r\\n    function blockNextMsg() external {\\r\\n        nextMsgBLocked = true;\\r\\n    }\\r\\n\\r\\n    function getLengthOfQueue(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (uint) {\\r\\n        return msgsToDeliver[_srcChainId][_srcAddress].length;\\r\\n    }\\r\\n\\r\\n    // @notice gets a quote in source native gas, for the amount that send() requires to pay for message delivery\\r\\n    // @param _dstChainId - the destination chain identifier\\r\\n    // @param _userApplication - the user app address on this EVM chain\\r\\n    // @param _payload - the custom message to send over LayerZero\\r\\n    // @param _payInZRO - if false, user app pays the protocol fee in native token\\r\\n    // @param _adapterParam - parameters for the adapter service, e.g. send some dust native token to dstChain\\r\\n    function estimateFees(uint16, address, bytes memory _payload, bool, bytes memory) external view override returns (uint _nativeFee, uint _zroFee) {\\r\\n        _nativeFee = nativeFee * _payload.length;\\r\\n        _zroFee = zroFee;\\r\\n    }\\r\\n\\r\\n    // give 20 bytes, return the decoded address\\r\\n    function packedBytesToAddr(bytes calldata _b) public pure returns (address) {\\r\\n        address addr;\\r\\n        assembly {\\r\\n            let ptr := mload(0x40)\\r\\n            calldatacopy(ptr, sub(_b.offset, 2), add(_b.length, 2))\\r\\n            addr := mload(sub(ptr, 10))\\r\\n        }\\r\\n        return addr;\\r\\n    }\\r\\n\\r\\n    // given an address, return the 20 bytes\\r\\n    function addrToPackedBytes(address _a) public pure returns (bytes memory) {\\r\\n        bytes memory data = abi.encodePacked(_a);\\r\\n        return data;\\r\\n    }\\r\\n\\r\\n    function setConfig(\\r\\n        uint16, /*_version*/\\r\\n        uint16, /*_chainId*/\\r\\n        uint, /*_configType*/\\r\\n        bytes memory /*_config*/\\r\\n    ) external override {}\\r\\n\\r\\n    function getConfig(\\r\\n        uint16, /*_version*/\\r\\n        uint16, /*_chainId*/\\r\\n        address, /*_ua*/\\r\\n        uint /*_configType*/\\r\\n    ) external pure override returns (bytes memory) {\\r\\n        return \\\"\\\";\\r\\n    }\\r\\n\\r\\n    function setSendVersion(\\r\\n        uint16 /*version*/\\r\\n    ) external override {}\\r\\n\\r\\n    function setReceiveVersion(\\r\\n        uint16 /*version*/\\r\\n    ) external override {}\\r\\n\\r\\n    function getSendVersion(\\r\\n        address /*_userApplication*/\\r\\n    ) external pure override returns (uint16) {\\r\\n        return 1;\\r\\n    }\\r\\n\\r\\n    function getReceiveVersion(\\r\\n        address /*_userApplication*/\\r\\n    ) external pure override returns (uint16) {\\r\\n        return 1;\\r\\n    }\\r\\n\\r\\n    function getInboundNonce(uint16 _chainID, bytes calldata _srcAddress) external view override returns (uint64) {\\r\\n        return inboundNonce[_chainID][_srcAddress];\\r\\n    }\\r\\n\\r\\n    function getOutboundNonce(uint16 _chainID, address _srcAddress) external view override returns (uint64) {\\r\\n        return outboundNonce[_chainID][_srcAddress];\\r\\n    }\\r\\n\\r\\n    // simulates the relayer pushing through the rest of the msgs that got delayed due to the stored payload\\r\\n    function _clearMsgQue(uint16 _srcChainId, bytes calldata _srcAddress) internal {\\r\\n        QueuedPayload[] storage msgs = msgsToDeliver[_srcChainId][_srcAddress];\\r\\n\\r\\n        // warning, might run into gas issues trying to forward through a bunch of queued msgs\\r\\n        while (msgs.length > 0) {\\r\\n            QueuedPayload memory payload = msgs[msgs.length - 1];\\r\\n            ILayerZeroReceiver(payload.dstAddress).lzReceive(_srcChainId, _srcAddress, payload.nonce, payload.payload);\\r\\n            msgs.pop();\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external override {\\r\\n        StoredPayload storage sp = storedPayload[_srcChainId][_srcAddress];\\r\\n        // revert if no messages are cached. safeguard malicious UA behaviour\\r\\n        require(sp.payloadHash != bytes32(0), \\\"LayerZero: no stored payload\\\");\\r\\n        require(sp.dstAddress == msg.sender, \\\"LayerZero: invalid caller\\\");\\r\\n\\r\\n        // empty the storedPayload\\r\\n        sp.payloadLength = 0;\\r\\n        sp.dstAddress = address(0);\\r\\n        sp.payloadHash = bytes32(0);\\r\\n\\r\\n        emit UaForceResumeReceive(_srcChainId, _srcAddress);\\r\\n\\r\\n        // resume the receiving of msgs after we force clear the \\\"stuck\\\" msg\\r\\n        _clearMsgQue(_srcChainId, _srcAddress);\\r\\n    }\\r\\n\\r\\n    function retryPayload(uint16 _srcChainId, bytes calldata _srcAddress, bytes calldata _payload) external override {\\r\\n        StoredPayload storage sp = storedPayload[_srcChainId][_srcAddress];\\r\\n        require(sp.payloadHash != bytes32(0), \\\"LayerZero: no stored payload\\\");\\r\\n        require(_payload.length == sp.payloadLength && keccak256(_payload) == sp.payloadHash, \\\"LayerZero: invalid payload\\\");\\r\\n\\r\\n        address dstAddress = sp.dstAddress;\\r\\n        // empty the storedPayload\\r\\n        sp.payloadLength = 0;\\r\\n        sp.dstAddress = address(0);\\r\\n        sp.payloadHash = bytes32(0);\\r\\n\\r\\n        uint64 nonce = inboundNonce[_srcChainId][_srcAddress];\\r\\n\\r\\n        ILayerZeroReceiver(dstAddress).lzReceive(_srcChainId, _srcAddress, nonce, _payload);\\r\\n        emit PayloadCleared(_srcChainId, _srcAddress, nonce, dstAddress);\\r\\n    }\\r\\n\\r\\n    function hasStoredPayload(uint16 _srcChainId, bytes calldata _srcAddress) external view override returns (bool) {\\r\\n        StoredPayload storage sp = storedPayload[_srcChainId][_srcAddress];\\r\\n        return sp.payloadHash != bytes32(0);\\r\\n    }\\r\\n\\r\\n    function isSendingPayload() external pure override returns (bool) {\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    function isReceivingPayload() external pure override returns (bool) {\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    function getSendLibraryAddress(address) external view override returns (address) {\\r\\n        return address(this);\\r\\n    }\\r\\n\\r\\n    function getReceiveLibraryAddress(address) external view override returns (address) {\\r\\n        return address(this);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xfa408326f74bc841c24f72dab6e1d17717660ddc47c08033279f706ecfd1c868\",\"license\":\"MIT\"},\"layerzero-contracts/contracts/interfaces/ILayerZeroEndpoint.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity >=0.5.0;\\r\\n\\r\\nimport \\\"./ILayerZeroUserApplicationConfig.sol\\\";\\r\\n\\r\\ninterface ILayerZeroEndpoint is ILayerZeroUserApplicationConfig {\\r\\n    // @notice send a LayerZero message to the specified address at a LayerZero endpoint.\\r\\n    // @param _dstChainId - the destination chain identifier\\r\\n    // @param _destination - the address on destination chain (in bytes). address length/format may vary by chains\\r\\n    // @param _payload - a custom bytes payload to send to the destination contract\\r\\n    // @param _refundAddress - if the source transaction is cheaper than the amount of value passed, refund the additional amount to this address\\r\\n    // @param _zroPaymentAddress - the address of the ZRO token holder who would pay for the transaction\\r\\n    // @param _adapterParams - parameters for custom functionality. e.g. receive airdropped native gas from the relayer on destination\\r\\n    function send(uint16 _dstChainId, bytes calldata _destination, bytes calldata _payload, address payable _refundAddress, address _zroPaymentAddress, bytes calldata _adapterParams) external payable;\\r\\n\\r\\n    // @notice used by the messaging library to publish verified payload\\r\\n    // @param _srcChainId - the source chain identifier\\r\\n    // @param _srcAddress - the source contract (as bytes) at the source chain\\r\\n    // @param _dstAddress - the address on destination chain\\r\\n    // @param _nonce - the unbound message ordering nonce\\r\\n    // @param _gasLimit - the gas limit for external contract execution\\r\\n    // @param _payload - verified payload to send to the destination contract\\r\\n    function receivePayload(uint16 _srcChainId, bytes calldata _srcAddress, address _dstAddress, uint64 _nonce, uint _gasLimit, bytes calldata _payload) external;\\r\\n\\r\\n    // @notice get the inboundNonce of a lzApp from a source chain which could be EVM or non-EVM chain\\r\\n    // @param _srcChainId - the source chain identifier\\r\\n    // @param _srcAddress - the source chain contract address\\r\\n    function getInboundNonce(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (uint64);\\r\\n\\r\\n    // @notice get the outboundNonce from this source chain which, consequently, is always an EVM\\r\\n    // @param _srcAddress - the source chain contract address\\r\\n    function getOutboundNonce(uint16 _dstChainId, address _srcAddress) external view returns (uint64);\\r\\n\\r\\n    // @notice gets a quote in source native gas, for the amount that send() requires to pay for message delivery\\r\\n    // @param _dstChainId - the destination chain identifier\\r\\n    // @param _userApplication - the user app address on this EVM chain\\r\\n    // @param _payload - the custom message to send over LayerZero\\r\\n    // @param _payInZRO - if false, user app pays the protocol fee in native token\\r\\n    // @param _adapterParam - parameters for the adapter service, e.g. send some dust native token to dstChain\\r\\n    function estimateFees(uint16 _dstChainId, address _userApplication, bytes calldata _payload, bool _payInZRO, bytes calldata _adapterParam) external view returns (uint nativeFee, uint zroFee);\\r\\n\\r\\n    // @notice get this Endpoint's immutable source identifier\\r\\n    function getChainId() external view returns (uint16);\\r\\n\\r\\n    // @notice the interface to retry failed message on this Endpoint destination\\r\\n    // @param _srcChainId - the source chain identifier\\r\\n    // @param _srcAddress - the source chain contract address\\r\\n    // @param _payload - the payload to be retried\\r\\n    function retryPayload(uint16 _srcChainId, bytes calldata _srcAddress, bytes calldata _payload) external;\\r\\n\\r\\n    // @notice query if any STORED payload (message blocking) at the endpoint.\\r\\n    // @param _srcChainId - the source chain identifier\\r\\n    // @param _srcAddress - the source chain contract address\\r\\n    function hasStoredPayload(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool);\\r\\n\\r\\n    // @notice query if the _libraryAddress is valid for sending msgs.\\r\\n    // @param _userApplication - the user app address on this EVM chain\\r\\n    function getSendLibraryAddress(address _userApplication) external view returns (address);\\r\\n\\r\\n    // @notice query if the _libraryAddress is valid for receiving msgs.\\r\\n    // @param _userApplication - the user app address on this EVM chain\\r\\n    function getReceiveLibraryAddress(address _userApplication) external view returns (address);\\r\\n\\r\\n    // @notice query if the non-reentrancy guard for send() is on\\r\\n    // @return true if the guard is on. false otherwise\\r\\n    function isSendingPayload() external view returns (bool);\\r\\n\\r\\n    // @notice query if the non-reentrancy guard for receive() is on\\r\\n    // @return true if the guard is on. false otherwise\\r\\n    function isReceivingPayload() external view returns (bool);\\r\\n\\r\\n    // @notice get the configuration of the LayerZero messaging library of the specified version\\r\\n    // @param _version - messaging library version\\r\\n    // @param _chainId - the chainId for the pending config change\\r\\n    // @param _userApplication - the contract address of the user application\\r\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\r\\n    function getConfig(uint16 _version, uint16 _chainId, address _userApplication, uint _configType) external view returns (bytes memory);\\r\\n\\r\\n    // @notice get the send() LayerZero messaging library version\\r\\n    // @param _userApplication - the contract address of the user application\\r\\n    function getSendVersion(address _userApplication) external view returns (uint16);\\r\\n\\r\\n    // @notice get the lzReceive() LayerZero messaging library version\\r\\n    // @param _userApplication - the contract address of the user application\\r\\n    function getReceiveVersion(address _userApplication) external view returns (uint16);\\r\\n}\\r\\n\",\"keccak256\":\"0xb0f5dd5442f7f6dc3cba510c3170e5304de918b082ac658a2935433e80fefb66\",\"license\":\"MIT\"},\"layerzero-contracts/contracts/interfaces/ILayerZeroReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity >=0.5.0;\\r\\n\\r\\ninterface ILayerZeroReceiver {\\r\\n    // @notice LayerZero endpoint will invoke this function to deliver the message on the destination\\r\\n    // @param _srcChainId - the source endpoint identifier\\r\\n    // @param _srcAddress - the source sending contract address from the source chain\\r\\n    // @param _nonce - the ordered message nonce\\r\\n    // @param _payload - the signed payload is the UA bytes has encoded to be sent\\r\\n    function lzReceive(uint16 _srcChainId, bytes calldata _srcAddress, uint64 _nonce, bytes calldata _payload) external;\\r\\n}\\r\\n\",\"keccak256\":\"0xe377e661a587f855100ae6bbc9159e9aa279a99b632b445b3b9fb45a347da63a\",\"license\":\"MIT\"},\"layerzero-contracts/contracts/interfaces/ILayerZeroUserApplicationConfig.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity >=0.5.0;\\r\\n\\r\\ninterface ILayerZeroUserApplicationConfig {\\r\\n    // @notice set the configuration of the LayerZero messaging library of the specified version\\r\\n    // @param _version - messaging library version\\r\\n    // @param _chainId - the chainId for the pending config change\\r\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\r\\n    // @param _config - configuration in the bytes. can encode arbitrary content.\\r\\n    function setConfig(uint16 _version, uint16 _chainId, uint _configType, bytes calldata _config) external;\\r\\n\\r\\n    // @notice set the send() LayerZero messaging library version to _version\\r\\n    // @param _version - new messaging library version\\r\\n    function setSendVersion(uint16 _version) external;\\r\\n\\r\\n    // @notice set the lzReceive() LayerZero messaging library version to _version\\r\\n    // @param _version - new messaging library version\\r\\n    function setReceiveVersion(uint16 _version) external;\\r\\n\\r\\n    // @notice Only when the UA needs to resume the message flow in blocking mode and clear the stored payload\\r\\n    // @param _srcChainId - the chainId of the source chain\\r\\n    // @param _srcAddress - the contract address of the source contract at the source chain\\r\\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x42d10415d035529fcdff738d6542844ad58124b4e1da5a8ff92d6ddd8bf96513\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405162002367380380620023678339810160408190526100319161005d565b602a60055560068054600161ffff19918216811790925581541661ffff92909216919091179055610088565b60006020828403121561006f57600080fd5b815161ffff8116811461008157600080fd5b9392505050565b6122cf80620000986000396000f3fe6080604052600436106102305760003560e01c8063996f79c01161012e578063ca066b35116100ab578063db14f3051161006f578063db14f305146107ae578063e961a952146107c9578063e97a448a14610734578063f5ecbdbc146107df578063fdc07c701461081157600080fd5b8063ca066b3514610734578063cbed8b9c14610748578063d23104f114610769578063da1a7c9a14610288578063dab312771461078857600080fd5b8063b2086499116100f2578063b208649914610641578063c08f15a114610682578063c2fa4813146106cb578063c5803100146106eb578063c81b383a146106fe57600080fd5b8063996f79c0146105da5780639c729da114610445578063aaff5f16146105f0578063af406aa514610610578063b12107701461062657600080fd5b806340a7bb10116101bc57806371ba2fd61161018057806371ba2fd61461044557806376a386dc146104655780637a145748146104fe5780637f6df8e6146105685780639924d33b1461058857600080fd5b806340a7bb101461037f57806342d65a8d146103b45780634f055b04146103d45780635952c4ec146103f45780635b3011351461041857600080fd5b80630eaf6ea6116102035780630eaf6ea6146102e157806310ddb1371461026857806312a9ee6b146103115780632646af08146103405780633408e4701461036657600080fd5b806305bc710f1461023557806307e0db1714610268578063096568f61461028857806309eddf54146102a9575b600080fd5b34801561024157600080fd5b506004546102509061ffff1681565b60405161ffff90911681526020015b60405180910390f35b34801561027457600080fd5b50610286610283366004611a13565b50565b005b34801561029457600080fd5b506102506102a3366004611975565b50600190565b3480156102b557600080fd5b506102c96102c43660046119d2565b610831565b6040516001600160a01b03909116815260200161025f565b3480156102ed57600080fd5b506103016102fc366004611aea565b61084e565b604051901515815260200161025f565b34801561031d57600080fd5b5061033161032c366004611d8c565b610893565b60405161025f93929190611f3e565b34801561034c57600080fd5b5061028661035b366004611e96565b600791909155600855565b34801561037257600080fd5b5060015461ffff16610250565b34801561038b57600080fd5b5061039f61039a366004611a4a565b610990565b6040805192835260208301919091520161025f565b3480156103c057600080fd5b506102866103cf366004611aea565b6109b3565b3480156103e057600080fd5b506002546102c9906001600160a01b031681565b34801561040057600080fd5b5061040a60035481565b60405190815260200161025f565b34801561042457600080fd5b50610438610433366004611975565b610afa565b60405161025f9190611f7a565b34801561045157600080fd5b506102c9610460366004611975565b503090565b34801561047157600080fd5b506104d1610480366004611d3f565b600c6020908152600092835260409092208151808301840180519281529084019290930191909120915280546001909101546001600160401b03821691600160401b90046001600160a01b03169083565b604080516001600160401b0390941684526001600160a01b0390921660208401529082015260600161025f565b34801561050a57600080fd5b50610550610519366004611a2e565b61ffff82166000908152600b602090815260408083206001600160a01b03851684529091529020546001600160401b031692915050565b6040516001600160401b03909116815260200161025f565b34801561057457600080fd5b5061040a610583366004611aea565b610b2c565b34801561059457600080fd5b506105506105a3366004611d3f565b600a60209081526000928352604090922081518083018401805192815290840192909301919091209152546001600160401b031681565b3480156105e657600080fd5b5061040a60075481565b3480156105fc57600080fd5b5061028661060b366004611bf3565b610b68565b34801561061c57600080fd5b5061040a60085481565b34801561063257600080fd5b506006546102509061ffff1681565b34801561064d57600080fd5b5061055061065c366004611a2e565b600b6020908152600092835260408084209091529082529020546001600160401b031681565b34801561068e57600080fd5b5061028661069d366004611999565b6001600160a01b03918216600090815260208190526040902080546001600160a01b03191691909216179055565b3480156106d757600080fd5b506102866106e6366004611b3c565b610d7e565b6102866106f9366004611c73565b61130a565b34801561070a57600080fd5b506102c9610719366004611975565b6000602081905290815260409020546001600160a01b031681565b34801561074057600080fd5b506000610301565b34801561075457600080fd5b50610286610763366004611e2f565b50505050565b34801561077557600080fd5b506102866009805460ff19166001179055565b34801561079457600080fd5b506001546102c9906201000090046001600160a01b031681565b3480156107ba57600080fd5b506001546102509061ffff1681565b3480156107d557600080fd5b5061040a60055481565b3480156107eb57600080fd5b506104386107fa366004611de2565b604080516020810190915260008152949350505050565b34801561081d57600080fd5b5061055061082c366004611aea565b611504565b600080604051600284016002860382376009190151949350505050565b61ffff83166000908152600c602052604080822090518291906108749086908690611f2e565b9081526040519081900360200190206001015415159150509392505050565b600d60209081526000848152604090208351808501830180519281529083019285019290922091528054829081106108ca57600080fd5b6000918252602090912060029091020180546001820180546001600160a01b0383169650600160a01b9092046001600160401b0316945091925061090d906121af565b80601f0160208091040260200160405190810160405280929190818152602001828054610939906121af565b80156109865780601f1061095b57610100808354040283529160200191610986565b820191906000526020600020905b81548152906001019060200180831161096957829003601f168201915b5050505050905083565b60008084516007546109a29190612179565b915060085490509550959350505050565b61ffff83166000908152600c602052604080822090516109d69085908590611f2e565b9081526040519081900360200190206001810154909150610a3e5760405162461bcd60e51b815260206004820152601c60248201527f4c617965725a65726f3a206e6f2073746f726564207061796c6f61640000000060448201526064015b60405180910390fd5b8054600160401b90046001600160a01b03163314610a9e5760405162461bcd60e51b815260206004820152601960248201527f4c617965725a65726f3a20696e76616c69642063616c6c6572000000000000006044820152606401610a35565b80546001600160e01b0319168155600060018201556040517f23d2684f396e92a6e2ff2d16f98e6fea00d50cb27a64b531bc0748f730211f9890610ae790869086908690611f8d565b60405180910390a1610763848484611549565b6040805160609290921b6bffffffffffffffffffffffff19166020830152805180830360140181526034909201905290565b61ffff83166000908152600d60205260408082209051610b4f9085908590611f2e565b9081526040519081900360200190205490509392505050565b61ffff85166000908152600c60205260408082209051610b8b9087908790611f2e565b9081526040519081900360200190206001810154909150610bee5760405162461bcd60e51b815260206004820152601c60248201527f4c617965725a65726f3a206e6f2073746f726564207061796c6f6164000000006044820152606401610a35565b80546001600160401b031682148015610c21575080600101548383604051610c17929190611f2e565b6040518091039020145b610c6d5760405162461bcd60e51b815260206004820152601a60248201527f4c617965725a65726f3a20696e76616c6964207061796c6f61640000000000006044820152606401610a35565b80546001600160e01b03198116825560006001830181905561ffff88168152600a60205260408082209051600160401b9093046001600160a01b031692610cb79089908990611f2e565b90815260405190819003602001812054621d356760e01b82526001600160401b031691506001600160a01b03831690621d356790610d03908b908b908b9087908c908c90600401612066565b600060405180830381600087803b158015610d1d57600080fd5b505af1158015610d31573d6000803e3d6000fd5b505050507f612434f39581c8e7d99746c9c20c6eb0ce8c0eb99f007c5719d620841370957d8888888486604051610d6c95949392919061201d565b60405180910390a15050505050505050565b61ffff88166000908152600c60205260408082209051610da1908a908a90611f2e565b90815260200160405180910390209050600a60008a61ffff1661ffff1681526020019081526020016000208888604051610ddc929190611f2e565b9081526040519081900360200190208054600090610e02906001600160401b0316612205565b91906101000a8154816001600160401b0302191690836001600160401b0316021790556001600160401b0316856001600160401b031614610e7e5760405162461bcd60e51b81526020600482015260166024820152754c617965725a65726f3a2077726f6e67206e6f6e636560501b6044820152606401610a35565b6001810154156111725761ffff89166000908152600d60205260408082209051610eab908b908b90611f2e565b9081526020016040518091039020905060006040518060600160405280896001600160a01b03168152602001886001600160401b0316815260200186868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050509152508254909150156110fc57815460018181018455600084815260209081902084516002909402018054828601516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b039095169490941793909317835560408401518051859493610f9393908501920190611740565b50505060005b8254610fa790600190612198565b81101561107a57828181548110610fc057610fc0612258565b906000526020600020906002020183826001610fdc9190612161565b81548110610fec57610fec612258565b60009182526020909120825460029092020180546001600160a01b039092166001600160a01b031983168117825583546001600160e01b031990931617600160a01b928390046001600160401b03169092029190911781556001808301805491830191611058906121af565b6110639291906117c4565b509050508080611072906121ea565b915050610f99565b50808260008154811061108f5761108f612258565b600091825260209182902083516002909202018054848401516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b03909316929092179190911781556040830151805191926110f392600185019290910190611740565b5090505061116b565b815460018181018455600084815260209081902084516002909402018054828601516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b03909516949094179390931783556040840151805185949361116793908501920190611740565b5050505b50506112ff565b60095460ff1615611298576040518060600160405280848490506001600160401b03168152602001876001600160a01b0316815260200184846040516111b9929190611f2e565b604080519182900390912090915261ffff8b166000908152600c60205281902090516111e8908b908b90611f2e565b90815260408051918290036020908101832084518154868401516001600160a01b0316600160401b026001600160e01b03199091166001600160401b03909216919091171781559382015160019094019390935591810182526000815290517f0f9e4d95b62f08222d612b5ab92039cd8fbbbea550a95e8df9f927436bbdf5db91611281918c918c918c918c918c918b918b9190611fab565b60405180910390a16009805460ff191690556112ff565b604051621d356760e01b81526001600160a01b03871690621d3567906112cc908c908c908c908b908a908a90600401612066565b600060405180830381600087803b1580156112e657600080fd5b505af11580156112fa573d6000803e3d6000fd5b505050505b505050505050505050565b60006113168888610831565b6001600160a01b0380821660009081526020819052604090205491925016806113a75760405162461bcd60e51b815260206004820152603760248201527f4c617965725a65726f4d6f636b3a2064657374696e6174696f6e204c6179657260448201527f5a65726f20456e64706f696e74206e6f7420666f756e640000000000000000006064820152608401610a35565b6007546113b5908790612179565b3410156114165760405162461bcd60e51b815260206004820152602960248201527f4c617965725a65726f4d6f636b3a206e6f7420656e6f756768206e617469766560448201526820666f72206665657360b81b6064820152608401610a35565b61ffff8a166000908152600b6020908152604080832033845290915281208054829061144a906001600160401b0316612205565b82546001600160401b038083166101009490940a93840293021916919091179091559050600061147933610afa565b9050826001600160a01b031663c2fa4813600160009054906101000a900461ffff1683878660008f8f6040518863ffffffff1660e01b81526004016114c497969594939291906120fe565b600060405180830381600087803b1580156114de57600080fd5b505af11580156114f2573d6000803e3d6000fd5b50505050505050505050505050505050565b61ffff83166000908152600a602052604080822090516115279085908590611f2e565b908152604051908190036020019020546001600160401b031690509392505050565b61ffff83166000908152600d6020526040808220905161156c9085908590611f2e565b908152602001604051809103902090505b805415610763578054600090829061159790600190612198565b815481106115a7576115a7612258565b600091825260209182902060408051606081018252600290930290910180546001600160a01b03811684526001600160401b03600160a01b909104169383019390935260018301805492939291840191611600906121af565b80601f016020809104026020016040519081016040528092919081815260200182805461162c906121af565b80156116795780601f1061164e57610100808354040283529160200191611679565b820191906000526020600020905b81548152906001019060200180831161165c57829003601f168201915b505050505081525050905080600001516001600160a01b0316621d3567868686856020015186604001516040518663ffffffff1660e01b81526004016116c39594939291906120b3565b600060405180830381600087803b1580156116dd57600080fd5b505af11580156116f1573d6000803e3d6000fd5b505050508180548061170557611705612242565b60008281526020812060026000199093019283020180546001600160e01b031916815590611736600183018261183f565b505090555061157d565b82805461174c906121af565b90600052602060002090601f01602090048101928261176e57600085556117b4565b82601f1061178757805160ff19168380011785556117b4565b828001600101855582156117b4579182015b828111156117b4578251825591602001919060010190611799565b506117c0929150611875565b5090565b8280546117d0906121af565b90600052602060002090601f0160209004810192826117f257600085556117b4565b82601f1061180357805485556117b4565b828001600101855582156117b457600052602060002091601f016020900482015b828111156117b4578254825591600101919060010190611824565b50805461184b906121af565b6000825580601f1061185b575050565b601f01602090049060005260206000209081019061028391905b5b808211156117c05760008155600101611876565b60008083601f84011261189c57600080fd5b5081356001600160401b038111156118b357600080fd5b6020830191508360208285010111156118cb57600080fd5b9250929050565b600082601f8301126118e357600080fd5b81356001600160401b03808211156118fd576118fd61226e565b604051601f8301601f19908116603f011681019082821181831017156119255761192561226e565b8160405283815286602085880101111561193e57600080fd5b836020870160208301376000602085830101528094505050505092915050565b803561ffff8116811461197057600080fd5b919050565b60006020828403121561198757600080fd5b813561199281612284565b9392505050565b600080604083850312156119ac57600080fd5b82356119b781612284565b915060208301356119c781612284565b809150509250929050565b600080602083850312156119e557600080fd5b82356001600160401b038111156119fb57600080fd5b611a078582860161188a565b90969095509350505050565b600060208284031215611a2557600080fd5b6119928261195e565b60008060408385031215611a4157600080fd5b6119b78361195e565b600080600080600060a08688031215611a6257600080fd5b611a6b8661195e565b94506020860135611a7b81612284565b935060408601356001600160401b0380821115611a9757600080fd5b611aa389838a016118d2565b9450606088013591508115158214611aba57600080fd5b90925060808701359080821115611ad057600080fd5b50611add888289016118d2565b9150509295509295909350565b600080600060408486031215611aff57600080fd5b611b088461195e565b925060208401356001600160401b03811115611b2357600080fd5b611b2f8682870161188a565b9497909650939450505050565b60008060008060008060008060c0898b031215611b5857600080fd5b611b618961195e565b975060208901356001600160401b0380821115611b7d57600080fd5b611b898c838d0161188a565b909950975060408b01359150611b9e82612284565b90955060608a0135908082168214611bb557600080fd5b90945060808a0135935060a08a01359080821115611bd257600080fd5b50611bdf8b828c0161188a565b999c989b5096995094979396929594505050565b600080600080600060608688031215611c0b57600080fd5b611c148661195e565b945060208601356001600160401b0380821115611c3057600080fd5b611c3c89838a0161188a565b90965094506040880135915080821115611c5557600080fd5b50611c628882890161188a565b969995985093965092949392505050565b60008060008060008060008060c0898b031215611c8f57600080fd5b611c988961195e565b975060208901356001600160401b0380821115611cb457600080fd5b611cc08c838d0161188a565b909950975060408b0135915080821115611cd957600080fd5b611ce58c838d0161188a565b909750955060608b01359150611cfa82612284565b90935060808a013590611d0c82612284565b90925060a08a01359080821115611d2257600080fd5b50611d2f8b828c016118d2565b9150509295985092959890939650565b60008060408385031215611d5257600080fd5b611d5b8361195e565b915060208301356001600160401b03811115611d7657600080fd5b611d82858286016118d2565b9150509250929050565b600080600060608486031215611da157600080fd5b611daa8461195e565b925060208401356001600160401b03811115611dc557600080fd5b611dd1868287016118d2565b925050604084013590509250925092565b60008060008060808587031215611df857600080fd5b611e018561195e565b9350611e0f6020860161195e565b92506040850135611e1f81612284565b9396929550929360600135925050565b60008060008060808587031215611e4557600080fd5b611e4e8561195e565b9350611e5c6020860161195e565b92506040850135915060608501356001600160401b03811115611e7e57600080fd5b611e8a878288016118d2565b91505092959194509250565b60008060408385031215611ea957600080fd5b50508035926020909101359150565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6000815180845260005b81811015611f0757602081850181015186830182015201611eeb565b81811115611f19576000602083870101525b50601f01601f19169290920160200192915050565b8183823760009101908152919050565b6001600160a01b03841681526001600160401b0383166020820152606060408201819052600090611f7190830184611ee1565b95945050505050565b6020815260006119926020830184611ee1565b61ffff84168152604060208201526000611f71604083018486611eb8565b61ffff8916815260c060208201526000611fc960c08301898b611eb8565b6001600160a01b03881660408401526001600160401b03871660608401528281036080840152611ffa818688611eb8565b905082810360a084015261200e8185611ee1565b9b9a5050505050505050505050565b61ffff8616815260806020820152600061203b608083018688611eb8565b6001600160401b03949094166040830152506001600160a01b03919091166060909101529392505050565b61ffff87168152608060208201526000612084608083018789611eb8565b6001600160401b038616604084015282810360608401526120a6818587611eb8565b9998505050505050505050565b61ffff861681526080602082015260006120d1608083018688611eb8565b6001600160401b038516604084015282810360608401526120f28185611ee1565b98975050505050505050565b61ffff8816815260c06020820152600061211b60c0830189611ee1565b6001600160a01b03881660408401526001600160401b03871660608401526080830186905282810360a0840152612153818587611eb8565b9a9950505050505050505050565b600082198211156121745761217461222c565b500190565b60008160001904831182151516156121935761219361222c565b500290565b6000828210156121aa576121aa61222c565b500390565b600181811c908216806121c357607f821691505b602082108114156121e457634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156121fe576121fe61222c565b5060010190565b60006001600160401b03808316818114156122225761222261222c565b6001019392505050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461028357600080fdfea26469706673582212204db27e360507e6f47698d124ee34c7fc69db15d001835337a6c0670d5b2fc37664736f6c63430008060033",
  "deployedBytecode": "0x6080604052600436106102305760003560e01c8063996f79c01161012e578063ca066b35116100ab578063db14f3051161006f578063db14f305146107ae578063e961a952146107c9578063e97a448a14610734578063f5ecbdbc146107df578063fdc07c701461081157600080fd5b8063ca066b3514610734578063cbed8b9c14610748578063d23104f114610769578063da1a7c9a14610288578063dab312771461078857600080fd5b8063b2086499116100f2578063b208649914610641578063c08f15a114610682578063c2fa4813146106cb578063c5803100146106eb578063c81b383a146106fe57600080fd5b8063996f79c0146105da5780639c729da114610445578063aaff5f16146105f0578063af406aa514610610578063b12107701461062657600080fd5b806340a7bb10116101bc57806371ba2fd61161018057806371ba2fd61461044557806376a386dc146104655780637a145748146104fe5780637f6df8e6146105685780639924d33b1461058857600080fd5b806340a7bb101461037f57806342d65a8d146103b45780634f055b04146103d45780635952c4ec146103f45780635b3011351461041857600080fd5b80630eaf6ea6116102035780630eaf6ea6146102e157806310ddb1371461026857806312a9ee6b146103115780632646af08146103405780633408e4701461036657600080fd5b806305bc710f1461023557806307e0db1714610268578063096568f61461028857806309eddf54146102a9575b600080fd5b34801561024157600080fd5b506004546102509061ffff1681565b60405161ffff90911681526020015b60405180910390f35b34801561027457600080fd5b50610286610283366004611a13565b50565b005b34801561029457600080fd5b506102506102a3366004611975565b50600190565b3480156102b557600080fd5b506102c96102c43660046119d2565b610831565b6040516001600160a01b03909116815260200161025f565b3480156102ed57600080fd5b506103016102fc366004611aea565b61084e565b604051901515815260200161025f565b34801561031d57600080fd5b5061033161032c366004611d8c565b610893565b60405161025f93929190611f3e565b34801561034c57600080fd5b5061028661035b366004611e96565b600791909155600855565b34801561037257600080fd5b5060015461ffff16610250565b34801561038b57600080fd5b5061039f61039a366004611a4a565b610990565b6040805192835260208301919091520161025f565b3480156103c057600080fd5b506102866103cf366004611aea565b6109b3565b3480156103e057600080fd5b506002546102c9906001600160a01b031681565b34801561040057600080fd5b5061040a60035481565b60405190815260200161025f565b34801561042457600080fd5b50610438610433366004611975565b610afa565b60405161025f9190611f7a565b34801561045157600080fd5b506102c9610460366004611975565b503090565b34801561047157600080fd5b506104d1610480366004611d3f565b600c6020908152600092835260409092208151808301840180519281529084019290930191909120915280546001909101546001600160401b03821691600160401b90046001600160a01b03169083565b604080516001600160401b0390941684526001600160a01b0390921660208401529082015260600161025f565b34801561050a57600080fd5b50610550610519366004611a2e565b61ffff82166000908152600b602090815260408083206001600160a01b03851684529091529020546001600160401b031692915050565b6040516001600160401b03909116815260200161025f565b34801561057457600080fd5b5061040a610583366004611aea565b610b2c565b34801561059457600080fd5b506105506105a3366004611d3f565b600a60209081526000928352604090922081518083018401805192815290840192909301919091209152546001600160401b031681565b3480156105e657600080fd5b5061040a60075481565b3480156105fc57600080fd5b5061028661060b366004611bf3565b610b68565b34801561061c57600080fd5b5061040a60085481565b34801561063257600080fd5b506006546102509061ffff1681565b34801561064d57600080fd5b5061055061065c366004611a2e565b600b6020908152600092835260408084209091529082529020546001600160401b031681565b34801561068e57600080fd5b5061028661069d366004611999565b6001600160a01b03918216600090815260208190526040902080546001600160a01b03191691909216179055565b3480156106d757600080fd5b506102866106e6366004611b3c565b610d7e565b6102866106f9366004611c73565b61130a565b34801561070a57600080fd5b506102c9610719366004611975565b6000602081905290815260409020546001600160a01b031681565b34801561074057600080fd5b506000610301565b34801561075457600080fd5b50610286610763366004611e2f565b50505050565b34801561077557600080fd5b506102866009805460ff19166001179055565b34801561079457600080fd5b506001546102c9906201000090046001600160a01b031681565b3480156107ba57600080fd5b506001546102509061ffff1681565b3480156107d557600080fd5b5061040a60055481565b3480156107eb57600080fd5b506104386107fa366004611de2565b604080516020810190915260008152949350505050565b34801561081d57600080fd5b5061055061082c366004611aea565b611504565b600080604051600284016002860382376009190151949350505050565b61ffff83166000908152600c602052604080822090518291906108749086908690611f2e565b9081526040519081900360200190206001015415159150509392505050565b600d60209081526000848152604090208351808501830180519281529083019285019290922091528054829081106108ca57600080fd5b6000918252602090912060029091020180546001820180546001600160a01b0383169650600160a01b9092046001600160401b0316945091925061090d906121af565b80601f0160208091040260200160405190810160405280929190818152602001828054610939906121af565b80156109865780601f1061095b57610100808354040283529160200191610986565b820191906000526020600020905b81548152906001019060200180831161096957829003601f168201915b5050505050905083565b60008084516007546109a29190612179565b915060085490509550959350505050565b61ffff83166000908152600c602052604080822090516109d69085908590611f2e565b9081526040519081900360200190206001810154909150610a3e5760405162461bcd60e51b815260206004820152601c60248201527f4c617965725a65726f3a206e6f2073746f726564207061796c6f61640000000060448201526064015b60405180910390fd5b8054600160401b90046001600160a01b03163314610a9e5760405162461bcd60e51b815260206004820152601960248201527f4c617965725a65726f3a20696e76616c69642063616c6c6572000000000000006044820152606401610a35565b80546001600160e01b0319168155600060018201556040517f23d2684f396e92a6e2ff2d16f98e6fea00d50cb27a64b531bc0748f730211f9890610ae790869086908690611f8d565b60405180910390a1610763848484611549565b6040805160609290921b6bffffffffffffffffffffffff19166020830152805180830360140181526034909201905290565b61ffff83166000908152600d60205260408082209051610b4f9085908590611f2e565b9081526040519081900360200190205490509392505050565b61ffff85166000908152600c60205260408082209051610b8b9087908790611f2e565b9081526040519081900360200190206001810154909150610bee5760405162461bcd60e51b815260206004820152601c60248201527f4c617965725a65726f3a206e6f2073746f726564207061796c6f6164000000006044820152606401610a35565b80546001600160401b031682148015610c21575080600101548383604051610c17929190611f2e565b6040518091039020145b610c6d5760405162461bcd60e51b815260206004820152601a60248201527f4c617965725a65726f3a20696e76616c6964207061796c6f61640000000000006044820152606401610a35565b80546001600160e01b03198116825560006001830181905561ffff88168152600a60205260408082209051600160401b9093046001600160a01b031692610cb79089908990611f2e565b90815260405190819003602001812054621d356760e01b82526001600160401b031691506001600160a01b03831690621d356790610d03908b908b908b9087908c908c90600401612066565b600060405180830381600087803b158015610d1d57600080fd5b505af1158015610d31573d6000803e3d6000fd5b505050507f612434f39581c8e7d99746c9c20c6eb0ce8c0eb99f007c5719d620841370957d8888888486604051610d6c95949392919061201d565b60405180910390a15050505050505050565b61ffff88166000908152600c60205260408082209051610da1908a908a90611f2e565b90815260200160405180910390209050600a60008a61ffff1661ffff1681526020019081526020016000208888604051610ddc929190611f2e565b9081526040519081900360200190208054600090610e02906001600160401b0316612205565b91906101000a8154816001600160401b0302191690836001600160401b0316021790556001600160401b0316856001600160401b031614610e7e5760405162461bcd60e51b81526020600482015260166024820152754c617965725a65726f3a2077726f6e67206e6f6e636560501b6044820152606401610a35565b6001810154156111725761ffff89166000908152600d60205260408082209051610eab908b908b90611f2e565b9081526020016040518091039020905060006040518060600160405280896001600160a01b03168152602001886001600160401b0316815260200186868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050509152508254909150156110fc57815460018181018455600084815260209081902084516002909402018054828601516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b039095169490941793909317835560408401518051859493610f9393908501920190611740565b50505060005b8254610fa790600190612198565b81101561107a57828181548110610fc057610fc0612258565b906000526020600020906002020183826001610fdc9190612161565b81548110610fec57610fec612258565b60009182526020909120825460029092020180546001600160a01b039092166001600160a01b031983168117825583546001600160e01b031990931617600160a01b928390046001600160401b03169092029190911781556001808301805491830191611058906121af565b6110639291906117c4565b509050508080611072906121ea565b915050610f99565b50808260008154811061108f5761108f612258565b600091825260209182902083516002909202018054848401516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b03909316929092179190911781556040830151805191926110f392600185019290910190611740565b5090505061116b565b815460018181018455600084815260209081902084516002909402018054828601516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b03909516949094179390931783556040840151805185949361116793908501920190611740565b5050505b50506112ff565b60095460ff1615611298576040518060600160405280848490506001600160401b03168152602001876001600160a01b0316815260200184846040516111b9929190611f2e565b604080519182900390912090915261ffff8b166000908152600c60205281902090516111e8908b908b90611f2e565b90815260408051918290036020908101832084518154868401516001600160a01b0316600160401b026001600160e01b03199091166001600160401b03909216919091171781559382015160019094019390935591810182526000815290517f0f9e4d95b62f08222d612b5ab92039cd8fbbbea550a95e8df9f927436bbdf5db91611281918c918c918c918c918c918b918b9190611fab565b60405180910390a16009805460ff191690556112ff565b604051621d356760e01b81526001600160a01b03871690621d3567906112cc908c908c908c908b908a908a90600401612066565b600060405180830381600087803b1580156112e657600080fd5b505af11580156112fa573d6000803e3d6000fd5b505050505b505050505050505050565b60006113168888610831565b6001600160a01b0380821660009081526020819052604090205491925016806113a75760405162461bcd60e51b815260206004820152603760248201527f4c617965725a65726f4d6f636b3a2064657374696e6174696f6e204c6179657260448201527f5a65726f20456e64706f696e74206e6f7420666f756e640000000000000000006064820152608401610a35565b6007546113b5908790612179565b3410156114165760405162461bcd60e51b815260206004820152602960248201527f4c617965725a65726f4d6f636b3a206e6f7420656e6f756768206e617469766560448201526820666f72206665657360b81b6064820152608401610a35565b61ffff8a166000908152600b6020908152604080832033845290915281208054829061144a906001600160401b0316612205565b82546001600160401b038083166101009490940a93840293021916919091179091559050600061147933610afa565b9050826001600160a01b031663c2fa4813600160009054906101000a900461ffff1683878660008f8f6040518863ffffffff1660e01b81526004016114c497969594939291906120fe565b600060405180830381600087803b1580156114de57600080fd5b505af11580156114f2573d6000803e3d6000fd5b50505050505050505050505050505050565b61ffff83166000908152600a602052604080822090516115279085908590611f2e565b908152604051908190036020019020546001600160401b031690509392505050565b61ffff83166000908152600d6020526040808220905161156c9085908590611f2e565b908152602001604051809103902090505b805415610763578054600090829061159790600190612198565b815481106115a7576115a7612258565b600091825260209182902060408051606081018252600290930290910180546001600160a01b03811684526001600160401b03600160a01b909104169383019390935260018301805492939291840191611600906121af565b80601f016020809104026020016040519081016040528092919081815260200182805461162c906121af565b80156116795780601f1061164e57610100808354040283529160200191611679565b820191906000526020600020905b81548152906001019060200180831161165c57829003601f168201915b505050505081525050905080600001516001600160a01b0316621d3567868686856020015186604001516040518663ffffffff1660e01b81526004016116c39594939291906120b3565b600060405180830381600087803b1580156116dd57600080fd5b505af11580156116f1573d6000803e3d6000fd5b505050508180548061170557611705612242565b60008281526020812060026000199093019283020180546001600160e01b031916815590611736600183018261183f565b505090555061157d565b82805461174c906121af565b90600052602060002090601f01602090048101928261176e57600085556117b4565b82601f1061178757805160ff19168380011785556117b4565b828001600101855582156117b4579182015b828111156117b4578251825591602001919060010190611799565b506117c0929150611875565b5090565b8280546117d0906121af565b90600052602060002090601f0160209004810192826117f257600085556117b4565b82601f1061180357805485556117b4565b828001600101855582156117b457600052602060002091601f016020900482015b828111156117b4578254825591600101919060010190611824565b50805461184b906121af565b6000825580601f1061185b575050565b601f01602090049060005260206000209081019061028391905b5b808211156117c05760008155600101611876565b60008083601f84011261189c57600080fd5b5081356001600160401b038111156118b357600080fd5b6020830191508360208285010111156118cb57600080fd5b9250929050565b600082601f8301126118e357600080fd5b81356001600160401b03808211156118fd576118fd61226e565b604051601f8301601f19908116603f011681019082821181831017156119255761192561226e565b8160405283815286602085880101111561193e57600080fd5b836020870160208301376000602085830101528094505050505092915050565b803561ffff8116811461197057600080fd5b919050565b60006020828403121561198757600080fd5b813561199281612284565b9392505050565b600080604083850312156119ac57600080fd5b82356119b781612284565b915060208301356119c781612284565b809150509250929050565b600080602083850312156119e557600080fd5b82356001600160401b038111156119fb57600080fd5b611a078582860161188a565b90969095509350505050565b600060208284031215611a2557600080fd5b6119928261195e565b60008060408385031215611a4157600080fd5b6119b78361195e565b600080600080600060a08688031215611a6257600080fd5b611a6b8661195e565b94506020860135611a7b81612284565b935060408601356001600160401b0380821115611a9757600080fd5b611aa389838a016118d2565b9450606088013591508115158214611aba57600080fd5b90925060808701359080821115611ad057600080fd5b50611add888289016118d2565b9150509295509295909350565b600080600060408486031215611aff57600080fd5b611b088461195e565b925060208401356001600160401b03811115611b2357600080fd5b611b2f8682870161188a565b9497909650939450505050565b60008060008060008060008060c0898b031215611b5857600080fd5b611b618961195e565b975060208901356001600160401b0380821115611b7d57600080fd5b611b898c838d0161188a565b909950975060408b01359150611b9e82612284565b90955060608a0135908082168214611bb557600080fd5b90945060808a0135935060a08a01359080821115611bd257600080fd5b50611bdf8b828c0161188a565b999c989b5096995094979396929594505050565b600080600080600060608688031215611c0b57600080fd5b611c148661195e565b945060208601356001600160401b0380821115611c3057600080fd5b611c3c89838a0161188a565b90965094506040880135915080821115611c5557600080fd5b50611c628882890161188a565b969995985093965092949392505050565b60008060008060008060008060c0898b031215611c8f57600080fd5b611c988961195e565b975060208901356001600160401b0380821115611cb457600080fd5b611cc08c838d0161188a565b909950975060408b0135915080821115611cd957600080fd5b611ce58c838d0161188a565b909750955060608b01359150611cfa82612284565b90935060808a013590611d0c82612284565b90925060a08a01359080821115611d2257600080fd5b50611d2f8b828c016118d2565b9150509295985092959890939650565b60008060408385031215611d5257600080fd5b611d5b8361195e565b915060208301356001600160401b03811115611d7657600080fd5b611d82858286016118d2565b9150509250929050565b600080600060608486031215611da157600080fd5b611daa8461195e565b925060208401356001600160401b03811115611dc557600080fd5b611dd1868287016118d2565b925050604084013590509250925092565b60008060008060808587031215611df857600080fd5b611e018561195e565b9350611e0f6020860161195e565b92506040850135611e1f81612284565b9396929550929360600135925050565b60008060008060808587031215611e4557600080fd5b611e4e8561195e565b9350611e5c6020860161195e565b92506040850135915060608501356001600160401b03811115611e7e57600080fd5b611e8a878288016118d2565b91505092959194509250565b60008060408385031215611ea957600080fd5b50508035926020909101359150565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6000815180845260005b81811015611f0757602081850181015186830182015201611eeb565b81811115611f19576000602083870101525b50601f01601f19169290920160200192915050565b8183823760009101908152919050565b6001600160a01b03841681526001600160401b0383166020820152606060408201819052600090611f7190830184611ee1565b95945050505050565b6020815260006119926020830184611ee1565b61ffff84168152604060208201526000611f71604083018486611eb8565b61ffff8916815260c060208201526000611fc960c08301898b611eb8565b6001600160a01b03881660408401526001600160401b03871660608401528281036080840152611ffa818688611eb8565b905082810360a084015261200e8185611ee1565b9b9a5050505050505050505050565b61ffff8616815260806020820152600061203b608083018688611eb8565b6001600160401b03949094166040830152506001600160a01b03919091166060909101529392505050565b61ffff87168152608060208201526000612084608083018789611eb8565b6001600160401b038616604084015282810360608401526120a6818587611eb8565b9998505050505050505050565b61ffff861681526080602082015260006120d1608083018688611eb8565b6001600160401b038516604084015282810360608401526120f28185611ee1565b98975050505050505050565b61ffff8816815260c06020820152600061211b60c0830189611ee1565b6001600160a01b03881660408401526001600160401b03871660608401526080830186905282810360a0840152612153818587611eb8565b9a9950505050505050505050565b600082198211156121745761217461222c565b500190565b60008160001904831182151516156121935761219361222c565b500290565b6000828210156121aa576121aa61222c565b500390565b600181811c908216806121c357607f821691505b602082108114156121e457634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156121fe576121fe61222c565b5060010190565b60006001600160401b03808316818114156122225761222261222c565b6001019392505050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461028357600080fdfea26469706673582212204db27e360507e6f47698d124ee34c7fc69db15d001835337a6c0670d5b2fc37664736f6c63430008060033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 15948,
        "contract": "contracts/mocks/LZEndpointMock.sol:LZEndpointMock",
        "label": "lzEndpointLookup",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 15950,
        "contract": "contracts/mocks/LZEndpointMock.sol:LZEndpointMock",
        "label": "mockChainId",
        "offset": 0,
        "slot": "1",
        "type": "t_uint16"
      },
      {
        "astId": 15952,
        "contract": "contracts/mocks/LZEndpointMock.sol:LZEndpointMock",
        "label": "mockOracle",
        "offset": 2,
        "slot": "1",
        "type": "t_address_payable"
      },
      {
        "astId": 15954,
        "contract": "contracts/mocks/LZEndpointMock.sol:LZEndpointMock",
        "label": "mockRelayer",
        "offset": 0,
        "slot": "2",
        "type": "t_address_payable"
      },
      {
        "astId": 15956,
        "contract": "contracts/mocks/LZEndpointMock.sol:LZEndpointMock",
        "label": "mockBlockConfirmations",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 15958,
        "contract": "contracts/mocks/LZEndpointMock.sol:LZEndpointMock",
        "label": "mockLibraryVersion",
        "offset": 0,
        "slot": "4",
        "type": "t_uint16"
      },
      {
        "astId": 15960,
        "contract": "contracts/mocks/LZEndpointMock.sol:LZEndpointMock",
        "label": "mockStaticNativeFee",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 15962,
        "contract": "contracts/mocks/LZEndpointMock.sol:LZEndpointMock",
        "label": "mockLayerZeroVersion",
        "offset": 0,
        "slot": "6",
        "type": "t_uint16"
      },
      {
        "astId": 15964,
        "contract": "contracts/mocks/LZEndpointMock.sol:LZEndpointMock",
        "label": "nativeFee",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 15966,
        "contract": "contracts/mocks/LZEndpointMock.sol:LZEndpointMock",
        "label": "zroFee",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 15968,
        "contract": "contracts/mocks/LZEndpointMock.sol:LZEndpointMock",
        "label": "nextMsgBLocked",
        "offset": 0,
        "slot": "9",
        "type": "t_bool"
      },
      {
        "astId": 15988,
        "contract": "contracts/mocks/LZEndpointMock.sol:LZEndpointMock",
        "label": "inboundNonce",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_uint64))"
      },
      {
        "astId": 15994,
        "contract": "contracts/mocks/LZEndpointMock.sol:LZEndpointMock",
        "label": "outboundNonce",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_uint16,t_mapping(t_address,t_uint64))"
      },
      {
        "astId": 16001,
        "contract": "contracts/mocks/LZEndpointMock.sol:LZEndpointMock",
        "label": "storedPayload",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_struct(StoredPayload)15975_storage))"
      },
      {
        "astId": 16009,
        "contract": "contracts/mocks/LZEndpointMock.sol:LZEndpointMock",
        "label": "msgsToDeliver",
        "offset": 0,
        "slot": "13",
        "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_array(t_struct(QueuedPayload)15982_storage)dyn_storage))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(QueuedPayload)15982_storage)dyn_storage": {
        "base": "t_struct(QueuedPayload)15982_storage",
        "encoding": "dynamic_array",
        "label": "struct LZEndpointMock.QueuedPayload[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_bytes_memory_ptr": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_uint64)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint64)",
        "numberOfBytes": "32",
        "value": "t_uint64"
      },
      "t_mapping(t_bytes_memory_ptr,t_array(t_struct(QueuedPayload)15982_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_bytes_memory_ptr",
        "label": "mapping(bytes => struct LZEndpointMock.QueuedPayload[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(QueuedPayload)15982_storage)dyn_storage"
      },
      "t_mapping(t_bytes_memory_ptr,t_struct(StoredPayload)15975_storage)": {
        "encoding": "mapping",
        "key": "t_bytes_memory_ptr",
        "label": "mapping(bytes => struct LZEndpointMock.StoredPayload)",
        "numberOfBytes": "32",
        "value": "t_struct(StoredPayload)15975_storage"
      },
      "t_mapping(t_bytes_memory_ptr,t_uint64)": {
        "encoding": "mapping",
        "key": "t_bytes_memory_ptr",
        "label": "mapping(bytes => uint64)",
        "numberOfBytes": "32",
        "value": "t_uint64"
      },
      "t_mapping(t_uint16,t_mapping(t_address,t_uint64))": {
        "encoding": "mapping",
        "key": "t_uint16",
        "label": "mapping(uint16 => mapping(address => uint64))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint64)"
      },
      "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_array(t_struct(QueuedPayload)15982_storage)dyn_storage))": {
        "encoding": "mapping",
        "key": "t_uint16",
        "label": "mapping(uint16 => mapping(bytes => struct LZEndpointMock.QueuedPayload[]))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes_memory_ptr,t_array(t_struct(QueuedPayload)15982_storage)dyn_storage)"
      },
      "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_struct(StoredPayload)15975_storage))": {
        "encoding": "mapping",
        "key": "t_uint16",
        "label": "mapping(uint16 => mapping(bytes => struct LZEndpointMock.StoredPayload))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes_memory_ptr,t_struct(StoredPayload)15975_storage)"
      },
      "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_uint64))": {
        "encoding": "mapping",
        "key": "t_uint16",
        "label": "mapping(uint16 => mapping(bytes => uint64))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes_memory_ptr,t_uint64)"
      },
      "t_struct(QueuedPayload)15982_storage": {
        "encoding": "inplace",
        "label": "struct LZEndpointMock.QueuedPayload",
        "members": [
          {
            "astId": 15977,
            "contract": "contracts/mocks/LZEndpointMock.sol:LZEndpointMock",
            "label": "dstAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 15979,
            "contract": "contracts/mocks/LZEndpointMock.sol:LZEndpointMock",
            "label": "nonce",
            "offset": 20,
            "slot": "0",
            "type": "t_uint64"
          },
          {
            "astId": 15981,
            "contract": "contracts/mocks/LZEndpointMock.sol:LZEndpointMock",
            "label": "payload",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(StoredPayload)15975_storage": {
        "encoding": "inplace",
        "label": "struct LZEndpointMock.StoredPayload",
        "members": [
          {
            "astId": 15970,
            "contract": "contracts/mocks/LZEndpointMock.sol:LZEndpointMock",
            "label": "payloadLength",
            "offset": 0,
            "slot": "0",
            "type": "t_uint64"
          },
          {
            "astId": 15972,
            "contract": "contracts/mocks/LZEndpointMock.sol:LZEndpointMock",
            "label": "dstAddress",
            "offset": 8,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 15974,
            "contract": "contracts/mocks/LZEndpointMock.sol:LZEndpointMock",
            "label": "payloadHash",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint16": {
        "encoding": "inplace",
        "label": "uint16",
        "numberOfBytes": "2"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      }
    }
  }
}