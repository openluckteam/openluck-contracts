{
  "address": "0x2916C077cbcb0c72786C7BdbE95Ee1d97Ffd289b",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_lzEndpoint",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_executor",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "_srcChainId",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "_srcAddress",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "_nonce",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "_payload",
          "type": "bytes"
        }
      ],
      "name": "MessageFailed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "msgType",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "nonce",
          "type": "uint64"
        }
      ],
      "name": "SendMsg",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "_srcChainId",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "_srcAddress",
          "type": "bytes"
        }
      ],
      "name": "SetTrustedRemote",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "EXECUTOR",
      "outputs": [
        {
          "internalType": "contract ILucksExecutor",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_dstChainId",
          "type": "uint16"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "nftChainId",
              "type": "uint16"
            },
            {
              "internalType": "address",
              "name": "nftContract",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "tokenIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "tokenAmounts",
              "type": "uint256[]"
            },
            {
              "internalType": "address",
              "name": "acceptToken",
              "type": "address"
            },
            {
              "internalType": "enum TaskStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "targetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint16",
              "name": "paymentStrategy",
              "type": "uint16"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct ExclusiveToken",
              "name": "exclusiveToken",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "amountCollected",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "depositId",
              "type": "uint256"
            }
          ],
          "internalType": "struct TaskItem",
          "name": "item",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint16",
              "name": "chainId",
              "type": "uint16"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "note",
              "type": "string"
            }
          ],
          "internalType": "struct TaskExt",
          "name": "ext",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "dstGasForCall",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dstNativeAmount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "dstNativeAddr",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "zroPaymentAddr",
              "type": "bytes"
            }
          ],
          "internalType": "struct lzTxObj",
          "name": "_lzTxParams",
          "type": "tuple"
        }
      ],
      "name": "estimateCreateTaskFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "nativeFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "zroFee",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_dstChainId",
          "type": "uint16"
        },
        {
          "internalType": "address payable",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "depositId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "dstGasForCall",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dstNativeAmount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "dstNativeAddr",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "zroPaymentAddr",
              "type": "bytes"
            }
          ],
          "internalType": "struct lzTxObj",
          "name": "_lzTxParams",
          "type": "tuple"
        }
      ],
      "name": "estimateWithdrawNFTsFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "nativeFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "zroFee",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "name": "failedMessages",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_srcChainId",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "_srcAddress",
          "type": "bytes"
        }
      ],
      "name": "forceResumeReceive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "name": "gasLookup",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_version",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "_chainId",
          "type": "uint16"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_configType",
          "type": "uint256"
        }
      ],
      "name": "getConfig",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_srcChainId",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "_srcAddress",
          "type": "bytes"
        }
      ],
      "name": "isTrustedRemote",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lzEndpoint",
      "outputs": [
        {
          "internalType": "contract ILayerZeroEndpoint",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_srcChainId",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "_srcAddress",
          "type": "bytes"
        },
        {
          "internalType": "uint64",
          "name": "_nonce",
          "type": "uint64"
        },
        {
          "internalType": "bytes",
          "name": "_payload",
          "type": "bytes"
        }
      ],
      "name": "lzReceive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_srcChainId",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "_srcAddress",
          "type": "bytes"
        },
        {
          "internalType": "uint64",
          "name": "_nonce",
          "type": "uint64"
        },
        {
          "internalType": "bytes",
          "name": "_payload",
          "type": "bytes"
        }
      ],
      "name": "nonblockingLzReceive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_dstChainId",
          "type": "uint16"
        },
        {
          "internalType": "uint8",
          "name": "_functionType",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "_note",
          "type": "string"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "dstGasForCall",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dstNativeAmount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "dstNativeAddr",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "zroPaymentAddr",
              "type": "bytes"
            }
          ],
          "internalType": "struct lzTxObj",
          "name": "_lzTxParams",
          "type": "tuple"
        }
      ],
      "name": "quoteLayerZeroFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "nativeFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "zroFee",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_srcChainId",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "_srcAddress",
          "type": "bytes"
        },
        {
          "internalType": "uint64",
          "name": "_nonce",
          "type": "uint64"
        },
        {
          "internalType": "bytes",
          "name": "_payload",
          "type": "bytes"
        }
      ],
      "name": "retryMessage",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_dstChainId",
          "type": "uint16"
        },
        {
          "internalType": "address payable",
          "name": "_refundAddress",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "nftChainId",
              "type": "uint16"
            },
            {
              "internalType": "address",
              "name": "nftContract",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "tokenIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "tokenAmounts",
              "type": "uint256[]"
            },
            {
              "internalType": "address",
              "name": "acceptToken",
              "type": "address"
            },
            {
              "internalType": "enum TaskStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "targetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint16",
              "name": "paymentStrategy",
              "type": "uint16"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct ExclusiveToken",
              "name": "exclusiveToken",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "amountCollected",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "depositId",
              "type": "uint256"
            }
          ],
          "internalType": "struct TaskItem",
          "name": "item",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint16",
              "name": "chainId",
              "type": "uint16"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "note",
              "type": "string"
            }
          ],
          "internalType": "struct TaskExt",
          "name": "ext",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "dstGasForCall",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dstNativeAmount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "dstNativeAddr",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "zroPaymentAddr",
              "type": "bytes"
            }
          ],
          "internalType": "struct lzTxObj",
          "name": "_lzTxParams",
          "type": "tuple"
        }
      ],
      "name": "sendCreateTask",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_dstChainId",
          "type": "uint16"
        },
        {
          "internalType": "address payable",
          "name": "_refundAddress",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "depositId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "dstGasForCall",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dstNativeAmount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "dstNativeAddr",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "zroPaymentAddr",
              "type": "bytes"
            }
          ],
          "internalType": "struct lzTxObj",
          "name": "_lzTxParams",
          "type": "tuple"
        }
      ],
      "name": "sendWithdrawNFTs",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_version",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "_chainId",
          "type": "uint16"
        },
        {
          "internalType": "uint256",
          "name": "_configType",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_config",
          "type": "bytes"
        }
      ],
      "name": "setConfig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ILucksExecutor",
          "name": "_executor",
          "type": "address"
        }
      ],
      "name": "setExecutor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_dstChainId",
          "type": "uint16"
        },
        {
          "internalType": "uint8",
          "name": "_functionType",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "_gasAmount",
          "type": "uint256"
        }
      ],
      "name": "setGasAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_version",
          "type": "uint16"
        }
      ],
      "name": "setReceiveVersion",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_version",
          "type": "uint16"
        }
      ],
      "name": "setSendVersion",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_srcChainId",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "_srcAddress",
          "type": "bytes"
        }
      ],
      "name": "setTrustedRemote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "enable",
          "type": "bool"
        }
      ],
      "name": "setUseLayerZeroToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "name": "trustedRemoteLookup",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "useLayerZeroToken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x32c7ee9326420e5d1bb45a5bc860161a9a43ddfdae64594ea3239961c0803206",
  "receipt": {
    "to": null,
    "from": "0x8c623589Ce38936A138a70cCE554553473BbC0f4",
    "contractAddress": "0x2916C077cbcb0c72786C7BdbE95Ee1d97Ffd289b",
    "transactionIndex": 0,
    "gasUsed": "3068889",
    "logsBloom": "0x
    "blockHash": "0x067b89978dd0ddcd9a016ec2731db3c70a386406298a490faf05cad82f07bce5",
    "transactionHash": "0x32c7ee9326420e5d1bb45a5bc860161a9a43ddfdae64594ea3239961c0803206",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 18208,
        "transactionHash": "0x32c7ee9326420e5d1bb45a5bc860161a9a43ddfdae64594ea3239961c0803206",
        "address": "0x2916C077cbcb0c72786C7BdbE95Ee1d97Ffd289b",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000008c623589ce38936a138a70cce554553473bbc0f4"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x067b89978dd0ddcd9a016ec2731db3c70a386406298a490faf05cad82f07bce5"
      }
    ],
    "blockNumber": 18208,
    "cumulativeGasUsed": "3068889",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x47ea40DB06DE607c55A12E8d9CFCf5B9852B3e29",
    "0x686746214BCc37b7D4935B098C4899031C288fFd"
  ],
  "numDeployments": 1,
  "solcInputHash": "1a9c64e66e0f1071b3b5090c79ef260f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lzEndpoint\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_executor\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"MessageFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"msgType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"name\":\"SendMsg\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"SetTrustedRemote\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"EXECUTOR\",\"outputs\":[{\"internalType\":\"contract ILucksExecutor\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"nftChainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"acceptToken\",\"type\":\"address\"},{\"internalType\":\"enum TaskStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"targetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"paymentStrategy\",\"type\":\"uint16\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ExclusiveToken\",\"name\":\"exclusiveToken\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amountCollected\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositId\",\"type\":\"uint256\"}],\"internalType\":\"struct TaskItem\",\"name\":\"item\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"note\",\"type\":\"string\"}],\"internalType\":\"struct TaskExt\",\"name\":\"ext\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"dstGasForCall\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dstNativeAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"dstNativeAddr\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"zroPaymentAddr\",\"type\":\"bytes\"}],\"internalType\":\"struct lzTxObj\",\"name\":\"_lzTxParams\",\"type\":\"tuple\"}],\"name\":\"estimateCreateTaskFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"zroFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"address payable\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"depositId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"dstGasForCall\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dstNativeAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"dstNativeAddr\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"zroPaymentAddr\",\"type\":\"bytes\"}],\"internalType\":\"struct lzTxObj\",\"name\":\"_lzTxParams\",\"type\":\"tuple\"}],\"name\":\"estimateWithdrawNFTsFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"zroFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"failedMessages\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"forceResumeReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"gasLookup\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"}],\"name\":\"getConfig\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"isTrustedRemote\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lzEndpoint\",\"outputs\":[{\"internalType\":\"contract ILayerZeroEndpoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"lzReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"nonblockingLzReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"_functionType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"_note\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"dstGasForCall\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dstNativeAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"dstNativeAddr\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"zroPaymentAddr\",\"type\":\"bytes\"}],\"internalType\":\"struct lzTxObj\",\"name\":\"_lzTxParams\",\"type\":\"tuple\"}],\"name\":\"quoteLayerZeroFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"zroFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"retryMessage\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"address payable\",\"name\":\"_refundAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"nftChainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"acceptToken\",\"type\":\"address\"},{\"internalType\":\"enum TaskStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"targetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"paymentStrategy\",\"type\":\"uint16\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ExclusiveToken\",\"name\":\"exclusiveToken\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amountCollected\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositId\",\"type\":\"uint256\"}],\"internalType\":\"struct TaskItem\",\"name\":\"item\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"note\",\"type\":\"string\"}],\"internalType\":\"struct TaskExt\",\"name\":\"ext\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"dstGasForCall\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dstNativeAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"dstNativeAddr\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"zroPaymentAddr\",\"type\":\"bytes\"}],\"internalType\":\"struct lzTxObj\",\"name\":\"_lzTxParams\",\"type\":\"tuple\"}],\"name\":\"sendCreateTask\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"address payable\",\"name\":\"_refundAddress\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"depositId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"dstGasForCall\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dstNativeAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"dstNativeAddr\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"zroPaymentAddr\",\"type\":\"bytes\"}],\"internalType\":\"struct lzTxObj\",\"name\":\"_lzTxParams\",\"type\":\"tuple\"}],\"name\":\"sendWithdrawNFTs\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_config\",\"type\":\"bytes\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ILucksExecutor\",\"name\":\"_executor\",\"type\":\"address\"}],\"name\":\"setExecutor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"_functionType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_gasAmount\",\"type\":\"uint256\"}],\"name\":\"setGasAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setReceiveVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setSendVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"setTrustedRemote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"enable\",\"type\":\"bool\"}],\"name\":\"setUseLayerZeroToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"trustedRemoteLookup\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"useLayerZeroToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setExecutor(address)\":{\"notice\":\"set operator\"},\"setUseLayerZeroToken(bool)\":{\"notice\":\"set useLayerZeroToken\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LucksBridge.sol\":\"LucksBridge\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\"},\"contracts/LucksBridge.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\npragma abicoder v2;\\r\\n\\r\\n// imports\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport \\\"layerzero-contracts/contracts/lzApp/NonblockingLzApp.sol\\\";\\r\\n\\r\\n// interfaces\\r\\nimport \\\"./interfaces/ILucksExecutor.sol\\\";\\r\\nimport \\\"./interfaces/ILucksBridge.sol\\\";\\r\\n\\r\\ncontract LucksBridge is NonblockingLzApp, ILucksBridge {\\r\\n    using SafeMath for uint256;\\r\\n    //---------------------------------------------------------------------------\\r\\n    // CONSTANTS\\r\\n    uint8 internal constant TYPE_CREATE_TASK = 1;\\r\\n    uint8 internal constant TYPE_WITHDRAW_NFT = 2;\\r\\n\\r\\n    //---------------------------------------------------------------------------\\r\\n    // VARIABLES\\r\\n    mapping(uint16 => mapping(uint8 => uint256)) public gasLookup;\\r\\n    ILucksExecutor public EXECUTOR;\\r\\n    bool public useLayerZeroToken;\\r\\n\\r\\n    //---------------------------------------------------------------------------\\r\\n    // MODIFIERS\\r\\n    modifier onlyExecutor() {\\r\\n        require(msg.sender == address(EXECUTOR), \\\"Lucks: caller must be LucksExecutor.\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    constructor(address _lzEndpoint, address _executor) NonblockingLzApp(_lzEndpoint) {\\r\\n        require(_executor != address(0x0), \\\"Lucks: _executor cannot be 0x0\\\");\\r\\n        EXECUTOR = ILucksExecutor(_executor);\\r\\n    }\\r\\n\\r\\n    // main method\\r\\n    function _nonblockingLzReceive(uint16 _srcChainId, bytes memory _srcAddress, uint64 _nonce, bytes memory _payload) internal virtual override {\\r\\n        uint8 functionType;\\r\\n        assembly {\\r\\n            functionType := mload(add(_payload, 32))\\r\\n        }\\r\\n        // try-catch all errors/exceptions\\r\\n        try EXECUTOR.onLzReceive(functionType, _payload) {\\r\\n            // do nothing\\r\\n        } catch {\\r\\n            // error / exception\\r\\n            failedMessages[_srcChainId][_srcAddress][_nonce] = keccak256(_payload);\\r\\n            emit MessageFailed(_srcChainId, _srcAddress, _nonce, _payload);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // ============ EXTERNAL functions ============\\r\\n    // estimateSendFee\\r\\n\\r\\n    function quoteLayerZeroFee(uint16 _dstChainId, uint8 _functionType, string memory _note, lzTxObj memory _lzTxParams) \\r\\n        external view override returns (uint256 nativeFee, uint256 zroFee) {\\r\\n        bytes memory payload = \\\"\\\";\\r\\n        uint256[] memory amounts = new uint256[](2);\\r\\n        amounts[0] = 10000;\\r\\n        amounts[1] = 10000;\\r\\n\\r\\n        if (_functionType == TYPE_CREATE_TASK) {\\r\\n            TaskItem memory item = TaskItem(\\r\\n                address(0),\\r\\n                0,\\r\\n                address(0),\\r\\n                amounts,\\r\\n                amounts,\\r\\n                address(0),\\r\\n                TaskStatus.Open,\\r\\n                block.timestamp,\\r\\n                block.timestamp,\\r\\n                1000e18,\\r\\n                1e18,\\r\\n                1,\\r\\n                ExclusiveToken(address(0), 1e18),\\r\\n                0,\\r\\n                10000\\r\\n            );\\r\\n            TaskExt memory ext = TaskExt(1, \\\"nft collection item title\\\", _note);\\r\\n\\r\\n            payload = abi.encode(TYPE_CREATE_TASK, item, ext);\\r\\n\\r\\n        } else if (_functionType == TYPE_WITHDRAW_NFT) {\\r\\n\\r\\n            payload = abi.encode(TYPE_WITHDRAW_NFT, address(0), 10000);\\r\\n\\r\\n        } else {\\r\\n            revert(\\\"Lucks: unsupported function type\\\");\\r\\n        }\\r\\n\\r\\n        bytes memory lzTxParamBuilt = _txParamBuilder( _dstChainId, _functionType, _lzTxParams);\\r\\n        return lzEndpoint.estimateFees(_dstChainId, address(this), payload, useLayerZeroToken, lzTxParamBuilt);\\r\\n    }\\r\\n\\r\\n    function estimateCreateTaskFee(uint16 _dstChainId, TaskItem memory item, TaskExt memory ext, lzTxObj memory _lzTxParams) \\r\\n        external view override returns (uint256 nativeFee, uint256 zroFee) {\\r\\n        bytes memory payload = abi.encode(TYPE_CREATE_TASK, item, ext);\\r\\n        bytes memory lzTxParamBuilt = _txParamBuilder(_dstChainId, TYPE_CREATE_TASK, _lzTxParams);\\r\\n        return lzEndpoint.estimateFees(_dstChainId, address(this), payload, useLayerZeroToken, lzTxParamBuilt);\\r\\n    }\\r\\n\\r\\n    function estimateWithdrawNFTsFee(uint16 _dstChainId, address payable _user, uint256 depositId, lzTxObj memory _lzTxParams) \\r\\n        external view override returns (uint256 nativeFee, uint256 zroFee) {\\r\\n        bytes memory payload = abi.encode(TYPE_WITHDRAW_NFT, _user, depositId);\\r\\n        bytes memory lzTxParamBuilt = _txParamBuilder(_dstChainId, TYPE_WITHDRAW_NFT, _lzTxParams);\\r\\n        return lzEndpoint.estimateFees(_dstChainId, address(this), payload, useLayerZeroToken,lzTxParamBuilt);\\r\\n    }\\r\\n\\r\\n    function renounceOwnership() public override onlyOwner {}\\r\\n\\r\\n    // ============  LOCAL CHAIN (send out message to destination chain)============\\r\\n\\r\\n    function sendCreateTask(\\r\\n        uint16 _dstChainId,\\r\\n        address payable _refundAddress,\\r\\n        TaskItem memory item,\\r\\n        TaskExt memory ext,\\r\\n        lzTxObj memory _lzTxParams\\r\\n    ) external payable override onlyExecutor {\\r\\n        bytes memory payload = abi.encode(TYPE_CREATE_TASK, item, ext);\\r\\n        _call(_dstChainId, TYPE_CREATE_TASK, _refundAddress, _lzTxParams, payload);\\r\\n    }\\r\\n\\r\\n    function sendWithdrawNFTs(\\r\\n        uint16 _dstChainId,        \\r\\n        address payable _refundAddress,\\r\\n        address payable _user,\\r\\n        uint256 depositId,\\r\\n        lzTxObj memory _lzTxParams\\r\\n    ) external payable override onlyExecutor {\\r\\n        bytes memory payload = abi.encode(TYPE_WITHDRAW_NFT, _user, depositId);\\r\\n        _call(_dstChainId, TYPE_WITHDRAW_NFT, _refundAddress, _lzTxParams, payload);\\r\\n    }\\r\\n\\r\\n    // ============ onlyOwner functions ============\\r\\n\\r\\n    function setGasAmount(uint16 _dstChainId, uint8 _functionType, uint256 _gasAmount) external onlyOwner {\\r\\n        require(\\r\\n            _functionType >= 1 && _functionType <= 4,\\r\\n            \\\"Lucks: invalid _functionType\\\"\\r\\n        );\\r\\n        gasLookup[_dstChainId][_functionType] = _gasAmount;\\r\\n    }\\r\\n\\r\\n    // ============ INTERNAL functions ============\\r\\n\\r\\n    function txParamBuilderType1(uint256 _gasAmount) internal pure returns (bytes memory) {\\r\\n        uint16 txType = 1;\\r\\n        return abi.encodePacked(txType, _gasAmount);\\r\\n    }\\r\\n\\r\\n    function txParamBuilderType2(uint256 _gasAmount, uint256 _dstNativeAmount, bytes memory _dstNativeAddr) internal pure returns (bytes memory) {\\r\\n        uint16 txType = 2;\\r\\n        return abi.encodePacked(txType, _gasAmount, _dstNativeAmount,_dstNativeAddr);\\r\\n    }\\r\\n\\r\\n    function _txParamBuilder(\\r\\n        uint16 _dstChainId,\\r\\n        uint8 _type,\\r\\n        lzTxObj memory _lzTxParams\\r\\n    ) internal view returns (bytes memory) {\\r\\n        bytes memory lzTxParam;\\r\\n        address dstNativeAddr;\\r\\n        {\\r\\n            bytes memory dstNativeAddrBytes = _lzTxParams.dstNativeAddr;\\r\\n            assembly {\\r\\n                dstNativeAddr := mload(add(dstNativeAddrBytes, 20))\\r\\n            }\\r\\n        }\\r\\n\\r\\n        uint256 totalGas = gasLookup[_dstChainId][_type].add(_lzTxParams.dstGasForCall);\\r\\n        if (_lzTxParams.dstNativeAmount > 0 && dstNativeAddr != address(0x0)) {\\r\\n            lzTxParam = txParamBuilderType2(totalGas, _lzTxParams.dstNativeAmount, _lzTxParams.dstNativeAddr);\\r\\n        } else {\\r\\n            lzTxParam = txParamBuilderType1(totalGas);\\r\\n        }\\r\\n\\r\\n        return lzTxParam;\\r\\n    }\\r\\n\\r\\n    function _call(\\r\\n        uint16 _dstChainId, // dst chainId\\r\\n        uint8 _type, // function type\\r\\n        address payable _refundAddress, // _user refundAddress\\r\\n        lzTxObj memory _lzTxParams,\\r\\n        bytes memory _payload\\r\\n    ) internal {\\r\\n        bytes memory _adapterParams = _txParamBuilder(_dstChainId, _type, _lzTxParams);\\r\\n        address zroPaymentAddr;\\r\\n        {\\r\\n            bytes memory zroPaymentAddrBytes = _lzTxParams.zroPaymentAddr;\\r\\n            assembly {\\r\\n                zroPaymentAddr := mload(add(zroPaymentAddrBytes, 20))\\r\\n            }\\r\\n        }\\r\\n        _lzSend(_dstChainId, _payload, _refundAddress, zroPaymentAddr, _adapterParams);\\r\\n\\r\\n        uint64 nextNonce = lzEndpoint.getOutboundNonce(_dstChainId, address(this));\\r\\n        emit SendMsg(_type, nextNonce);\\r\\n    }\\r\\n\\r\\n    \\r\\n    /**\\r\\n    @notice set operator\\r\\n     */\\r\\n    function setExecutor(ILucksExecutor _executor) external onlyOwner {\\r\\n        EXECUTOR = _executor;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    @notice set useLayerZeroToken\\r\\n     */\\r\\n    function setUseLayerZeroToken(bool enable) external onlyOwner {\\r\\n        useLayerZeroToken = enable;\\r\\n    }\\r\\n\\r\\n}\\r\\n\",\"keccak256\":\"0xfac1ba577e002e946035fe3144cc2ec1e47e9bf3c711638da3ef64fd6610649a\",\"license\":\"MIT\"},\"contracts/interfaces/ILucksBridge.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\n// OpenLuck\\r\\nimport {TaskItem, TaskExt} from \\\"./ILucksExecutor.sol\\\";\\r\\n\\r\\nstruct lzTxObj {\\r\\n    uint256 dstGasForCall;\\r\\n    uint256 dstNativeAmount;\\r\\n    bytes dstNativeAddr;\\r\\n    bytes zroPaymentAddr; //  the address of the ZRO token holder who would pay for the transaction\\r\\n}\\r\\n\\r\\ninterface ILucksBridge {\\r\\n    // ============= events ====================\\r\\n    event SendMsg(uint8 msgType, uint64 nonce);\\r\\n\\r\\n    // ============= Task functions ====================\\r\\n\\r\\n    function sendCreateTask(\\r\\n        uint16 _dstChainId,\\r\\n        address payable _refundAddress,\\r\\n        TaskItem memory item,\\r\\n        TaskExt memory ext,\\r\\n        lzTxObj memory _lzTxParams\\r\\n    ) external payable;\\r\\n\\r\\n    function sendWithdrawNFTs(\\r\\n        uint16 _dstChainId,\\r\\n        address payable _refundAddress,\\r\\n        address payable _user,\\r\\n        uint256 depositId,\\r\\n        lzTxObj memory _lzTxParams\\r\\n    ) external payable;\\r\\n\\r\\n    // ============= Assets functions ====================\\r\\n\\r\\n    function quoteLayerZeroFee(\\r\\n        uint16 _dstChainId,\\r\\n        uint8 _functionType,\\r\\n        string memory _note,\\r\\n        lzTxObj memory _lzTxParams\\r\\n    ) external view returns (uint256 nativeFee, uint256 zroFee);\\r\\n\\r\\n    function estimateCreateTaskFee(\\r\\n        uint16 _dstChainId,\\r\\n        TaskItem memory item,\\r\\n        TaskExt memory ext,\\r\\n        lzTxObj memory _lzTxParams\\r\\n    ) external view returns (uint256 nativeFee, uint256 zroFee);\\r\\n\\r\\n    function estimateWithdrawNFTsFee(\\r\\n        uint16 _dstChainId,\\r\\n        address payable _user,\\r\\n        uint256 depositId,\\r\\n        lzTxObj memory _lzTxParams\\r\\n    ) external view returns (uint256 nativeFee, uint256 zroFee);\\r\\n}\\r\\n\",\"keccak256\":\"0x765d9775800e3ae3210029e908a1880695f373c331eb21c0cec222e06e336883\",\"license\":\"MIT\"},\"contracts/interfaces/ILucksExecutor.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport { lzTxObj } from \\\"./ILucksBridge.sol\\\";\\r\\n\\r\\n/** \\r\\n    TaskStatus\\r\\n    0) Pending: task created but not reach starttime\\r\\n    1) Open: task opening\\r\\n    2) Close: task close, waiting for draw\\r\\n    3) Success: task reach target, drawed winner\\r\\n    4) Fail: task Fail and expired\\r\\n    5) Cancel: task user cancel\\r\\n */\\r\\nenum TaskStatus {\\r\\n    Pending,\\r\\n    Open,\\r\\n    Close,\\r\\n    Success,\\r\\n    Fail,\\r\\n    Cancel\\r\\n}\\r\\n\\r\\nstruct ExclusiveToken {\\r\\n    address token; // exclusive token contract address    \\r\\n    uint256 amount; // exclusive token holding amount required\\r\\n}\\r\\n\\r\\nstruct TaskItem {\\r\\n\\r\\n    address seller; // Owner of the NFTs\\r\\n    uint16 nftChainId; // NFT source ChainId    \\r\\n    address nftContract; // NFT registry address    \\r\\n    uint256[] tokenIds; // Allow mulit nfts for sell    \\r\\n    uint256[] tokenAmounts; // support ERC1155\\r\\n    \\r\\n    address acceptToken; // acceptToken    \\r\\n    TaskStatus status; // Task status    \\r\\n\\r\\n    uint256 startTime; // Task start time    \\r\\n    uint256 endTime; // Task end time\\r\\n    \\r\\n    uint256 targetAmount; // Task target crowd amount (in wei) for the published item    \\r\\n    uint256 price; // Per ticket price  (in wei)    \\r\\n    \\r\\n    uint16 paymentStrategy; // payment strategy;\\r\\n    ExclusiveToken exclusiveToken; // exclusive token contract address    \\r\\n    \\r\\n    // editable fields\\r\\n    uint256 amountCollected; // The amount (in wei) collected of this task\\r\\n    uint256 depositId; // NFTs depositId (system set)\\r\\n}\\r\\n\\r\\nstruct TaskExt {\\r\\n    uint16 chainId; // Task Running ChainId   \\r\\n    string title; // title (for searching keywords)  \\r\\n    string note;   // memo\\r\\n}\\r\\n\\r\\nstruct Ticket {\\r\\n    uint256 number;  // the ticket's id, equal to the end number (last ticket id)\\r\\n    uint32 count;   // how many QTY the ticket joins, (number-count+1) equal to the start number of this ticket.\\r\\n    address owner;  // ticket owner\\r\\n}\\r\\n\\r\\nstruct TaskInfo {\\r\\n    uint256 lastTID;\\r\\n    uint256 closeTime;\\r\\n    uint256 finalNo;\\r\\n}\\r\\n \\r\\nstruct UserState {\\r\\n    uint256 num; // user buyed tickets count\\r\\n    bool claimed;  // user claimed\\r\\n}\\r\\ninterface ILucksExecutor {\\r\\n\\r\\n    // ============= events ====================\\r\\n\\r\\n    event CreateTask(uint256 taskId, TaskItem item, TaskExt ext);\\r\\n    event CancelTask(uint256 taskId, address seller);\\r\\n    event CloseTask(uint256 taskId, address caller, TaskStatus status);\\r\\n    event JoinTask(uint256 taskId, address buyer, uint256 amount, uint256 count, uint256 number,string note);\\r\\n    event PickWinner(uint256 taskId, address winner, uint256 number);\\r\\n    event ClaimToken(uint256 taskId, address caller, uint256 amount, address acceptToken);\\r\\n    event ClaimNFT(uint256 taskId, address seller, address nftContract, uint256[] tokenIds);    \\r\\n    event CreateTickets(uint256 taskId, address buyer, uint256 num, uint256 start, uint256 end);\\r\\n\\r\\n    event TransferFee(uint256 taskId, address to, address token, uint256 amount); // for protocol\\r\\n    event TransferShareAmount(uint256 taskId, address to, address token, uint256 amount); // for winners\\r\\n    event TransferPayment(uint256 taskId, address to, address token, uint256 amount); // for seller\\r\\n\\r\\n    // ============= functions ====================\\r\\n\\r\\n    function count() external view returns (uint256);\\r\\n    function exists(uint256 taskId) external view returns (bool);\\r\\n    function getTask(uint256 taskId) external view returns (TaskItem memory);\\r\\n    function getInfo(uint256 taskId) external view returns (TaskInfo memory);\\r\\n    function isFail(uint256 taskId) external view returns(bool);\\r\\n    function getChainId() external view returns (uint16);\\r\\n\\r\\n    function createTask(TaskItem memory item, TaskExt memory ext, lzTxObj memory _param) external payable;\\r\\n    function joinTask(uint256 taskId, uint32 num, string memory note) external payable;\\r\\n    function cancelTask(uint256 taskId, lzTxObj memory _param) external payable;\\r\\n    function closeTask(uint256 taskId, lzTxObj memory _param) external payable;\\r\\n    function pickWinner(uint256 taskId, lzTxObj memory _param) external payable;\\r\\n\\r\\n    function claimTokens(uint256[] memory taskIds) external;\\r\\n    function claimNFTs(uint256[] memory taskIds, lzTxObj memory _param) external payable;\\r\\n\\r\\n    function onLzReceive(uint8 functionType, bytes memory _payload) external;\\r\\n}\\r\\n\",\"keccak256\":\"0xc01e970fcff51ebf5c345bfd919da071a2171ccdf379a5a40e09f0f5ed482090\",\"license\":\"MIT\"},\"layerzero-contracts/contracts/interfaces/ILayerZeroEndpoint.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity >=0.5.0;\\r\\n\\r\\nimport \\\"./ILayerZeroUserApplicationConfig.sol\\\";\\r\\n\\r\\ninterface ILayerZeroEndpoint is ILayerZeroUserApplicationConfig {\\r\\n    // @notice send a LayerZero message to the specified address at a LayerZero endpoint.\\r\\n    // @param _dstChainId - the destination chain identifier\\r\\n    // @param _destination - the address on destination chain (in bytes). address length/format may vary by chains\\r\\n    // @param _payload - a custom bytes payload to send to the destination contract\\r\\n    // @param _refundAddress - if the source transaction is cheaper than the amount of value passed, refund the additional amount to this address\\r\\n    // @param _zroPaymentAddress - the address of the ZRO token holder who would pay for the transaction\\r\\n    // @param _adapterParams - parameters for custom functionality. e.g. receive airdropped native gas from the relayer on destination\\r\\n    function send(uint16 _dstChainId, bytes calldata _destination, bytes calldata _payload, address payable _refundAddress, address _zroPaymentAddress, bytes calldata _adapterParams) external payable;\\r\\n\\r\\n    // @notice used by the messaging library to publish verified payload\\r\\n    // @param _srcChainId - the source chain identifier\\r\\n    // @param _srcAddress - the source contract (as bytes) at the source chain\\r\\n    // @param _dstAddress - the address on destination chain\\r\\n    // @param _nonce - the unbound message ordering nonce\\r\\n    // @param _gasLimit - the gas limit for external contract execution\\r\\n    // @param _payload - verified payload to send to the destination contract\\r\\n    function receivePayload(uint16 _srcChainId, bytes calldata _srcAddress, address _dstAddress, uint64 _nonce, uint _gasLimit, bytes calldata _payload) external;\\r\\n\\r\\n    // @notice get the inboundNonce of a lzApp from a source chain which could be EVM or non-EVM chain\\r\\n    // @param _srcChainId - the source chain identifier\\r\\n    // @param _srcAddress - the source chain contract address\\r\\n    function getInboundNonce(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (uint64);\\r\\n\\r\\n    // @notice get the outboundNonce from this source chain which, consequently, is always an EVM\\r\\n    // @param _srcAddress - the source chain contract address\\r\\n    function getOutboundNonce(uint16 _dstChainId, address _srcAddress) external view returns (uint64);\\r\\n\\r\\n    // @notice gets a quote in source native gas, for the amount that send() requires to pay for message delivery\\r\\n    // @param _dstChainId - the destination chain identifier\\r\\n    // @param _userApplication - the user app address on this EVM chain\\r\\n    // @param _payload - the custom message to send over LayerZero\\r\\n    // @param _payInZRO - if false, user app pays the protocol fee in native token\\r\\n    // @param _adapterParam - parameters for the adapter service, e.g. send some dust native token to dstChain\\r\\n    function estimateFees(uint16 _dstChainId, address _userApplication, bytes calldata _payload, bool _payInZRO, bytes calldata _adapterParam) external view returns (uint nativeFee, uint zroFee);\\r\\n\\r\\n    // @notice get this Endpoint's immutable source identifier\\r\\n    function getChainId() external view returns (uint16);\\r\\n\\r\\n    // @notice the interface to retry failed message on this Endpoint destination\\r\\n    // @param _srcChainId - the source chain identifier\\r\\n    // @param _srcAddress - the source chain contract address\\r\\n    // @param _payload - the payload to be retried\\r\\n    function retryPayload(uint16 _srcChainId, bytes calldata _srcAddress, bytes calldata _payload) external;\\r\\n\\r\\n    // @notice query if any STORED payload (message blocking) at the endpoint.\\r\\n    // @param _srcChainId - the source chain identifier\\r\\n    // @param _srcAddress - the source chain contract address\\r\\n    function hasStoredPayload(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool);\\r\\n\\r\\n    // @notice query if the _libraryAddress is valid for sending msgs.\\r\\n    // @param _userApplication - the user app address on this EVM chain\\r\\n    function getSendLibraryAddress(address _userApplication) external view returns (address);\\r\\n\\r\\n    // @notice query if the _libraryAddress is valid for receiving msgs.\\r\\n    // @param _userApplication - the user app address on this EVM chain\\r\\n    function getReceiveLibraryAddress(address _userApplication) external view returns (address);\\r\\n\\r\\n    // @notice query if the non-reentrancy guard for send() is on\\r\\n    // @return true if the guard is on. false otherwise\\r\\n    function isSendingPayload() external view returns (bool);\\r\\n\\r\\n    // @notice query if the non-reentrancy guard for receive() is on\\r\\n    // @return true if the guard is on. false otherwise\\r\\n    function isReceivingPayload() external view returns (bool);\\r\\n\\r\\n    // @notice get the configuration of the LayerZero messaging library of the specified version\\r\\n    // @param _version - messaging library version\\r\\n    // @param _chainId - the chainId for the pending config change\\r\\n    // @param _userApplication - the contract address of the user application\\r\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\r\\n    function getConfig(uint16 _version, uint16 _chainId, address _userApplication, uint _configType) external view returns (bytes memory);\\r\\n\\r\\n    // @notice get the send() LayerZero messaging library version\\r\\n    // @param _userApplication - the contract address of the user application\\r\\n    function getSendVersion(address _userApplication) external view returns (uint16);\\r\\n\\r\\n    // @notice get the lzReceive() LayerZero messaging library version\\r\\n    // @param _userApplication - the contract address of the user application\\r\\n    function getReceiveVersion(address _userApplication) external view returns (uint16);\\r\\n}\\r\\n\",\"keccak256\":\"0xb0f5dd5442f7f6dc3cba510c3170e5304de918b082ac658a2935433e80fefb66\",\"license\":\"MIT\"},\"layerzero-contracts/contracts/interfaces/ILayerZeroReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity >=0.5.0;\\r\\n\\r\\ninterface ILayerZeroReceiver {\\r\\n    // @notice LayerZero endpoint will invoke this function to deliver the message on the destination\\r\\n    // @param _srcChainId - the source endpoint identifier\\r\\n    // @param _srcAddress - the source sending contract address from the source chain\\r\\n    // @param _nonce - the ordered message nonce\\r\\n    // @param _payload - the signed payload is the UA bytes has encoded to be sent\\r\\n    function lzReceive(uint16 _srcChainId, bytes calldata _srcAddress, uint64 _nonce, bytes calldata _payload) external;\\r\\n}\\r\\n\",\"keccak256\":\"0xe377e661a587f855100ae6bbc9159e9aa279a99b632b445b3b9fb45a347da63a\",\"license\":\"MIT\"},\"layerzero-contracts/contracts/interfaces/ILayerZeroUserApplicationConfig.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity >=0.5.0;\\r\\n\\r\\ninterface ILayerZeroUserApplicationConfig {\\r\\n    // @notice set the configuration of the LayerZero messaging library of the specified version\\r\\n    // @param _version - messaging library version\\r\\n    // @param _chainId - the chainId for the pending config change\\r\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\r\\n    // @param _config - configuration in the bytes. can encode arbitrary content.\\r\\n    function setConfig(uint16 _version, uint16 _chainId, uint _configType, bytes calldata _config) external;\\r\\n\\r\\n    // @notice set the send() LayerZero messaging library version to _version\\r\\n    // @param _version - new messaging library version\\r\\n    function setSendVersion(uint16 _version) external;\\r\\n\\r\\n    // @notice set the lzReceive() LayerZero messaging library version to _version\\r\\n    // @param _version - new messaging library version\\r\\n    function setReceiveVersion(uint16 _version) external;\\r\\n\\r\\n    // @notice Only when the UA needs to resume the message flow in blocking mode and clear the stored payload\\r\\n    // @param _srcChainId - the chainId of the source chain\\r\\n    // @param _srcAddress - the contract address of the source contract at the source chain\\r\\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x42d10415d035529fcdff738d6542844ad58124b4e1da5a8ff92d6ddd8bf96513\",\"license\":\"MIT\"},\"layerzero-contracts/contracts/lzApp/LzApp.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport \\\"../interfaces/ILayerZeroReceiver.sol\\\";\\r\\nimport \\\"../interfaces/ILayerZeroUserApplicationConfig.sol\\\";\\r\\nimport \\\"../interfaces/ILayerZeroEndpoint.sol\\\";\\r\\n\\r\\n/*\\r\\n * a generic LzReceiver implementation\\r\\n */\\r\\nabstract contract LzApp is Ownable, ILayerZeroReceiver, ILayerZeroUserApplicationConfig {\\r\\n    ILayerZeroEndpoint public immutable lzEndpoint;\\r\\n\\r\\n    mapping(uint16 => bytes) public trustedRemoteLookup;\\r\\n\\r\\n    event SetTrustedRemote(uint16 _srcChainId, bytes _srcAddress);\\r\\n\\r\\n    constructor(address _endpoint) {\\r\\n        lzEndpoint = ILayerZeroEndpoint(_endpoint);\\r\\n    }\\r\\n\\r\\n    function lzReceive(uint16 _srcChainId, bytes memory _srcAddress, uint64 _nonce, bytes memory _payload) public virtual override {\\r\\n        // lzReceive must be called by the endpoint for security\\r\\n        require(_msgSender() == address(lzEndpoint), \\\"LzApp: invalid endpoint caller\\\");\\r\\n\\r\\n        bytes memory trustedRemote = trustedRemoteLookup[_srcChainId];\\r\\n        // if will still block the message pathway from (srcChainId, srcAddress). should not receive message from untrusted remote.\\r\\n        require(_srcAddress.length == trustedRemote.length && keccak256(_srcAddress) == keccak256(trustedRemote), \\\"LzApp: invalid source sending contract\\\");\\r\\n\\r\\n        _blockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload);\\r\\n    }\\r\\n\\r\\n    // abstract function - the default behaviour of LayerZero is blocking. See: NonblockingLzApp if you dont need to enforce ordered messaging\\r\\n    function _blockingLzReceive(uint16 _srcChainId, bytes memory _srcAddress, uint64 _nonce, bytes memory _payload) internal virtual;\\r\\n\\r\\n    function _lzSend(uint16 _dstChainId, bytes memory _payload, address payable _refundAddress, address _zroPaymentAddress, bytes memory _adapterParams) internal virtual {\\r\\n        bytes memory trustedRemote = trustedRemoteLookup[_dstChainId];\\r\\n        require(trustedRemote.length != 0, \\\"LzApp: destination chain is not a trusted source\\\");\\r\\n        lzEndpoint.send{value: msg.value}(_dstChainId, trustedRemote, _payload, _refundAddress, _zroPaymentAddress, _adapterParams);\\r\\n    }\\r\\n\\r\\n    //---------------------------UserApplication config----------------------------------------\\r\\n    function getConfig(uint16 _version, uint16 _chainId, address, uint _configType) external view returns (bytes memory) {\\r\\n        return lzEndpoint.getConfig(_version, _chainId, address(this), _configType);\\r\\n    }\\r\\n\\r\\n    // generic config for LayerZero user Application\\r\\n    function setConfig(uint16 _version, uint16 _chainId, uint _configType, bytes calldata _config) external override onlyOwner {\\r\\n        lzEndpoint.setConfig(_version, _chainId, _configType, _config);\\r\\n    }\\r\\n\\r\\n    function setSendVersion(uint16 _version) external override onlyOwner {\\r\\n        lzEndpoint.setSendVersion(_version);\\r\\n    }\\r\\n\\r\\n    function setReceiveVersion(uint16 _version) external override onlyOwner {\\r\\n        lzEndpoint.setReceiveVersion(_version);\\r\\n    }\\r\\n\\r\\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external override onlyOwner {\\r\\n        lzEndpoint.forceResumeReceive(_srcChainId, _srcAddress);\\r\\n    }\\r\\n\\r\\n    // allow owner to set it multiple times.\\r\\n    function setTrustedRemote(uint16 _srcChainId, bytes calldata _srcAddress) external onlyOwner {\\r\\n        trustedRemoteLookup[_srcChainId] = _srcAddress;\\r\\n        emit SetTrustedRemote(_srcChainId, _srcAddress);\\r\\n    }\\r\\n\\r\\n    //--------------------------- VIEW FUNCTION ----------------------------------------\\r\\n\\r\\n    function isTrustedRemote(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool) {\\r\\n        bytes memory trustedSource = trustedRemoteLookup[_srcChainId];\\r\\n        return keccak256(trustedSource) == keccak256(_srcAddress);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x09dd9e5f26db5fd50e6efd6cc97062448ed655c37bf4b8df79f4ee3482f2128c\",\"license\":\"MIT\"},\"layerzero-contracts/contracts/lzApp/NonblockingLzApp.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./LzApp.sol\\\";\\r\\n\\r\\n/*\\r\\n * the default LayerZero messaging behaviour is blocking, i.e. any failed message will block the channel\\r\\n * this abstract class try-catch all fail messages and store locally for future retry. hence, non-blocking\\r\\n * NOTE: if the srcAddress is not configured properly, it will still block the message pathway from (srcChainId, srcAddress)\\r\\n */\\r\\nabstract contract NonblockingLzApp is LzApp {\\r\\n    constructor(address _endpoint) LzApp(_endpoint) {}\\r\\n\\r\\n    mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32))) public failedMessages;\\r\\n\\r\\n    event MessageFailed(uint16 _srcChainId, bytes _srcAddress, uint64 _nonce, bytes _payload);\\r\\n\\r\\n    // overriding the virtual function in LzReceiver\\r\\n    function _blockingLzReceive(uint16 _srcChainId, bytes memory _srcAddress, uint64 _nonce, bytes memory _payload) internal virtual override {\\r\\n        // try-catch all errors/exceptions\\r\\n        try this.nonblockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload) {\\r\\n            // do nothing\\r\\n        } catch {\\r\\n            // error / exception\\r\\n            failedMessages[_srcChainId][_srcAddress][_nonce] = keccak256(_payload);\\r\\n            emit MessageFailed(_srcChainId, _srcAddress, _nonce, _payload);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function nonblockingLzReceive(uint16 _srcChainId, bytes memory _srcAddress, uint64 _nonce, bytes memory _payload) public virtual {\\r\\n        // only internal transaction\\r\\n        require(_msgSender() == address(this), \\\"NonblockingLzApp: caller must be LzApp\\\");\\r\\n        _nonblockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload);\\r\\n    }\\r\\n\\r\\n    //@notice override this function\\r\\n    function _nonblockingLzReceive(uint16 _srcChainId, bytes memory _srcAddress, uint64 _nonce, bytes memory _payload) internal virtual;\\r\\n\\r\\n    function retryMessage(uint16 _srcChainId, bytes memory _srcAddress, uint64 _nonce, bytes memory _payload) public payable virtual {\\r\\n        // assert there is message to retry\\r\\n        bytes32 payloadHash = failedMessages[_srcChainId][_srcAddress][_nonce];\\r\\n        require(payloadHash != bytes32(0), \\\"NonblockingLzApp: no stored message\\\");\\r\\n        require(keccak256(_payload) == payloadHash, \\\"NonblockingLzApp: invalid payload\\\");\\r\\n        // clear the stored message\\r\\n        failedMessages[_srcChainId][_srcAddress][_nonce] = bytes32(0);\\r\\n        // execute the message. revert if it fails again\\r\\n        _nonblockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x8f15482b2f8de4bcdacb3585c6ec81d4e6a18c874358bb1391d5cea9f2eebb4d\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620037de380380620037de833981016040819052620000349162000141565b81806200004133620000d4565b60601b6001600160601b031916608052506001600160a01b038116620000ad5760405162461bcd60e51b815260206004820152601e60248201527f4c75636b733a205f6578656375746f722063616e6e6f74206265203078300000604482015260640160405180910390fd5b600480546001600160a01b0319166001600160a01b03929092169190911790555062000179565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200013c57600080fd5b919050565b600080604083850312156200015557600080fd5b620001608362000124565b9150620001706020840162000124565b90509250929050565b60805160601c613600620001de600039600081816104da015281816105d2015281816108810152818161097701528181610bd701528181610e89015281816111a40152818161169001528181611b1e01528181611f45015261237601526136006000f3fe6080604052600436106101ab5760003560e01c8063715018a6116100ec578063c213dc2b1161008a578063eb8d72b711610064578063eb8d72b71461054f578063f2fde38b1461056f578063f5ecbdbc1461058f578063fc869108146105af57600080fd5b8063c213dc2b146104fc578063cbed8b9c1461051c578063d1deba1f1461053c57600080fd5b80638c7ae0fc116100c65780638c7ae0fc146104585780638da5cb5b1461048a578063903d1a94146104b5578063b353aaa7146104c857600080fd5b8063715018a6146103f65780637533d7881461040b5780637cbbc5d21461043857600080fd5b80631b0899fc1161015957806342d65a8d1161013357806342d65a8d146103155780635b8c41e614610335578063630dc7cb1461038457806366ad5c8a146103d657600080fd5b80631b0899fc146102a55780631c3c0ea8146102c55780633d8b38f6146102e557600080fd5b806308ee3efb1161018a57806308ee3efb1461023d578063107f6e281461027257806310ddb1371461028557600080fd5b80621d3567146101b057806302422054146101d257806307e0db171461021d575b600080fd5b3480156101bc57600080fd5b506101d06101cb366004612bd2565b6105cf565b005b3480156101de57600080fd5b5061020a6101ed366004612d98565b600360209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b34801561022957600080fd5b506101d061023836600461297c565b6107ce565b34801561024957600080fd5b5061025d610258366004612ab3565b6108ef565b60408051928352602083019190915201610214565b6101d0610280366004612a14565b610a3f565b34801561029157600080fd5b506101d06102a036600461297c565b610b24565b3480156102b157600080fd5b5061025d6102c0366004612dcb565b610c1b565b3480156102d157600080fd5b506101d06102e03660046128cf565b610f52565b3480156102f157600080fd5b50610305610300366004612b1d565b61101a565b6040519015158152602001610214565b34801561032157600080fd5b506101d0610330366004612b1d565b6110e6565b34801561034157600080fd5b5061020a610350366004612b70565b6002602090815260009384526040808520845180860184018051928152908401958401959095209452929052825290205481565b34801561039057600080fd5b506004546103b19073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610214565b3480156103e257600080fd5b506101d06103f1366004612bd2565b611214565b34801561040257600080fd5b506101d06112b5565b34801561041757600080fd5b5061042b61042636600461297c565b611338565b6040516102149190613068565b34801561044457600080fd5b5061025d610453366004612c4f565b6113d2565b34801561046457600080fd5b506004546103059074010000000000000000000000000000000000000000900460ff1681565b34801561049657600080fd5b5060005473ffffffffffffffffffffffffffffffffffffffff166103b1565b6101d06104c3366004612997565b61140c565b3480156104d457600080fd5b506103b17f000000000000000000000000000000000000000000000000000000000000000081565b34801561050857600080fd5b506101d06105173660046128ec565b611507565b34801561052857600080fd5b506101d0610537366004612d29565b6115d2565b6101d061054a366004612bd2565b611706565b34801561055b57600080fd5b506101d061056a366004612b1d565b6118c4565b34801561057b57600080fd5b506101d061058a3660046128cf565b6119a4565b34801561059b57600080fd5b5061042b6105aa366004612cdc565b611ad4565b3480156105bb57600080fd5b506101d06105ca366004612e21565b611bd8565b337f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1614610673576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f4c7a4170703a20696e76616c696420656e64706f696e742063616c6c6572000060448201526064015b60405180910390fd5b61ffff841660009081526001602052604081208054610691906134e0565b80601f01602080910402602001604051908101604052809291908181526020018280546106bd906134e0565b801561070a5780601f106106df5761010080835404028352916020019161070a565b820191906000526020600020905b8154815290600101906020018083116106ed57829003601f168201915b505050505090508051845114801561072f575080805190602001208480519060200120145b6107bb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4c7a4170703a20696e76616c696420736f757263652073656e64696e6720636f60448201527f6e74726163740000000000000000000000000000000000000000000000000000606482015260840161066a565b6107c785858585611cfc565b5050505050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461084f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161066a565b6040517f07e0db1700000000000000000000000000000000000000000000000000000000815261ffff821660048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906307e0db17906024015b600060405180830381600087803b1580156108db57600080fd5b505af11580156107c7573d6000803e3d6000fd5b604080516002602082015273ffffffffffffffffffffffffffffffffffffffff85169181019190915260608101839052600090819081906080016040516020818303038152906040529050600061094888600287611e07565b600480546040517f40a7bb100000000000000000000000000000000000000000000000000000000081529293507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16926340a7bb10926109e1928d923092899274010000000000000000000000000000000000000000900460ff169189910161307b565b604080518083038186803b1580156109f857600080fd5b505afa158015610a0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a309190612e5d565b93509350505094509492505050565b60045473ffffffffffffffffffffffffffffffffffffffff163314610ae5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f4c75636b733a2063616c6c6572206d757374206265204c75636b73457865637560448201527f746f722e00000000000000000000000000000000000000000000000000000000606482015260840161066a565b600060018484604051602001610afd93929190613208565b6040516020818303038152906040529050610b1c866001878585611ee4565b505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610ba5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161066a565b6040517f10ddb13700000000000000000000000000000000000000000000000000000000815261ffff821660048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906310ddb137906024016108c1565b60408051602080820183526000808352835160028082526060820186529194859493859391908301908036833701905050905061271081600081518110610c6457610c64613534565b60200260200101818152505061271081600181518110610c8657610c86613534565b602090810291909101015260ff871660011415610daa57604080516101e0810182526000808252602080830182905282840182905260608084018690526080840186905260a08401839052600160c085018190524260e08601819052610100860152683635c9adc5dea00000610120860152670de0b6b3a76400006101408601819052610160860182905286518088018852858152808501919091526101808601526101a08501939093526127106101c08501528451908101855282815284518086018652601981527f6e667420636f6c6c656374696f6e206974656d207469746c650000000000000081840152818301528085018b90529351929392610d9292918591859101613208565b60405160208183030381529060405293505050610e4d565b60ff871660021415610deb57604080516002602082015260009181019190915261271060608201526080016040516020818303038152906040529150610e4d565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4c75636b733a20756e737570706f727465642066756e6374696f6e2074797065604482015260640161066a565b6000610e5a898988611e07565b600480546040517f40a7bb100000000000000000000000000000000000000000000000000000000081529293507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16926340a7bb1092610ef3928e9230928a9274010000000000000000000000000000000000000000900460ff169189910161307b565b604080518083038186803b158015610f0a57600080fd5b505afa158015610f1e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f429190612e5d565b9450945050505094509492505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610fd3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161066a565b600480547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b61ffff83166000908152600160205260408120805482919061103b906134e0565b80601f0160208091040260200160405190810160405280929190818152602001828054611067906134e0565b80156110b45780601f10611089576101008083540402835291602001916110b4565b820191906000526020600020905b81548152906001019060200180831161109757829003601f168201915b5050505050905083836040516110cb929190612fe3565b60405180910390208180519060200120149150509392505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314611167576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161066a565b6040517f42d65a8d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906342d65a8d906111dd908690869086906004016130da565b600060405180830381600087803b1580156111f757600080fd5b505af115801561120b573d6000803e3d6000fd5b50505050505050565b3330146112a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4e6f6e626c6f636b696e674c7a4170703a2063616c6c6572206d75737420626560448201527f204c7a4170700000000000000000000000000000000000000000000000000000606482015260840161066a565b6112af84848484612026565b50505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314611336576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161066a565b565b60016020526000908152604090208054611351906134e0565b80601f016020809104026020016040519081016040528092919081815260200182805461137d906134e0565b80156113ca5780601f1061139f576101008083540402835291602001916113ca565b820191906000526020600020905b8154815290600101906020018083116113ad57829003601f168201915b505050505081565b6000806000600186866040516020016113ed93929190613208565b6040516020818303038152906040529050600061094888600187611e07565b60045473ffffffffffffffffffffffffffffffffffffffff1633146114b2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f4c75636b733a2063616c6c6572206d757374206265204c75636b73457865637560448201527f746f722e00000000000000000000000000000000000000000000000000000000606482015260840161066a565b604080516002602082015273ffffffffffffffffffffffffffffffffffffffff851691810191909152606081018390526000906080016040516020818303038152906040529050610b1c866002878585611ee4565b60005473ffffffffffffffffffffffffffffffffffffffff163314611588576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161066a565b6004805491151574010000000000000000000000000000000000000000027fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff163314611653576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161066a565b6040517fcbed8b9c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063cbed8b9c906116cd90889088908890889088906004016131b6565b600060405180830381600087803b1580156116e757600080fd5b505af11580156116fb573d6000803e3d6000fd5b505050505050505050565b61ffff84166000908152600260205260408082209051611727908690612ff3565b908152604080516020928190038301902067ffffffffffffffff8616600090815292529020549050806117dc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f4e6f6e626c6f636b696e674c7a4170703a206e6f2073746f726564206d65737360448201527f6167650000000000000000000000000000000000000000000000000000000000606482015260840161066a565b815160208301208114611871576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f4e6f6e626c6f636b696e674c7a4170703a20696e76616c6964207061796c6f6160448201527f6400000000000000000000000000000000000000000000000000000000000000606482015260840161066a565b61ffff85166000908152600260205260408082209051611892908790612ff3565b908152604080516020928190038301902067ffffffffffffffff8716600090815292529020556107c785858585612026565b60005473ffffffffffffffffffffffffffffffffffffffff163314611945576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161066a565b61ffff831660009081526001602052604090206119639083836123f1565b507ffa41487ad5d6728f0b19276fa1eddc16558578f5109fc39d2dc33c3230470dab838383604051611997939291906130da565b60405180910390a1505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314611a25576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161066a565b73ffffffffffffffffffffffffffffffffffffffff8116611ac8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161066a565b611ad18161214b565b50565b6040517ff5ecbdbc00000000000000000000000000000000000000000000000000000000815261ffff808616600483015284166024820152306044820152606481018290526060907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063f5ecbdbc9060840160006040518083038186803b158015611b7557600080fd5b505afa158015611b89573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052611bcf919081019061290e565b95945050505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314611c59576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161066a565b60018260ff1610158015611c71575060048260ff1611155b611cd7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f4c75636b733a20696e76616c6964205f66756e6374696f6e5479706500000000604482015260640161066a565b61ffff909216600090815260036020908152604080832060ff90941683529290522055565b6040517f66ad5c8a00000000000000000000000000000000000000000000000000000000815230906366ad5c8a90611d3e90879087908790879060040161316c565b600060405180830381600087803b158015611d5857600080fd5b505af1925050508015611d69575060015b6112af578080519060200120600260008661ffff1661ffff16815260200190815260200160002084604051611d9e9190612ff3565b90815260408051918290036020908101832067ffffffffffffffff87166000908152915220919091557fe6f254030bcb01ffd20558175c13fcaed6d1520be7becee4c961b65f79243b0d90611dfa90869086908690869061316c565b60405180910390a16112af565b60408082015160140151825161ffff861660009081526003602090815284822060ff881683529052928320546060938493929091611e44916121c0565b905060008560200151118015611e6f575073ffffffffffffffffffffffffffffffffffffffff821615155b15611e8e57611e8781866020015187604001516121d3565b9250611ed9565b611ed681604080517e01000000000000000000000000000000000000000000000000000000000000602082015260228082019390935281518082039093018352604201905290565b92505b509095945050505050565b6000611ef1868685611e07565b606084015160140151909150611f0a8784878486612209565b6040517f7a14574800000000000000000000000000000000000000000000000000000000815261ffff881660048201523060248201526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690637a1457489060440160206040518083038186803b158015611f9c57600080fd5b505afa158015611fb0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fd49190612e81565b6040805160ff8a16815267ffffffffffffffff831660208201529192507f8d3ee0df6a4b7e82a7f20a763f1c6826e6176323e655af64f32318827d2112d4910160405180910390a15050505050505050565b6020810151600480546040517fe44cb8e400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169163e44cb8e4916120829185918791016131e4565b600060405180830381600087803b15801561209c57600080fd5b505af19250505080156120ad575060015b6107c7578180519060200120600260008761ffff1661ffff168152602001908152602001600020856040516120e29190612ff3565b90815260408051918290036020908101832067ffffffffffffffff88166000908152915220919091557fe6f254030bcb01ffd20558175c13fcaed6d1520be7becee4c961b65f79243b0d9061213e90879087908790879061316c565b60405180910390a16107c7565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006121cc8284613475565b9392505050565b6040516060906002906121f090829087908790879060200161300f565b6040516020818303038152906040529150509392505050565b61ffff851660009081526001602052604081208054612227906134e0565b80601f0160208091040260200160405190810160405280929190818152602001828054612253906134e0565b80156122a05780601f10612275576101008083540402835291602001916122a0565b820191906000526020600020905b81548152906001019060200180831161228357829003601f168201915b50505050509050805160001415612339576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603060248201527f4c7a4170703a2064657374696e6174696f6e20636861696e206973206e6f742060448201527f61207472757374656420736f7572636500000000000000000000000000000000606482015260840161066a565b6040517fc580310000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063c58031009034906123b7908a9086908b908b908b908b906004016130f8565b6000604051808303818588803b1580156123d057600080fd5b505af11580156123e4573d6000803e3d6000fd5b5050505050505050505050565b8280546123fd906134e0565b90600052602060002090601f01602090048101928261241f5760008555612483565b82601f10612456578280017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00823516178555612483565b82800160010185558215612483579182015b82811115612483578235825591602001919060010190612468565b5061248f929150612493565b5090565b5b8082111561248f5760008155600101612494565b80356124b381613592565b919050565b600082601f8301126124c957600080fd5b8135602067ffffffffffffffff8211156124e5576124e5613563565b8160051b6124f48282016133e0565b83815282810190868401838801850189101561250f57600080fd5b600093505b85841015612532578035835260019390930192918401918401612514565b50979650505050505050565b60008083601f84011261255057600080fd5b50813567ffffffffffffffff81111561256857600080fd5b60208301915083602082850101111561258057600080fd5b9250929050565b600082601f83011261259857600080fd5b81356125ab6125a68261342f565b6133e0565b8181528460208386010111156125c057600080fd5b816020850160208301376000918101602001919091529392505050565b8035600681106124b357600080fd5b6000604082840312156125fe57600080fd5b6040516040810181811067ffffffffffffffff8211171561262157612621613563565b604052905080823561263281613592565b8152602092830135920191909152919050565b60006060828403121561265757600080fd5b6040516060810167ffffffffffffffff828210818311171561267b5761267b613563565b8160405282935061268b856128ac565b835260208501359150808211156126a157600080fd5b6126ad86838701612587565b602084015260408501359150808211156126c657600080fd5b506126d385828601612587565b6040830152505092915050565b600061020082840312156126f357600080fd5b6126fb6133b6565b9050612706826124a8565b8152612714602083016128ac565b6020820152612725604083016124a8565b6040820152606082013567ffffffffffffffff8082111561274557600080fd5b612751858386016124b8565b6060840152608084013591508082111561276a57600080fd5b50612777848285016124b8565b60808301525061278960a083016124a8565b60a082015261279a60c083016125dd565b60c082015260e082810135908201526101008083013590820152610120808301359082015261014080830135908201526101606127d88184016128ac565b908201526101806127eb848483016125ec565b81830152506101c0808301356101a08301526101e0830135818301525092915050565b60006080828403121561282057600080fd5b6040516080810167ffffffffffffffff828210818311171561284457612844613563565b816040528293508435835260208501356020840152604085013591508082111561286d57600080fd5b61287986838701612587565b6040840152606085013591508082111561289257600080fd5b5061289f85828601612587565b6060830152505092915050565b803561ffff811681146124b357600080fd5b803560ff811681146124b357600080fd5b6000602082840312156128e157600080fd5b81356121cc81613592565b6000602082840312156128fe57600080fd5b813580151581146121cc57600080fd5b60006020828403121561292057600080fd5b815167ffffffffffffffff81111561293757600080fd5b8201601f8101841361294857600080fd5b80516129566125a68261342f565b81815285602083850101111561296b57600080fd5b611bcf8260208301602086016134b4565b60006020828403121561298e57600080fd5b6121cc826128ac565b600080600080600060a086880312156129af57600080fd5b6129b8866128ac565b945060208601356129c881613592565b935060408601356129d881613592565b925060608601359150608086013567ffffffffffffffff8111156129fb57600080fd5b612a078882890161280e565b9150509295509295909350565b600080600080600060a08688031215612a2c57600080fd5b612a35866128ac565b94506020860135612a4581613592565b9350604086013567ffffffffffffffff80821115612a6257600080fd5b612a6e89838a016126e0565b94506060880135915080821115612a8457600080fd5b612a9089838a01612645565b93506080880135915080821115612aa657600080fd5b50612a078882890161280e565b60008060008060808587031215612ac957600080fd5b612ad2856128ac565b93506020850135612ae281613592565b925060408501359150606085013567ffffffffffffffff811115612b0557600080fd5b612b118782880161280e565b91505092959194509250565b600080600060408486031215612b3257600080fd5b612b3b846128ac565b9250602084013567ffffffffffffffff811115612b5757600080fd5b612b638682870161253e565b9497909650939450505050565b600080600060608486031215612b8557600080fd5b612b8e846128ac565b9250602084013567ffffffffffffffff811115612baa57600080fd5b612bb686828701612587565b9250506040840135612bc7816135b4565b809150509250925092565b60008060008060808587031215612be857600080fd5b612bf1856128ac565b9350602085013567ffffffffffffffff80821115612c0e57600080fd5b612c1a88838901612587565b945060408701359150612c2c826135b4565b90925060608601359080821115612c4257600080fd5b50612b1187828801612587565b60008060008060808587031215612c6557600080fd5b612c6e856128ac565b9350602085013567ffffffffffffffff80821115612c8b57600080fd5b612c97888389016126e0565b94506040870135915080821115612cad57600080fd5b612cb988838901612645565b93506060870135915080821115612ccf57600080fd5b50612b118782880161280e565b60008060008060808587031215612cf257600080fd5b612cfb856128ac565b9350612d09602086016128ac565b92506040850135612d1981613592565b9396929550929360600135925050565b600080600080600060808688031215612d4157600080fd5b612d4a866128ac565b9450612d58602087016128ac565b935060408601359250606086013567ffffffffffffffff811115612d7b57600080fd5b612d878882890161253e565b969995985093965092949392505050565b60008060408385031215612dab57600080fd5b612db4836128ac565b9150612dc2602084016128be565b90509250929050565b60008060008060808587031215612de157600080fd5b612dea856128ac565b9350612df8602086016128be565b9250604085013567ffffffffffffffff80821115612e1557600080fd5b612cb988838901612587565b600080600060608486031215612e3657600080fd5b612e3f846128ac565b9250612e4d602085016128be565b9150604084013590509250925092565b60008060408385031215612e7057600080fd5b505080516020909101519092909150565b600060208284031215612e9357600080fd5b81516121cc816135b4565b600081518084526020808501945080840160005b83811015612ece57815187529582019590820190600101612eb2565b509495945050505050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b60008151808452612f3a8160208601602086016134b4565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60068110612fa3577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b61ffff81511682526000602082015160606020850152612fca6060850182612f22565b905060408301518482036040860152611bcf8282612f22565b8183823760009101908152919050565b600082516130058184602087016134b4565b9190910192915050565b7fffff0000000000000000000000000000000000000000000000000000000000008560f01b168152836002820152826022820152600082516130588160428501602087016134b4565b9190910160420195945050505050565b6020815260006121cc6020830184612f22565b61ffff8616815273ffffffffffffffffffffffffffffffffffffffff8516602082015260a0604082015260006130b460a0830186612f22565b841515606084015282810360808401526130ce8185612f22565b98975050505050505050565b61ffff84168152604060208201526000611bcf604083018486612ed9565b61ffff8716815260c06020820152600061311560c0830188612f22565b82810360408401526131278188612f22565b73ffffffffffffffffffffffffffffffffffffffff87811660608601528616608085015283810360a0850152905061315f8185612f22565b9998505050505050505050565b61ffff851681526080602082015260006131896080830186612f22565b67ffffffffffffffff8516604084015282810360608401526131ab8185612f22565b979650505050505050565b600061ffff8088168352808716602084015250846040830152608060608301526131ab608083018486612ed9565b60ff831681526040602082015260006132006040830184612f22565b949350505050565b60ff841681526060602082015261323860608201845173ffffffffffffffffffffffffffffffffffffffff169052565b6000602084015161324f608084018261ffff169052565b50604084015173ffffffffffffffffffffffffffffffffffffffff1660a0830152606084015161020060c084015261328b610260840182612e9e565b905060808501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa08483030160e08501526132c68282612e9e565b91505060a08501516101006132f28186018373ffffffffffffffffffffffffffffffffffffffff169052565b60c0870151915061012061330881870184612f6c565b60e08801516101408781019190915291880151610160808801919091529088015161018080880191909152918801516101a0808801919091529088015192506101c0919061335b8388018561ffff169052565b90880151805173ffffffffffffffffffffffffffffffffffffffff166101e0880152602001516102008701528701516102208601528601516102408501525082810360408401526133ac8185612fa7565b9695505050505050565b6040516101e0810167ffffffffffffffff811182821017156133da576133da613563565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561342757613427613563565b604052919050565b600067ffffffffffffffff82111561344957613449613563565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082198211156134af577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500190565b60005b838110156134cf5781810151838201526020016134b7565b838111156112af5750506000910152565b600181811c908216806134f457607f821691505b6020821081141561352e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff81168114611ad157600080fd5b67ffffffffffffffff81168114611ad157600080fdfea2646970667358221220b3b7f7dc4477925f114ab4b4308e6e40f478e0fb776b17bc8c48c22c761083c164736f6c63430008060033",
  "deployedBytecode": "0x6080604052600436106101ab5760003560e01c8063715018a6116100ec578063c213dc2b1161008a578063eb8d72b711610064578063eb8d72b71461054f578063f2fde38b1461056f578063f5ecbdbc1461058f578063fc869108146105af57600080fd5b8063c213dc2b146104fc578063cbed8b9c1461051c578063d1deba1f1461053c57600080fd5b80638c7ae0fc116100c65780638c7ae0fc146104585780638da5cb5b1461048a578063903d1a94146104b5578063b353aaa7146104c857600080fd5b8063715018a6146103f65780637533d7881461040b5780637cbbc5d21461043857600080fd5b80631b0899fc1161015957806342d65a8d1161013357806342d65a8d146103155780635b8c41e614610335578063630dc7cb1461038457806366ad5c8a146103d657600080fd5b80631b0899fc146102a55780631c3c0ea8146102c55780633d8b38f6146102e557600080fd5b806308ee3efb1161018a57806308ee3efb1461023d578063107f6e281461027257806310ddb1371461028557600080fd5b80621d3567146101b057806302422054146101d257806307e0db171461021d575b600080fd5b3480156101bc57600080fd5b506101d06101cb366004612bd2565b6105cf565b005b3480156101de57600080fd5b5061020a6101ed366004612d98565b600360209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b34801561022957600080fd5b506101d061023836600461297c565b6107ce565b34801561024957600080fd5b5061025d610258366004612ab3565b6108ef565b60408051928352602083019190915201610214565b6101d0610280366004612a14565b610a3f565b34801561029157600080fd5b506101d06102a036600461297c565b610b24565b3480156102b157600080fd5b5061025d6102c0366004612dcb565b610c1b565b3480156102d157600080fd5b506101d06102e03660046128cf565b610f52565b3480156102f157600080fd5b50610305610300366004612b1d565b61101a565b6040519015158152602001610214565b34801561032157600080fd5b506101d0610330366004612b1d565b6110e6565b34801561034157600080fd5b5061020a610350366004612b70565b6002602090815260009384526040808520845180860184018051928152908401958401959095209452929052825290205481565b34801561039057600080fd5b506004546103b19073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610214565b3480156103e257600080fd5b506101d06103f1366004612bd2565b611214565b34801561040257600080fd5b506101d06112b5565b34801561041757600080fd5b5061042b61042636600461297c565b611338565b6040516102149190613068565b34801561044457600080fd5b5061025d610453366004612c4f565b6113d2565b34801561046457600080fd5b506004546103059074010000000000000000000000000000000000000000900460ff1681565b34801561049657600080fd5b5060005473ffffffffffffffffffffffffffffffffffffffff166103b1565b6101d06104c3366004612997565b61140c565b3480156104d457600080fd5b506103b17f000000000000000000000000000000000000000000000000000000000000000081565b34801561050857600080fd5b506101d06105173660046128ec565b611507565b34801561052857600080fd5b506101d0610537366004612d29565b6115d2565b6101d061054a366004612bd2565b611706565b34801561055b57600080fd5b506101d061056a366004612b1d565b6118c4565b34801561057b57600080fd5b506101d061058a3660046128cf565b6119a4565b34801561059b57600080fd5b5061042b6105aa366004612cdc565b611ad4565b3480156105bb57600080fd5b506101d06105ca366004612e21565b611bd8565b337f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1614610673576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f4c7a4170703a20696e76616c696420656e64706f696e742063616c6c6572000060448201526064015b60405180910390fd5b61ffff841660009081526001602052604081208054610691906134e0565b80601f01602080910402602001604051908101604052809291908181526020018280546106bd906134e0565b801561070a5780601f106106df5761010080835404028352916020019161070a565b820191906000526020600020905b8154815290600101906020018083116106ed57829003601f168201915b505050505090508051845114801561072f575080805190602001208480519060200120145b6107bb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4c7a4170703a20696e76616c696420736f757263652073656e64696e6720636f60448201527f6e74726163740000000000000000000000000000000000000000000000000000606482015260840161066a565b6107c785858585611cfc565b5050505050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461084f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161066a565b6040517f07e0db1700000000000000000000000000000000000000000000000000000000815261ffff821660048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906307e0db17906024015b600060405180830381600087803b1580156108db57600080fd5b505af11580156107c7573d6000803e3d6000fd5b604080516002602082015273ffffffffffffffffffffffffffffffffffffffff85169181019190915260608101839052600090819081906080016040516020818303038152906040529050600061094888600287611e07565b600480546040517f40a7bb100000000000000000000000000000000000000000000000000000000081529293507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16926340a7bb10926109e1928d923092899274010000000000000000000000000000000000000000900460ff169189910161307b565b604080518083038186803b1580156109f857600080fd5b505afa158015610a0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a309190612e5d565b93509350505094509492505050565b60045473ffffffffffffffffffffffffffffffffffffffff163314610ae5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f4c75636b733a2063616c6c6572206d757374206265204c75636b73457865637560448201527f746f722e00000000000000000000000000000000000000000000000000000000606482015260840161066a565b600060018484604051602001610afd93929190613208565b6040516020818303038152906040529050610b1c866001878585611ee4565b505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610ba5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161066a565b6040517f10ddb13700000000000000000000000000000000000000000000000000000000815261ffff821660048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906310ddb137906024016108c1565b60408051602080820183526000808352835160028082526060820186529194859493859391908301908036833701905050905061271081600081518110610c6457610c64613534565b60200260200101818152505061271081600181518110610c8657610c86613534565b602090810291909101015260ff871660011415610daa57604080516101e0810182526000808252602080830182905282840182905260608084018690526080840186905260a08401839052600160c085018190524260e08601819052610100860152683635c9adc5dea00000610120860152670de0b6b3a76400006101408601819052610160860182905286518088018852858152808501919091526101808601526101a08501939093526127106101c08501528451908101855282815284518086018652601981527f6e667420636f6c6c656374696f6e206974656d207469746c650000000000000081840152818301528085018b90529351929392610d9292918591859101613208565b60405160208183030381529060405293505050610e4d565b60ff871660021415610deb57604080516002602082015260009181019190915261271060608201526080016040516020818303038152906040529150610e4d565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4c75636b733a20756e737570706f727465642066756e6374696f6e2074797065604482015260640161066a565b6000610e5a898988611e07565b600480546040517f40a7bb100000000000000000000000000000000000000000000000000000000081529293507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16926340a7bb1092610ef3928e9230928a9274010000000000000000000000000000000000000000900460ff169189910161307b565b604080518083038186803b158015610f0a57600080fd5b505afa158015610f1e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f429190612e5d565b9450945050505094509492505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610fd3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161066a565b600480547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b61ffff83166000908152600160205260408120805482919061103b906134e0565b80601f0160208091040260200160405190810160405280929190818152602001828054611067906134e0565b80156110b45780601f10611089576101008083540402835291602001916110b4565b820191906000526020600020905b81548152906001019060200180831161109757829003601f168201915b5050505050905083836040516110cb929190612fe3565b60405180910390208180519060200120149150509392505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314611167576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161066a565b6040517f42d65a8d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906342d65a8d906111dd908690869086906004016130da565b600060405180830381600087803b1580156111f757600080fd5b505af115801561120b573d6000803e3d6000fd5b50505050505050565b3330146112a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4e6f6e626c6f636b696e674c7a4170703a2063616c6c6572206d75737420626560448201527f204c7a4170700000000000000000000000000000000000000000000000000000606482015260840161066a565b6112af84848484612026565b50505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314611336576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161066a565b565b60016020526000908152604090208054611351906134e0565b80601f016020809104026020016040519081016040528092919081815260200182805461137d906134e0565b80156113ca5780601f1061139f576101008083540402835291602001916113ca565b820191906000526020600020905b8154815290600101906020018083116113ad57829003601f168201915b505050505081565b6000806000600186866040516020016113ed93929190613208565b6040516020818303038152906040529050600061094888600187611e07565b60045473ffffffffffffffffffffffffffffffffffffffff1633146114b2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f4c75636b733a2063616c6c6572206d757374206265204c75636b73457865637560448201527f746f722e00000000000000000000000000000000000000000000000000000000606482015260840161066a565b604080516002602082015273ffffffffffffffffffffffffffffffffffffffff851691810191909152606081018390526000906080016040516020818303038152906040529050610b1c866002878585611ee4565b60005473ffffffffffffffffffffffffffffffffffffffff163314611588576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161066a565b6004805491151574010000000000000000000000000000000000000000027fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff163314611653576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161066a565b6040517fcbed8b9c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063cbed8b9c906116cd90889088908890889088906004016131b6565b600060405180830381600087803b1580156116e757600080fd5b505af11580156116fb573d6000803e3d6000fd5b505050505050505050565b61ffff84166000908152600260205260408082209051611727908690612ff3565b908152604080516020928190038301902067ffffffffffffffff8616600090815292529020549050806117dc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f4e6f6e626c6f636b696e674c7a4170703a206e6f2073746f726564206d65737360448201527f6167650000000000000000000000000000000000000000000000000000000000606482015260840161066a565b815160208301208114611871576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f4e6f6e626c6f636b696e674c7a4170703a20696e76616c6964207061796c6f6160448201527f6400000000000000000000000000000000000000000000000000000000000000606482015260840161066a565b61ffff85166000908152600260205260408082209051611892908790612ff3565b908152604080516020928190038301902067ffffffffffffffff8716600090815292529020556107c785858585612026565b60005473ffffffffffffffffffffffffffffffffffffffff163314611945576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161066a565b61ffff831660009081526001602052604090206119639083836123f1565b507ffa41487ad5d6728f0b19276fa1eddc16558578f5109fc39d2dc33c3230470dab838383604051611997939291906130da565b60405180910390a1505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314611a25576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161066a565b73ffffffffffffffffffffffffffffffffffffffff8116611ac8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161066a565b611ad18161214b565b50565b6040517ff5ecbdbc00000000000000000000000000000000000000000000000000000000815261ffff808616600483015284166024820152306044820152606481018290526060907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063f5ecbdbc9060840160006040518083038186803b158015611b7557600080fd5b505afa158015611b89573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052611bcf919081019061290e565b95945050505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314611c59576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161066a565b60018260ff1610158015611c71575060048260ff1611155b611cd7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f4c75636b733a20696e76616c6964205f66756e6374696f6e5479706500000000604482015260640161066a565b61ffff909216600090815260036020908152604080832060ff90941683529290522055565b6040517f66ad5c8a00000000000000000000000000000000000000000000000000000000815230906366ad5c8a90611d3e90879087908790879060040161316c565b600060405180830381600087803b158015611d5857600080fd5b505af1925050508015611d69575060015b6112af578080519060200120600260008661ffff1661ffff16815260200190815260200160002084604051611d9e9190612ff3565b90815260408051918290036020908101832067ffffffffffffffff87166000908152915220919091557fe6f254030bcb01ffd20558175c13fcaed6d1520be7becee4c961b65f79243b0d90611dfa90869086908690869061316c565b60405180910390a16112af565b60408082015160140151825161ffff861660009081526003602090815284822060ff881683529052928320546060938493929091611e44916121c0565b905060008560200151118015611e6f575073ffffffffffffffffffffffffffffffffffffffff821615155b15611e8e57611e8781866020015187604001516121d3565b9250611ed9565b611ed681604080517e01000000000000000000000000000000000000000000000000000000000000602082015260228082019390935281518082039093018352604201905290565b92505b509095945050505050565b6000611ef1868685611e07565b606084015160140151909150611f0a8784878486612209565b6040517f7a14574800000000000000000000000000000000000000000000000000000000815261ffff881660048201523060248201526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690637a1457489060440160206040518083038186803b158015611f9c57600080fd5b505afa158015611fb0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fd49190612e81565b6040805160ff8a16815267ffffffffffffffff831660208201529192507f8d3ee0df6a4b7e82a7f20a763f1c6826e6176323e655af64f32318827d2112d4910160405180910390a15050505050505050565b6020810151600480546040517fe44cb8e400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169163e44cb8e4916120829185918791016131e4565b600060405180830381600087803b15801561209c57600080fd5b505af19250505080156120ad575060015b6107c7578180519060200120600260008761ffff1661ffff168152602001908152602001600020856040516120e29190612ff3565b90815260408051918290036020908101832067ffffffffffffffff88166000908152915220919091557fe6f254030bcb01ffd20558175c13fcaed6d1520be7becee4c961b65f79243b0d9061213e90879087908790879061316c565b60405180910390a16107c7565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006121cc8284613475565b9392505050565b6040516060906002906121f090829087908790879060200161300f565b6040516020818303038152906040529150509392505050565b61ffff851660009081526001602052604081208054612227906134e0565b80601f0160208091040260200160405190810160405280929190818152602001828054612253906134e0565b80156122a05780601f10612275576101008083540402835291602001916122a0565b820191906000526020600020905b81548152906001019060200180831161228357829003601f168201915b50505050509050805160001415612339576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603060248201527f4c7a4170703a2064657374696e6174696f6e20636861696e206973206e6f742060448201527f61207472757374656420736f7572636500000000000000000000000000000000606482015260840161066a565b6040517fc580310000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063c58031009034906123b7908a9086908b908b908b908b906004016130f8565b6000604051808303818588803b1580156123d057600080fd5b505af11580156123e4573d6000803e3d6000fd5b5050505050505050505050565b8280546123fd906134e0565b90600052602060002090601f01602090048101928261241f5760008555612483565b82601f10612456578280017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00823516178555612483565b82800160010185558215612483579182015b82811115612483578235825591602001919060010190612468565b5061248f929150612493565b5090565b5b8082111561248f5760008155600101612494565b80356124b381613592565b919050565b600082601f8301126124c957600080fd5b8135602067ffffffffffffffff8211156124e5576124e5613563565b8160051b6124f48282016133e0565b83815282810190868401838801850189101561250f57600080fd5b600093505b85841015612532578035835260019390930192918401918401612514565b50979650505050505050565b60008083601f84011261255057600080fd5b50813567ffffffffffffffff81111561256857600080fd5b60208301915083602082850101111561258057600080fd5b9250929050565b600082601f83011261259857600080fd5b81356125ab6125a68261342f565b6133e0565b8181528460208386010111156125c057600080fd5b816020850160208301376000918101602001919091529392505050565b8035600681106124b357600080fd5b6000604082840312156125fe57600080fd5b6040516040810181811067ffffffffffffffff8211171561262157612621613563565b604052905080823561263281613592565b8152602092830135920191909152919050565b60006060828403121561265757600080fd5b6040516060810167ffffffffffffffff828210818311171561267b5761267b613563565b8160405282935061268b856128ac565b835260208501359150808211156126a157600080fd5b6126ad86838701612587565b602084015260408501359150808211156126c657600080fd5b506126d385828601612587565b6040830152505092915050565b600061020082840312156126f357600080fd5b6126fb6133b6565b9050612706826124a8565b8152612714602083016128ac565b6020820152612725604083016124a8565b6040820152606082013567ffffffffffffffff8082111561274557600080fd5b612751858386016124b8565b6060840152608084013591508082111561276a57600080fd5b50612777848285016124b8565b60808301525061278960a083016124a8565b60a082015261279a60c083016125dd565b60c082015260e082810135908201526101008083013590820152610120808301359082015261014080830135908201526101606127d88184016128ac565b908201526101806127eb848483016125ec565b81830152506101c0808301356101a08301526101e0830135818301525092915050565b60006080828403121561282057600080fd5b6040516080810167ffffffffffffffff828210818311171561284457612844613563565b816040528293508435835260208501356020840152604085013591508082111561286d57600080fd5b61287986838701612587565b6040840152606085013591508082111561289257600080fd5b5061289f85828601612587565b6060830152505092915050565b803561ffff811681146124b357600080fd5b803560ff811681146124b357600080fd5b6000602082840312156128e157600080fd5b81356121cc81613592565b6000602082840312156128fe57600080fd5b813580151581146121cc57600080fd5b60006020828403121561292057600080fd5b815167ffffffffffffffff81111561293757600080fd5b8201601f8101841361294857600080fd5b80516129566125a68261342f565b81815285602083850101111561296b57600080fd5b611bcf8260208301602086016134b4565b60006020828403121561298e57600080fd5b6121cc826128ac565b600080600080600060a086880312156129af57600080fd5b6129b8866128ac565b945060208601356129c881613592565b935060408601356129d881613592565b925060608601359150608086013567ffffffffffffffff8111156129fb57600080fd5b612a078882890161280e565b9150509295509295909350565b600080600080600060a08688031215612a2c57600080fd5b612a35866128ac565b94506020860135612a4581613592565b9350604086013567ffffffffffffffff80821115612a6257600080fd5b612a6e89838a016126e0565b94506060880135915080821115612a8457600080fd5b612a9089838a01612645565b93506080880135915080821115612aa657600080fd5b50612a078882890161280e565b60008060008060808587031215612ac957600080fd5b612ad2856128ac565b93506020850135612ae281613592565b925060408501359150606085013567ffffffffffffffff811115612b0557600080fd5b612b118782880161280e565b91505092959194509250565b600080600060408486031215612b3257600080fd5b612b3b846128ac565b9250602084013567ffffffffffffffff811115612b5757600080fd5b612b638682870161253e565b9497909650939450505050565b600080600060608486031215612b8557600080fd5b612b8e846128ac565b9250602084013567ffffffffffffffff811115612baa57600080fd5b612bb686828701612587565b9250506040840135612bc7816135b4565b809150509250925092565b60008060008060808587031215612be857600080fd5b612bf1856128ac565b9350602085013567ffffffffffffffff80821115612c0e57600080fd5b612c1a88838901612587565b945060408701359150612c2c826135b4565b90925060608601359080821115612c4257600080fd5b50612b1187828801612587565b60008060008060808587031215612c6557600080fd5b612c6e856128ac565b9350602085013567ffffffffffffffff80821115612c8b57600080fd5b612c97888389016126e0565b94506040870135915080821115612cad57600080fd5b612cb988838901612645565b93506060870135915080821115612ccf57600080fd5b50612b118782880161280e565b60008060008060808587031215612cf257600080fd5b612cfb856128ac565b9350612d09602086016128ac565b92506040850135612d1981613592565b9396929550929360600135925050565b600080600080600060808688031215612d4157600080fd5b612d4a866128ac565b9450612d58602087016128ac565b935060408601359250606086013567ffffffffffffffff811115612d7b57600080fd5b612d878882890161253e565b969995985093965092949392505050565b60008060408385031215612dab57600080fd5b612db4836128ac565b9150612dc2602084016128be565b90509250929050565b60008060008060808587031215612de157600080fd5b612dea856128ac565b9350612df8602086016128be565b9250604085013567ffffffffffffffff80821115612e1557600080fd5b612cb988838901612587565b600080600060608486031215612e3657600080fd5b612e3f846128ac565b9250612e4d602085016128be565b9150604084013590509250925092565b60008060408385031215612e7057600080fd5b505080516020909101519092909150565b600060208284031215612e9357600080fd5b81516121cc816135b4565b600081518084526020808501945080840160005b83811015612ece57815187529582019590820190600101612eb2565b509495945050505050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b60008151808452612f3a8160208601602086016134b4565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60068110612fa3577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b61ffff81511682526000602082015160606020850152612fca6060850182612f22565b905060408301518482036040860152611bcf8282612f22565b8183823760009101908152919050565b600082516130058184602087016134b4565b9190910192915050565b7fffff0000000000000000000000000000000000000000000000000000000000008560f01b168152836002820152826022820152600082516130588160428501602087016134b4565b9190910160420195945050505050565b6020815260006121cc6020830184612f22565b61ffff8616815273ffffffffffffffffffffffffffffffffffffffff8516602082015260a0604082015260006130b460a0830186612f22565b841515606084015282810360808401526130ce8185612f22565b98975050505050505050565b61ffff84168152604060208201526000611bcf604083018486612ed9565b61ffff8716815260c06020820152600061311560c0830188612f22565b82810360408401526131278188612f22565b73ffffffffffffffffffffffffffffffffffffffff87811660608601528616608085015283810360a0850152905061315f8185612f22565b9998505050505050505050565b61ffff851681526080602082015260006131896080830186612f22565b67ffffffffffffffff8516604084015282810360608401526131ab8185612f22565b979650505050505050565b600061ffff8088168352808716602084015250846040830152608060608301526131ab608083018486612ed9565b60ff831681526040602082015260006132006040830184612f22565b949350505050565b60ff841681526060602082015261323860608201845173ffffffffffffffffffffffffffffffffffffffff169052565b6000602084015161324f608084018261ffff169052565b50604084015173ffffffffffffffffffffffffffffffffffffffff1660a0830152606084015161020060c084015261328b610260840182612e9e565b905060808501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa08483030160e08501526132c68282612e9e565b91505060a08501516101006132f28186018373ffffffffffffffffffffffffffffffffffffffff169052565b60c0870151915061012061330881870184612f6c565b60e08801516101408781019190915291880151610160808801919091529088015161018080880191909152918801516101a0808801919091529088015192506101c0919061335b8388018561ffff169052565b90880151805173ffffffffffffffffffffffffffffffffffffffff166101e0880152602001516102008701528701516102208601528601516102408501525082810360408401526133ac8185612fa7565b9695505050505050565b6040516101e0810167ffffffffffffffff811182821017156133da576133da613563565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561342757613427613563565b604052919050565b600067ffffffffffffffff82111561344957613449613563565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082198211156134af577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500190565b60005b838110156134cf5781810151838201526020016134b7565b838111156112af5750506000910152565b600181811c908216806134f457607f821691505b6020821081141561352e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff81168114611ad157600080fd5b67ffffffffffffffff81168114611ad157600080fdfea2646970667358221220b3b7f7dc4477925f114ab4b4308e6e40f478e0fb776b17bc8c48c22c761083c164736f6c63430008060033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "setExecutor(address)": {
        "notice": "set operator"
      },
      "setUseLayerZeroToken(bool)": {
        "notice": "set useLayerZeroToken"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 917,
        "contract": "contracts/LucksBridge.sol:LucksBridge",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 20290,
        "contract": "contracts/LucksBridge.sol:LucksBridge",
        "label": "trustedRemoteLookup",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint16,t_bytes_storage)"
      },
      {
        "astId": 20580,
        "contract": "contracts/LucksBridge.sol:LucksBridge",
        "label": "failedMessages",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))"
      },
      {
        "astId": 5578,
        "contract": "contracts/LucksBridge.sol:LucksBridge",
        "label": "gasLookup",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint16,t_mapping(t_uint8,t_uint256))"
      },
      {
        "astId": 5581,
        "contract": "contracts/LucksBridge.sol:LucksBridge",
        "label": "EXECUTOR",
        "offset": 0,
        "slot": "4",
        "type": "t_contract(ILucksExecutor)10083"
      },
      {
        "astId": 5583,
        "contract": "contracts/LucksBridge.sol:LucksBridge",
        "label": "useLayerZeroToken",
        "offset": 20,
        "slot": "4",
        "type": "t_bool"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_bytes_memory_ptr": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_contract(ILucksExecutor)10083": {
        "encoding": "inplace",
        "label": "contract ILucksExecutor",
        "numberOfBytes": "20"
      },
      "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
        "encoding": "mapping",
        "key": "t_bytes_memory_ptr",
        "label": "mapping(bytes => mapping(uint64 => bytes32))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint64,t_bytes32)"
      },
      "t_mapping(t_uint16,t_bytes_storage)": {
        "encoding": "mapping",
        "key": "t_uint16",
        "label": "mapping(uint16 => bytes)",
        "numberOfBytes": "32",
        "value": "t_bytes_storage"
      },
      "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
        "encoding": "mapping",
        "key": "t_uint16",
        "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))"
      },
      "t_mapping(t_uint16,t_mapping(t_uint8,t_uint256))": {
        "encoding": "mapping",
        "key": "t_uint16",
        "label": "mapping(uint16 => mapping(uint8 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint8,t_uint256)"
      },
      "t_mapping(t_uint64,t_bytes32)": {
        "encoding": "mapping",
        "key": "t_uint64",
        "label": "mapping(uint64 => bytes32)",
        "numberOfBytes": "32",
        "value": "t_bytes32"
      },
      "t_mapping(t_uint8,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint8",
        "label": "mapping(uint8 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint16": {
        "encoding": "inplace",
        "label": "uint16",
        "numberOfBytes": "2"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}