{
  "address": "0x88542760090E974A21fea5038C49C009db7A3e0F",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_layerZeroEndpoint",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_executor",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "bridgeFunctionType",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "chainId",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "srcAddress",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "result",
          "type": "bool"
        }
      ],
      "name": "RetryResult",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "bridgeFunctionType",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "chainId",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "srcAddress",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "reason",
          "type": "bytes"
        }
      ],
      "name": "Revert",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "msgType",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "nonce",
          "type": "uint64"
        }
      ],
      "name": "SendMsg",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "name": "bridgeLookup",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "executor",
      "outputs": [
        {
          "internalType": "contract ILucksExecutor",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_srcChainId",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "_srcAddress",
          "type": "bytes"
        }
      ],
      "name": "forceResumeReceive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "name": "gasLookup",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "layerZeroEndpoint",
      "outputs": [
        {
          "internalType": "contract ILayerZeroEndpoint",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_srcChainId",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "_srcAddress",
          "type": "bytes"
        },
        {
          "internalType": "uint64",
          "name": "_nonce",
          "type": "uint64"
        },
        {
          "internalType": "bytes",
          "name": "_payload",
          "type": "bytes"
        }
      ],
      "name": "lzReceive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_chainId",
          "type": "uint16"
        },
        {
          "internalType": "uint8",
          "name": "_functionType",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "_note",
          "type": "string"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "dstGasForCall",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dstNativeAmount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "dstNativeAddr",
              "type": "bytes"
            }
          ],
          "internalType": "struct lzTxObj",
          "name": "_lzTxParams",
          "type": "tuple"
        }
      ],
      "name": "quoteLayerZeroFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_srcChainId",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "_srcAddress",
          "type": "bytes"
        },
        {
          "internalType": "uint64",
          "name": "_nonce",
          "type": "uint64"
        }
      ],
      "name": "retryRevert",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "name": "revertLookup",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_dstChainId",
          "type": "uint16"
        },
        {
          "internalType": "address payable",
          "name": "user",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "nftChainId",
              "type": "uint16"
            },
            {
              "internalType": "address",
              "name": "nftContract",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "tokenIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "tokenAmounts",
              "type": "uint256[]"
            },
            {
              "internalType": "address",
              "name": "acceptToken",
              "type": "address"
            },
            {
              "internalType": "enum TaskStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "targetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint16",
              "name": "paymentStrategy",
              "type": "uint16"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct ExclusiveToken",
              "name": "exclusiveToken",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "amountCollected",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "depositId",
              "type": "uint256"
            }
          ],
          "internalType": "struct TaskItem",
          "name": "item",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint16",
              "name": "chainId",
              "type": "uint16"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "note",
              "type": "string"
            }
          ],
          "internalType": "struct TaskExt",
          "name": "ext",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "dstGasForCall",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dstNativeAmount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "dstNativeAddr",
              "type": "bytes"
            }
          ],
          "internalType": "struct lzTxObj",
          "name": "_lzTxParams",
          "type": "tuple"
        }
      ],
      "name": "sendCreateTask",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_dstChainId",
          "type": "uint16"
        },
        {
          "internalType": "address payable",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "depositId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "dstGasForCall",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dstNativeAmount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "dstNativeAddr",
              "type": "bytes"
            }
          ],
          "internalType": "struct lzTxObj",
          "name": "_lzTxParams",
          "type": "tuple"
        }
      ],
      "name": "sendWithdrawNFTs",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_chainId",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "_bridgeAddress",
          "type": "bytes"
        }
      ],
      "name": "setBridge",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_version",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "_chainId",
          "type": "uint16"
        },
        {
          "internalType": "uint256",
          "name": "_configType",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_config",
          "type": "bytes"
        }
      ],
      "name": "setConfig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_chainId",
          "type": "uint16"
        },
        {
          "internalType": "uint8",
          "name": "_functionType",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "_gasAmount",
          "type": "uint256"
        }
      ],
      "name": "setGasAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "version",
          "type": "uint16"
        }
      ],
      "name": "setReceiveVersion",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "version",
          "type": "uint16"
        }
      ],
      "name": "setSendVersion",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "enable",
          "type": "bool"
        }
      ],
      "name": "setUseLayerZeroToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "useLayerZeroToken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xc4ff3f3be7f4e284db1806e4034a752c87568cba8ea74ff02fd957c876905c9f",
  "receipt": {
    "to": null,
    "from": "0x5b770F460978C456d69bC46463dfda71FEEE60AD",
    "contractAddress": "0x88542760090E974A21fea5038C49C009db7A3e0F",
    "transactionIndex": 0,
    "gasUsed": "2708067",
    "logsBloom": "0x
    "blockHash": "0xeb3d530e95dc3ba2cff5c38f9308168f4c76ea6e4afabe2f125c4123de13a381",
    "transactionHash": "0xc4ff3f3be7f4e284db1806e4034a752c87568cba8ea74ff02fd957c876905c9f",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 18972377,
        "transactionHash": "0xc4ff3f3be7f4e284db1806e4034a752c87568cba8ea74ff02fd957c876905c9f",
        "address": "0x88542760090E974A21fea5038C49C009db7A3e0F",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000005b770f460978c456d69bc46463dfda71feee60ad"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xeb3d530e95dc3ba2cff5c38f9308168f4c76ea6e4afabe2f125c4123de13a381"
      }
    ],
    "blockNumber": 18972377,
    "cumulativeGasUsed": "2708067",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x6Fcb97553D41516Cb228ac03FdC8B9a0a9df04A1",
    "0x486eB7D45626FDae26DE504fc24244F297290D1B"
  ],
  "numDeployments": 1,
  "solcInputHash": "c901f1a063d05d2c0029f9800f4d2c88",
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_layerZeroEndpoint\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_executor\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"bridgeFunctionType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"srcAddress\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"name\":\"RetryResult\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"bridgeFunctionType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"srcAddress\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"reason\",\"type\":\"bytes\"}],\"name\":\"Revert\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"msgType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"name\":\"SendMsg\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"bridgeLookup\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"executor\",\"outputs\":[{\"internalType\":\"contract ILucksExecutor\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"forceResumeReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"gasLookup\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"layerZeroEndpoint\",\"outputs\":[{\"internalType\":\"contract ILayerZeroEndpoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"lzReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"_functionType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"_note\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"dstGasForCall\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dstNativeAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"dstNativeAddr\",\"type\":\"bytes\"}],\"internalType\":\"struct lzTxObj\",\"name\":\"_lzTxParams\",\"type\":\"tuple\"}],\"name\":\"quoteLayerZeroFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"}],\"name\":\"retryRevert\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"revertLookup\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"address payable\",\"name\":\"user\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"nftChainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"acceptToken\",\"type\":\"address\"},{\"internalType\":\"enum TaskStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"targetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"paymentStrategy\",\"type\":\"uint16\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ExclusiveToken\",\"name\":\"exclusiveToken\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amountCollected\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositId\",\"type\":\"uint256\"}],\"internalType\":\"struct TaskItem\",\"name\":\"item\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"note\",\"type\":\"string\"}],\"internalType\":\"struct TaskExt\",\"name\":\"ext\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"dstGasForCall\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dstNativeAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"dstNativeAddr\",\"type\":\"bytes\"}],\"internalType\":\"struct lzTxObj\",\"name\":\"_lzTxParams\",\"type\":\"tuple\"}],\"name\":\"sendCreateTask\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"address payable\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"depositId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"dstGasForCall\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dstNativeAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"dstNativeAddr\",\"type\":\"bytes\"}],\"internalType\":\"struct lzTxObj\",\"name\":\"_lzTxParams\",\"type\":\"tuple\"}],\"name\":\"sendWithdrawNFTs\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_bridgeAddress\",\"type\":\"bytes\"}],\"name\":\"setBridge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_config\",\"type\":\"bytes\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"_functionType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_gasAmount\",\"type\":\"uint256\"}],\"name\":\"setGasAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"version\",\"type\":\"uint16\"}],\"name\":\"setReceiveVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"version\",\"type\":\"uint16\"}],\"name\":\"setSendVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"enable\",\"type\":\"bool\"}],\"name\":\"setUseLayerZeroToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"useLayerZeroToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LucksBridge.sol\":\"LucksBridge\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\"},\"contracts/LucksBridge.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\r\\npragma solidity ^0.8.0;\\r\\npragma abicoder v2;\\r\\n\\r\\n// imports\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\n\\r\\n// OpenLuck\\r\\nimport \\\"./interfaces/ILucksExecutor.sol\\\";\\r\\nimport \\\"./interfaces/ILucksBridge.sol\\\";\\r\\n\\r\\n// interfaces\\r\\nimport \\\"./interfaces/ILayerZeroReceiver.sol\\\";\\r\\nimport \\\"./interfaces/ILayerZeroEndpoint.sol\\\";\\r\\nimport \\\"./interfaces/ILayerZeroUserApplicationConfig.sol\\\";\\r\\n\\r\\n\\r\\ncontract LucksBridge is Ownable, ILucksBridge, ILayerZeroReceiver, ILayerZeroUserApplicationConfig {\\r\\n    using SafeMath for uint256;\\r\\n    //---------------------------------------------------------------------------\\r\\n    // CONSTANTS\\r\\n    uint8 internal constant TYPE_CREATE_TASK = 1;\\r\\n    uint8 internal constant TYPE_WITHDRAW_NFT = 2;\\r\\n\\r\\n    //---------------------------------------------------------------------------\\r\\n    // VARIABLES\\r\\n    ILayerZeroEndpoint public immutable layerZeroEndpoint;\\r\\n    mapping(uint16 => bytes) public bridgeLookup;\\r\\n    mapping(uint16 => mapping(uint8 => uint256)) public gasLookup;\\r\\n    ILucksExecutor public immutable executor;\\r\\n    bool public useLayerZeroToken;\\r\\n\\r\\n    mapping(uint16 => mapping(bytes => mapping(uint64 => bytes))) public revertLookup; //[chainId][srcAddress][nonce]\\r\\n\\r\\n    //---------------------------------------------------------------------------\\r\\n    // MODIFIERS\\r\\n    modifier onlyExecutor() {\\r\\n        require(msg.sender == address(executor), \\\"Lucks: caller must be LucksExecutor.\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    constructor(address _layerZeroEndpoint, address _executor) {\\r\\n        require(_layerZeroEndpoint != address(0x0), \\\"Lucks: _layerZeroEndpoint cannot be 0x0\\\");\\r\\n        require(_executor != address(0x0), \\\"Lucks: _executor cannot be 0x0\\\");\\r\\n        layerZeroEndpoint = ILayerZeroEndpoint(_layerZeroEndpoint);\\r\\n        executor = ILucksExecutor(_executor);\\r\\n    }\\r\\n\\r\\n    // ============ EXTERNAL functions ============\\r\\n\\r\\n    function lzReceive(\\r\\n        uint16 _srcChainId, // the chainId that we are receiving the message from.\\r\\n        bytes memory _srcAddress, // the source bridge address from\\r\\n        uint64 _nonce,\\r\\n        bytes memory _payload\\r\\n    ) external override {\\r\\n        require(msg.sender == address(layerZeroEndpoint), \\\"Lucks: only LayerZero endpoint can call lzReceive\\\");\\r\\n        require(\\r\\n            _srcAddress.length == bridgeLookup[_srcChainId].length && keccak256(_srcAddress) == keccak256(bridgeLookup[_srcChainId]),\\r\\n            \\\"Lucks: bridge does not match\\\"\\r\\n        );\\r\\n\\r\\n        uint8 functionType;\\r\\n        assembly {\\r\\n            functionType := mload(add(_payload, 32))\\r\\n        }\\r\\n\\r\\n        try executor.onLzReceive(functionType, _payload) {\\r\\n            // do noting\\r\\n        } catch(bytes memory reason) {\\r\\n            // store error for future retry\\r\\n            revertLookup[_srcChainId][_srcAddress][_nonce] = _payload;\\r\\n            emit Revert(functionType, _srcChainId, _srcAddress, _nonce, reason);\\r\\n        }\\r\\n        \\r\\n    }\\r\\n\\r\\n    function retryRevert(\\r\\n        uint16 _srcChainId,\\r\\n        bytes calldata _srcAddress,\\r\\n        uint64 _nonce\\r\\n    ) external payable {\\r\\n        bytes memory payload = revertLookup[_srcChainId][_srcAddress][_nonce];\\r\\n        require(payload.length > 0, \\\"Lucks: no retry revert\\\");\\r\\n\\r\\n        // empty it\\r\\n        revertLookup[_srcChainId][_srcAddress][_nonce] = \\\"\\\";\\r\\n\\r\\n        uint8 functionType;\\r\\n        assembly {\\r\\n            functionType := mload(add(payload, 32))\\r\\n        }\\r\\n\\r\\n        try executor.onLzReceive(functionType, payload) {            \\r\\n            emit RetryResult(functionType, _srcChainId, _srcAddress, _nonce, true);\\r\\n        } catch {\\r\\n            // store error for future retry\\r\\n            revertLookup[_srcChainId][_srcAddress][_nonce] = payload;\\r\\n            emit RetryResult(functionType, _srcChainId, _srcAddress, _nonce, false);\\r\\n        }\\r\\n    }\\r\\n\\r\\n\\r\\n    // return (nativeFee,zroFee)\\r\\n    function quoteLayerZeroFee(\\r\\n        uint16 _chainId,\\r\\n        uint8 _functionType,           \\r\\n        string memory _note,  \\r\\n        lzTxObj memory _lzTxParams\\r\\n    ) override external view returns (uint256, uint256) {\\r\\n        bytes memory payload = \\\"\\\";\\r\\n        uint256[] memory amounts = new uint256[](2);\\r\\n        amounts[0] = 10000;\\r\\n        amounts[1] = 10000;\\r\\n\\r\\n        if (_functionType == TYPE_CREATE_TASK) {\\r\\n                       \\r\\n            TaskItem memory item = TaskItem(\\r\\n                address(0), 0, address(0), amounts, amounts, \\r\\n                address(0), TaskStatus.Open, \\r\\n                block.timestamp, block.timestamp,\\r\\n                1000e18,\\r\\n                1e18,\\r\\n                1, \\r\\n                ExclusiveToken(address(0), 1e18), \\r\\n                0,\\r\\n                10000                \\r\\n            );\\r\\n            TaskExt memory ext = TaskExt(1, \\\"nft collection item title\\\", _note);\\r\\n\\r\\n            payload = abi.encode(TYPE_CREATE_TASK, item, ext);\\r\\n\\r\\n        } else if (_functionType == TYPE_WITHDRAW_NFT) {\\r\\n\\r\\n            payload = abi.encode(TYPE_WITHDRAW_NFT, address(0), 10000);\\r\\n\\r\\n        }  else {\\r\\n            revert(\\\"Lucks: unsupported function type\\\");\\r\\n        }\\r\\n\\r\\n        bytes memory lzTxParamBuilt = _txParamBuilder(_chainId, _functionType, _lzTxParams);\\r\\n        return layerZeroEndpoint.estimateFees(_chainId, address(this), payload, useLayerZeroToken, lzTxParamBuilt);\\r\\n    }\\r\\n\\r\\n    function renounceOwnership() public override onlyOwner {}\\r\\n\\r\\n    // ============  LOCAL CHAIN (send out message to destination chain)============\\r\\n\\r\\n    function sendCreateTask(\\r\\n        uint16 _dstChainId,\\r\\n        address payable user,\\r\\n        TaskItem memory item,\\r\\n        TaskExt memory ext,\\r\\n        lzTxObj memory _lzTxParams\\r\\n    ) override external payable onlyExecutor {\\r\\n        bytes memory payload = abi.encode(TYPE_CREATE_TASK, item, ext);\\r\\n        _call(_dstChainId, TYPE_CREATE_TASK, user, _lzTxParams, payload);\\r\\n    }\\r\\n\\r\\n    function sendWithdrawNFTs(\\r\\n        uint16 _dstChainId,\\r\\n        address payable user,\\r\\n        uint256 depositId, \\r\\n        lzTxObj memory _lzTxParams\\r\\n    ) override external payable onlyExecutor {\\r\\n        bytes memory payload = abi.encode(TYPE_WITHDRAW_NFT, user, depositId);\\r\\n        _call(_dstChainId, TYPE_WITHDRAW_NFT, user, _lzTxParams, payload);\\r\\n    }\\r\\n\\r\\n    // ============ dao functions ============\\r\\n\\r\\n    function setBridge(uint16 _chainId, bytes calldata _bridgeAddress) external onlyOwner {\\r\\n        // require(bridgeLookup[_chainId].length == 0, \\\"Lucks: Bridge already set!\\\");\\r\\n        bridgeLookup[_chainId] = _bridgeAddress;\\r\\n    }\\r\\n\\r\\n    function setGasAmount(\\r\\n        uint16 _chainId,\\r\\n        uint8 _functionType,\\r\\n        uint256 _gasAmount\\r\\n    ) external onlyOwner {\\r\\n        require(_functionType >= 1 && _functionType <= 4, \\\"Lucks: invalid _functionType\\\");\\r\\n        gasLookup[_chainId][_functionType] = _gasAmount;\\r\\n    }\\r\\n\\r\\n    function setUseLayerZeroToken(bool enable) external onlyOwner {\\r\\n        useLayerZeroToken = enable;\\r\\n    }\\r\\n\\r\\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external override onlyOwner {\\r\\n        layerZeroEndpoint.forceResumeReceive(_srcChainId, _srcAddress);\\r\\n    }\\r\\n\\r\\n    // ============ generic config for user Application ============\\r\\n\\r\\n    function setConfig(\\r\\n        uint16 _version,\\r\\n        uint16 _chainId,\\r\\n        uint256 _configType,\\r\\n        bytes calldata _config\\r\\n    ) external override onlyOwner {\\r\\n        layerZeroEndpoint.setConfig(_version, _chainId, _configType, _config);\\r\\n    }\\r\\n\\r\\n    function setSendVersion(uint16 version) external override onlyOwner {\\r\\n        layerZeroEndpoint.setSendVersion(version);\\r\\n    }\\r\\n\\r\\n    function setReceiveVersion(uint16 version) external override onlyOwner {\\r\\n        layerZeroEndpoint.setReceiveVersion(version);\\r\\n    }\\r\\n\\r\\n    // ============ INTERNAL functions ============\\r\\n\\r\\n    function txParamBuilderType1(uint256 _gasAmount) internal pure returns (bytes memory) {\\r\\n        uint16 txType = 1;\\r\\n        return abi.encodePacked(txType, _gasAmount);\\r\\n    }\\r\\n\\r\\n    function txParamBuilderType2(\\r\\n        uint256 _gasAmount,\\r\\n        uint256 _dstNativeAmount,\\r\\n        bytes memory _dstNativeAddr\\r\\n    ) internal pure returns (bytes memory) {\\r\\n        uint16 txType = 2;\\r\\n        return abi.encodePacked(txType, _gasAmount, _dstNativeAmount, _dstNativeAddr);\\r\\n    }\\r\\n\\r\\n    function _txParamBuilder(\\r\\n        uint16 _chainId,\\r\\n        uint8 _type,\\r\\n        lzTxObj memory _lzTxParams\\r\\n    ) internal view returns (bytes memory) {\\r\\n        bytes memory lzTxParam;\\r\\n        address dstNativeAddr;\\r\\n        {\\r\\n            bytes memory dstNativeAddrBytes = _lzTxParams.dstNativeAddr;\\r\\n            assembly {\\r\\n                dstNativeAddr := mload(add(dstNativeAddrBytes, 20))\\r\\n            }\\r\\n        }\\r\\n\\r\\n        uint256 totalGas = gasLookup[_chainId][_type].add(_lzTxParams.dstGasForCall);\\r\\n        if (_lzTxParams.dstNativeAmount > 0 && dstNativeAddr != address(0x0)) {\\r\\n            lzTxParam = txParamBuilderType2(totalGas, _lzTxParams.dstNativeAmount, _lzTxParams.dstNativeAddr);\\r\\n        } else {\\r\\n            lzTxParam = txParamBuilderType1(totalGas);\\r\\n        }\\r\\n\\r\\n        return lzTxParam;\\r\\n    }\\r\\n\\r\\n    function _call(\\r\\n        uint16 _chainId, // dst chainId\\r\\n        uint8 _type, // function type\\r\\n        address payable user, // user address\\r\\n        lzTxObj memory _lzTxParams,\\r\\n        bytes memory _payload\\r\\n    ) internal {\\r\\n        bytes memory lzTxParamBuilt = _txParamBuilder(_chainId, _type, _lzTxParams);\\r\\n        uint64 nextNonce = layerZeroEndpoint.getOutboundNonce(_chainId, address(this)) + 1;\\r\\n        layerZeroEndpoint.send{value: msg.value}(_chainId, bridgeLookup[_chainId], _payload, user, address(this), lzTxParamBuilt);\\r\\n        \\r\\n        emit SendMsg(_type, nextNonce);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xf179cd6770112b1be5ce81c2f73d962897095fb4b3e2b499d3a46dc873cbf3d6\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/ILayerZeroEndpoint.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\r\\n\\r\\npragma solidity >=0.5.0;\\r\\n\\r\\nimport \\\"./ILayerZeroUserApplicationConfig.sol\\\";\\r\\n\\r\\ninterface ILayerZeroEndpoint is ILayerZeroUserApplicationConfig {\\r\\n    // @notice send a LayerZero message to the specified address at a LayerZero endpoint.\\r\\n    // @param _dstChainId - the destination chain identifier\\r\\n    // @param _destination - the address on destination chain (in bytes). address length/format may vary by chains\\r\\n    // @param _payload - a custom bytes payload to send to the destination contract\\r\\n    // @param _refundAddress - if the source transaction is cheaper than the amount of value passed, refund the additional amount to this address\\r\\n    // @param _zroPaymentAddress - the address of the ZRO token holder who would pay for the transaction\\r\\n    // @param _adapterParams - parameters for custom functionality. e.g. receive airdropped native gas from the relayer on destination\\r\\n    function send(uint16 _dstChainId, bytes calldata _destination, bytes calldata _payload, address payable _refundAddress, address _zroPaymentAddress, bytes calldata _adapterParams) external payable;\\r\\n\\r\\n    // @notice used by the messaging library to publish verified payload\\r\\n    // @param _srcChainId - the source chain identifier\\r\\n    // @param _srcAddress - the source contract (as bytes) at the source chain\\r\\n    // @param _dstAddress - the address on destination chain\\r\\n    // @param _nonce - the unbound message ordering nonce\\r\\n    // @param _gasLimit - the gas limit for external contract execution\\r\\n    // @param _payload - verified payload to send to the destination contract\\r\\n    function receivePayload(uint16 _srcChainId, bytes calldata _srcAddress, address _dstAddress, uint64 _nonce, uint _gasLimit, bytes calldata _payload) external;\\r\\n\\r\\n    // @notice get the inboundNonce of a receiver from a source chain which could be EVM or non-EVM chain\\r\\n    // @param _srcChainId - the source chain identifier\\r\\n    // @param _srcAddress - the source chain contract address\\r\\n    function getInboundNonce(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (uint64);\\r\\n\\r\\n    // @notice get the outboundNonce from this source chain which, consequently, is always an EVM\\r\\n    // @param _srcAddress - the source chain contract address\\r\\n    function getOutboundNonce(uint16 _dstChainId, address _srcAddress) external view returns (uint64);\\r\\n\\r\\n    // @notice gets a quote in source native gas, for the amount that send() requires to pay for message delivery\\r\\n    // @param _dstChainId - the destination chain identifier\\r\\n    // @param _userApplication - the user app address on this EVM chain\\r\\n    // @param _payload - the custom message to send over LayerZero\\r\\n    // @param _payInZRO - if false, user app pays the protocol fee in native token\\r\\n    // @param _adapterParam - parameters for the adapter service, e.g. send some dust native token to dstChain\\r\\n    function estimateFees(uint16 _dstChainId, address _userApplication, bytes calldata _payload, bool _payInZRO, bytes calldata _adapterParam) external view returns (uint nativeFee, uint zroFee);\\r\\n\\r\\n    // @notice get this Endpoint's immutable source identifier\\r\\n    function getChainId() external view returns (uint16);\\r\\n\\r\\n    // @notice the interface to retry failed message on this Endpoint destination\\r\\n    // @param _srcChainId - the source chain identifier\\r\\n    // @param _srcAddress - the source chain contract address\\r\\n    // @param _payload - the payload to be retried\\r\\n    function retryPayload(uint16 _srcChainId, bytes calldata _srcAddress, bytes calldata _payload) external;\\r\\n\\r\\n    // @notice query if any STORED payload (message blocking) at the endpoint.\\r\\n    // @param _srcChainId - the source chain identifier\\r\\n    // @param _srcAddress - the source chain contract address\\r\\n    function hasStoredPayload(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool);\\r\\n\\r\\n    // @notice query if the _libraryAddress is valid for sending msgs.\\r\\n    // @param _userApplication - the user app address on this EVM chain\\r\\n    function getSendLibraryAddress(address _userApplication) external view returns (address);\\r\\n\\r\\n    // @notice query if the _libraryAddress is valid for receiving msgs.\\r\\n    // @param _userApplication - the user app address on this EVM chain\\r\\n    function getReceiveLibraryAddress(address _userApplication) external view returns (address);\\r\\n\\r\\n    // @notice query if the non-reentrancy guard for send() is on\\r\\n    // @return true if the guard is on. false otherwise\\r\\n    function isSendingPayload() external view returns (bool);\\r\\n\\r\\n    // @notice query if the non-reentrancy guard for receive() is on\\r\\n    // @return true if the guard is on. false otherwise\\r\\n    function isReceivingPayload() external view returns (bool);\\r\\n\\r\\n    // @notice get the configuration of the LayerZero messaging library of the specified version\\r\\n    // @param _version - messaging library version\\r\\n    // @param _chainId - the chainId for the pending config change\\r\\n    // @param _userApplication - the contract address of the user application\\r\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\r\\n    function getConfig(uint16 _version, uint16 _chainId, address _userApplication, uint _configType) external view returns (bytes memory);\\r\\n\\r\\n    // @notice get the send() LayerZero messaging library version\\r\\n    // @param _userApplication - the contract address of the user application\\r\\n    function getSendVersion(address _userApplication) external view returns (uint16);\\r\\n\\r\\n    // @notice get the lzReceive() LayerZero messaging library version\\r\\n    // @param _userApplication - the contract address of the user application\\r\\n    function getReceiveVersion(address _userApplication) external view returns (uint16);\\r\\n}\",\"keccak256\":\"0x02172f639a06fb674d3d5b3e4db2af97d10bb84d784a741b2c4f42852f231663\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/ILayerZeroReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\r\\n\\r\\npragma solidity >=0.5.0;\\r\\n\\r\\ninterface ILayerZeroReceiver {\\r\\n    // @notice LayerZero endpoint will invoke this function to deliver the message on the destination\\r\\n    // @param _srcChainId - the source endpoint identifier\\r\\n    // @param _srcAddress - the source sending contract address from the source chain\\r\\n    // @param _nonce - the ordered message nonce\\r\\n    // @param _payload - the signed payload is the UA bytes has encoded to be sent\\r\\n    function lzReceive(uint16 _srcChainId, bytes calldata _srcAddress, uint64 _nonce, bytes calldata _payload) external;\\r\\n}\",\"keccak256\":\"0x78328d42eeec94e7cda3208849dd835d02bf6ce7005c443be046fe1cbfda81bf\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/ILayerZeroUserApplicationConfig.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\r\\n\\r\\npragma solidity >=0.5.0;\\r\\n\\r\\ninterface ILayerZeroUserApplicationConfig {\\r\\n    // @notice set the configuration of the LayerZero messaging library of the specified version\\r\\n    // @param _version - messaging library version\\r\\n    // @param _chainId - the chainId for the pending config change\\r\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\r\\n    // @param _config - configuration in the bytes. can encode arbitrary content.\\r\\n    function setConfig(uint16 _version, uint16 _chainId, uint _configType, bytes calldata _config) external;\\r\\n\\r\\n    // @notice set the send() LayerZero messaging library version to _version\\r\\n    // @param _version - new messaging library version\\r\\n    function setSendVersion(uint16 _version) external;\\r\\n\\r\\n    // @notice set the lzReceive() LayerZero messaging library version to _version\\r\\n    // @param _version - new messaging library version\\r\\n    function setReceiveVersion(uint16 _version) external;\\r\\n\\r\\n    // @notice Only when the UA needs to resume the message flow in blocking mode and clear the stored payload\\r\\n    // @param _srcChainId - the chainId of the source chain\\r\\n    // @param _srcAddress - the contract address of the source contract at the source chain\\r\\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external;\\r\\n}\",\"keccak256\":\"0xcb53d35e0ea27944a7c0d03b3cbd27a635270b1a100860f86fc7a4f3a4dc9334\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/ILucksBridge.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\n// OpenLuck\\r\\nimport {TaskItem,TaskExt} from \\\"./ILucksExecutor.sol\\\";\\r\\n\\r\\nstruct lzTxObj {\\r\\n    uint256 dstGasForCall;\\r\\n    uint256 dstNativeAmount;\\r\\n    bytes dstNativeAddr;\\r\\n}\\r\\n\\r\\ninterface ILucksBridge {\\r\\n\\r\\n    // ============= events ====================\\r\\n    event SendMsg(uint8 msgType, uint64 nonce);\\r\\n    event Revert(uint8 bridgeFunctionType, uint16 chainId, bytes srcAddress, uint256 nonce, bytes reason);\\r\\n    event RetryResult(uint8 bridgeFunctionType, uint16 chainId, bytes srcAddress, uint256 nonce, bool result);\\r\\n    \\r\\n    // ============= Task functions ====================\\r\\n    \\r\\n    function sendCreateTask(\\r\\n        uint16 _dstChainId,\\r\\n        address payable user,\\r\\n        TaskItem memory item,\\r\\n        TaskExt memory ext,\\r\\n        lzTxObj memory _lzTxParams) \\r\\n    external payable;\\r\\n\\r\\n    function sendWithdrawNFTs(        \\r\\n        uint16 _dstChainId,\\r\\n        address payable user,\\r\\n        uint256 depositId, \\r\\n        lzTxObj memory _lzTxParams) \\r\\n    external payable;\\r\\n\\r\\n    // ============= Assets functions ====================\\r\\n\\r\\n\\r\\n    function quoteLayerZeroFee(\\r\\n        uint16 _dstChainId,\\r\\n        uint8 _functionType,        \\r\\n        string memory _note,\\r\\n        lzTxObj memory _lzTxParams\\r\\n    ) external view returns (uint256, uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0xbaa87b71d6b223308f2b3a830d0bcb08d7ce9b46ab6a94320e44b09b88f77333\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/ILucksExecutor.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport { lzTxObj } from \\\"./ILucksBridge.sol\\\";\\r\\n\\r\\n/** \\r\\n    TaskStatus\\r\\n    0) Pending: task created but not reach starttime\\r\\n    1) Open: task opening\\r\\n    2) Close: task close, waiting for draw\\r\\n    3) Success: task reach target, drawed winner\\r\\n    4) Fail: task Fail and expired\\r\\n    5) Cancel: task user cancel\\r\\n */\\r\\nenum TaskStatus {\\r\\n    Pending,\\r\\n    Open,\\r\\n    Close,\\r\\n    Success,\\r\\n    Fail,\\r\\n    Cancel\\r\\n}\\r\\n\\r\\nstruct ExclusiveToken {\\r\\n    address token; // exclusive token contract address    \\r\\n    uint256 amount; // exclusive token holding amount required\\r\\n}\\r\\n\\r\\nstruct TaskItem {\\r\\n\\r\\n    address seller; // Owner of the NFTs\\r\\n    uint16 nftChainId; // NFT source ChainId    \\r\\n    address nftContract; // NFT registry address    \\r\\n    uint256[] tokenIds; // Allow mulit nfts for sell    \\r\\n    uint256[] tokenAmounts; // support ERC1155\\r\\n    \\r\\n    address acceptToken; // acceptToken    \\r\\n    TaskStatus status; // Task status    \\r\\n\\r\\n    uint256 startTime; // Task start time    \\r\\n    uint256 endTime; // Task end time\\r\\n    \\r\\n    uint256 targetAmount; // Task target crowd amount (in wei) for the published item    \\r\\n    uint256 price; // Per ticket price  (in wei)    \\r\\n    \\r\\n    uint16 paymentStrategy; // payment strategy;\\r\\n    ExclusiveToken exclusiveToken; // exclusive token contract address    \\r\\n    \\r\\n    // editable fields\\r\\n    uint256 amountCollected; // The amount (in wei) collected of this task\\r\\n    uint256 depositId; // NFTs depositId (system set)\\r\\n}\\r\\n\\r\\nstruct TaskExt {\\r\\n    uint16 chainId; // Task Running ChainId   \\r\\n    string title; // title (for searching keywords)  \\r\\n    string note;   // memo\\r\\n}\\r\\n\\r\\nstruct Ticket {\\r\\n    uint32 number;  // the ticket's id, equal to the end number (last ticket id)\\r\\n    uint32 count;   // how many QTY the ticket joins, (number-count+1) equal to the start number of this ticket.\\r\\n    address owner;  // ticket owner\\r\\n}\\r\\n\\r\\ninterface ILucksExecutor {\\r\\n\\r\\n    // ============= events ====================\\r\\n\\r\\n    event CreateTask(uint256 taskId, TaskItem item, TaskExt ext);\\r\\n    event CancelTask(uint256 taskId, address seller);\\r\\n    event CloseTask(uint256 taskId, address caller, TaskStatus status);\\r\\n    event JoinTask(uint256 taskId, address buyer, uint256 amount, uint256 count, uint32 number,string note);\\r\\n    event PickWinner(uint256 taskId, address winner, uint32 number);\\r\\n    event ClaimToken(uint256 taskId, address caller, uint256 amount, address acceptToken);\\r\\n    event CreateTickets(uint256 taskId, address buyer, uint32 num, uint32 start, uint32 end);\\r\\n\\r\\n    // ============= functions ====================\\r\\n\\r\\n    function count() external view returns (uint256);\\r\\n    function exists(uint256 taskId) external view returns (bool);\\r\\n    function getTask(uint256 taskId) external view returns (TaskItem memory);\\r\\n    function getChainId() external view returns (uint16);\\r\\n\\r\\n    function createTask(TaskItem memory item, TaskExt memory ext, lzTxObj memory _param) external payable;\\r\\n    function joinTask(uint256 taskId, uint32 num, string memory note) external payable;\\r\\n    function cancelTask(uint256 taskId, lzTxObj memory _param) external payable;\\r\\n    function closeTask(uint256 taskId, lzTxObj memory _param) external payable;\\r\\n    function pickWinner(uint256 taskId, lzTxObj memory _param) external payable;\\r\\n\\r\\n    function claimTokens(uint256[] memory taskIds) external;\\r\\n    function claimNFTs(uint256[] memory taskIds, lzTxObj memory _param) external payable;\\r\\n\\r\\n    function onLzReceive(uint8 functionType, bytes memory _payload) external;\\r\\n}\\r\\n\",\"keccak256\":\"0xa7c7ab5a13d58ddf4f8399efb4f6e4de4e9840fa78361b9b43ff3bcebcd381c2\",\"license\":\"BUSL-1.1\"}},\"version\":1}",
  "bytecode": "0x60c06040523480156200001157600080fd5b506040516200320a3803806200320a83398101604081905262000034916200018f565b6200003f3362000122565b6001600160a01b038216620000ab5760405162461bcd60e51b815260206004820152602760248201527f4c75636b733a205f6c617965725a65726f456e64706f696e742063616e6e6f746044820152660206265203078360cc1b60648201526084015b60405180910390fd5b6001600160a01b038116620001035760405162461bcd60e51b815260206004820152601e60248201527f4c75636b733a205f6578656375746f722063616e6e6f742062652030783000006044820152606401620000a2565b6001600160601b0319606092831b8116608052911b1660a052620001c7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200018a57600080fd5b919050565b60008060408385031215620001a357600080fd5b620001ae8362000172565b9150620001be6020840162000172565b90509250929050565b60805160601c60a05160601c612fc3620002476000396000818161040b0152818161065c015281816109c701528181610aca01526113ff0152600081816101ed015281816104a50152818161084a0152818161096b01528181610c8901528181611020015281816116b5015281816119df0152611ab80152612fc36000f3fe6080604052600436106101695760003560e01c8063715018a6116100cb5780639f285e1d1161007f578063cbed8b9c11610059578063cbed8b9c1461042d578063f2fde38b1461044d578063fc8691081461046d57600080fd5b80639f285e1d146103c6578063c213dc2b146103d9578063c34c08e5146103f957600080fd5b80638da5cb5b116100b05780638da5cb5b1461034e5780638e3b5d6a1461037957806395635d9b146103a657600080fd5b8063715018a61461030f5780638c7ae0fc1461032457600080fd5b80632c90858d1161012257806342d65a8d1161010757806342d65a8d1461029a57806343b18009146102ba57806354a41394146102da57600080fd5b80632c90858d146102745780633885c8f21461028757600080fd5b806307968db11161015357806307968db1146101db57806307e0db171461023457806310ddb1371461025457600080fd5b80621d35671461016e5780630242205414610190575b600080fd5b34801561017a57600080fd5b5061018e6101893660046124aa565b61048d565b005b34801561019c57600080fd5b506101c86101ab366004612596565b600260209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b3480156101e757600080fd5b5061020f7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101d2565b34801561024057600080fd5b5061018e61024f36600461214b565b610797565b34801561026057600080fd5b5061018e61026f36600461214b565b6108b8565b61018e610282366004612166565b6109af565b61018e610295366004612325565b610ab2565b3480156102a657600080fd5b5061018e6102b536600461238f565b610bcb565b3480156102c657600080fd5b5061018e6102d536600461238f565b610cf9565b3480156102e657600080fd5b506102fa6102f53660046125c9565b610d9e565b604080519283526020830191909152016101d2565b34801561031b57600080fd5b5061018e6110be565b34801561033057600080fd5b5060035461033e9060ff1681565b60405190151581526020016101d2565b34801561035a57600080fd5b5060005473ffffffffffffffffffffffffffffffffffffffff1661020f565b34801561038557600080fd5b5061039961039436600461214b565b611141565b6040516101d29190612922565b3480156103b257600080fd5b506103996103c1366004612448565b6111db565b61018e6103d43660046123e2565b611216565b3480156103e557600080fd5b5061018e6103f4366004612129565b611545565b34801561040557600080fd5b5061020f7f000000000000000000000000000000000000000000000000000000000000000081565b34801561043957600080fd5b5061018e610448366004612527565b6115f7565b34801561045957600080fd5b5061018e61046836600461210c565b61172b565b34801561047957600080fd5b5061018e610488366004612642565b61185b565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610557576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603160248201527f4c75636b733a206f6e6c79204c617965725a65726f20656e64706f696e74206360448201527f616e2063616c6c206c7a5265636569766500000000000000000000000000000060648201526084015b60405180910390fd5b61ffff84166000908152600160205260409020805461057590612e74565b905083511480156105b4575061ffff84166000908152600160205260409081902090516105a29190612839565b60405180910390208380519060200120145b61061a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f4c75636b733a2062726964676520646f6573206e6f74206d6174636800000000604482015260640161054e565b60208101516040517fe44cb8e400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063e44cb8e4906106939084908690600401612b03565b600060405180830381600087803b1580156106ad57600080fd5b505af19250505080156106be575060015b610790573d8080156106ec576040519150601f19603f3d011682016040523d82523d6000602084013e6106f1565b606091505b5061ffff861660009081526004602052604090819020905184919061071790889061281d565b908152604080516020928190038301902067ffffffffffffffff8816600090815290835220825161074e9391929190910190611d19565b507fc90f786d3aa42c98ef212a4f80cf57935f2c8430c5fb3d5f282c55d5846cf1c58287878785604051610786959493929190612d20565b60405180910390a1505b5050505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610818576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161054e565b6040517f07e0db1700000000000000000000000000000000000000000000000000000000815261ffff821660048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906307e0db17906024015b600060405180830381600087803b1580156108a457600080fd5b505af1158015610790573d6000803e3d6000fd5b60005473ffffffffffffffffffffffffffffffffffffffff163314610939576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161054e565b6040517f10ddb13700000000000000000000000000000000000000000000000000000000815261ffff821660048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906310ddb1379060240161088a565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610a73576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f4c75636b733a2063616c6c6572206d757374206265204c75636b73457865637560448201527f746f722e00000000000000000000000000000000000000000000000000000000606482015260840161054e565b600060018484604051602001610a8b93929190612b27565b6040516020818303038152906040529050610aaa86600187858561197f565b505050505050565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610b76576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f4c75636b733a2063616c6c6572206d757374206265204c75636b73457865637560448201527f746f722e00000000000000000000000000000000000000000000000000000000606482015260840161054e565b604080516002602082015273ffffffffffffffffffffffffffffffffffffffff85169181019190915260608101839052600090608001604051602081830303815290604052905061079085600286858561197f565b60005473ffffffffffffffffffffffffffffffffffffffff163314610c4c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161054e565b6040517f42d65a8d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906342d65a8d90610cc290869086908690600401612994565b600060405180830381600087803b158015610cdc57600080fd5b505af1158015610cf0573d6000803e3d6000fd5b50505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610d7a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161054e565b61ffff83166000908152600160205260409020610d98908383611d9d565b50505050565b60408051602080820183526000808352835160028082526060820186529194859493859391908301908036833701905050905061271081600081518110610de757610de7612ef7565b60200260200101818152505061271081600181518110610e0957610e09612ef7565b602090810291909101015260ff871660011415610f2d57604080516101e0810182526000808252602080830182905282840182905260608084018690526080840186905260a08401839052600160c085018190524260e08601819052610100860152683635c9adc5dea00000610120860152670de0b6b3a76400006101408601819052610160860182905286518088018852858152808501919091526101808601526101a08501939093526127106101c08501528451908101855282815284518086018652601981527f6e667420636f6c6c656374696f6e206974656d207469746c650000000000000081840152818301528085018b90529351929392610f1592918591859101612b27565b60405160208183030381529060405293505050610fd0565b60ff871660021415610f6e57604080516002602082015260009181019190915261271060608201526080016040516020818303038152906040529150610fd0565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4c75636b733a20756e737570706f727465642066756e6374696f6e2074797065604482015260640161054e565b6000610fdd898988611b7e565b6003546040517f40a7bb1000000000000000000000000000000000000000000000000000000000815291925073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016916340a7bb109161105f918d913091899160ff16908890600401612935565b604080518083038186803b15801561107657600080fd5b505afa15801561108a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ae919061267e565b9450945050505094509492505050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461113f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161054e565b565b6001602052600090815260409020805461115a90612e74565b80601f016020809104026020016040519081016040528092919081815260200182805461118690612e74565b80156111d35780601f106111a8576101008083540402835291602001916111d3565b820191906000526020600020905b8154815290600101906020018083116111b657829003601f168201915b505050505081565b600460209081526000938452604080852084518086018401805192815290840195840195909520945292905282529020805461115a90612e74565b61ffff84166000908152600460205260408082209051611239908690869061280d565b908152604080516020928190038301902067ffffffffffffffff8516600090815292529020805461126990612e74565b80601f016020809104026020016040519081016040528092919081815260200182805461129590612e74565b80156112e25780601f106112b7576101008083540402835291602001916112e2565b820191906000526020600020905b8154815290600101906020018083116112c557829003601f168201915b505050505090506000815111611354576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4c75636b733a206e6f2072657472792072657665727400000000000000000000604482015260640161054e565b6040805160208082018352600080835261ffff8916815260049091528290209151909190611385908790879061280d565b908152604080516020928190038301902067ffffffffffffffff861660009081529083522082516113bc9391929190910190611d19565b5060208101516040517fe44cb8e400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063e44cb8e4906114369084908690600401612b03565b600060405180830381600087803b15801561145057600080fd5b505af1925050508015611461575060015b61150b5761ffff861660009081526004602052604090819020905183919061148c908890889061280d565b908152604080516020928190038301902067ffffffffffffffff871660009081529083522082516114c39391929190910190611d19565b507f0126dc08690914debb9abca92931edd717f003f2fe29dec4493e6c192a06cdb4818787878760006040516114fe96959493929190612cd5565b60405180910390a1610aaa565b7f0126dc08690914debb9abca92931edd717f003f2fe29dec4493e6c192a06cdb48187878787600160405161078696959493929190612cd5565b60005473ffffffffffffffffffffffffffffffffffffffff1633146115c6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161054e565b600380547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff163314611678576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161054e565b6040517fcbed8b9c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063cbed8b9c906116f29088908890889088908890600401612aca565b600060405180830381600087803b15801561170c57600080fd5b505af1158015611720573d6000803e3d6000fd5b505050505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146117ac576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161054e565b73ffffffffffffffffffffffffffffffffffffffff811661184f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161054e565b61185881611c5b565b50565b60005473ffffffffffffffffffffffffffffffffffffffff1633146118dc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161054e565b60018260ff16101580156118f4575060048260ff1611155b61195a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f4c75636b733a20696e76616c6964205f66756e6374696f6e5479706500000000604482015260640161054e565b61ffff909216600090815260026020908152604080832060ff90941683529290522055565b600061198c868685611b7e565b6040517f7a14574800000000000000000000000000000000000000000000000000000000815261ffff8816600482015230602482015290915060009073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690637a1457489060440160206040518083038186803b158015611a2157600080fd5b505afa158015611a35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a5991906126a2565b611a64906001612e1c565b61ffff88166000908152600160205260409081902090517fc580310000000000000000000000000000000000000000000000000000000000815291925073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169163c5803100913491611af7918c9189908c9030908b906004016129b2565b6000604051808303818588803b158015611b1057600080fd5b505af1158015611b24573d6000803e3d6000fd5b50506040805160ff8b16815267ffffffffffffffff861660208201527f8d3ee0df6a4b7e82a7f20a763f1c6826e6176323e655af64f32318827d2112d49450019150611b6d9050565b60405180910390a150505050505050565b60408082015160140151825161ffff861660009081526002602090815284822060ff881683529052928320546060938493929091611bbb91611cd0565b905060008560200151118015611be6575073ffffffffffffffffffffffffffffffffffffffff821615155b15611c0557611bfe8186602001518760400151611ce3565b9250611c50565b611c4d81604080517e01000000000000000000000000000000000000000000000000000000000000602082015260228082019390935281518082039093018352604201905290565b92505b509095945050505050565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000611cdc8284612e04565b9392505050565b604051606090600290611d009082908790879087906020016128c9565b6040516020818303038152906040529150509392505050565b828054611d2590612e74565b90600052602060002090601f016020900481019282611d475760008555611d8d565b82601f10611d6057805160ff1916838001178555611d8d565b82800160010185558215611d8d579182015b82811115611d8d578251825591602001919060010190611d72565b50611d99929150611e2f565b5090565b828054611da990612e74565b90600052602060002090601f016020900481019282611dcb5760008555611d8d565b82601f10611e02578280017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00823516178555611d8d565b82800160010185558215611d8d579182015b82811115611d8d578235825591602001919060010190611e14565b5b80821115611d995760008155600101611e30565b8035611e4f81612f55565b919050565b600082601f830112611e6557600080fd5b8135602067ffffffffffffffff821115611e8157611e81612f26565b8160051b611e90828201612db5565b838152828101908684018388018501891015611eab57600080fd5b600093505b85841015611ece578035835260019390930192918401918401611eb0565b50979650505050505050565b60008083601f840112611eec57600080fd5b50813567ffffffffffffffff811115611f0457600080fd5b602083019150836020828501011115611f1c57600080fd5b9250929050565b600082601f830112611f3457600080fd5b813567ffffffffffffffff811115611f4e57611f4e612f26565b611f7f60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601612db5565b818152846020838601011115611f9457600080fd5b816020850160208301376000918101602001919091529392505050565b803560068110611e4f57600080fd5b600060408284031215611fd257600080fd5b6040516040810181811067ffffffffffffffff82111715611ff557611ff5612f26565b604052905080823561200681612f55565b8152602092830135920191909152919050565b60006060828403121561202b57600080fd5b612033612d68565b905061203e826120e9565b8152602082013567ffffffffffffffff8082111561205b57600080fd5b61206785838601611f23565b6020840152604084013591508082111561208057600080fd5b5061208d84828501611f23565b60408301525092915050565b6000606082840312156120ab57600080fd5b6120b3612d68565b90508135815260208201356020820152604082013567ffffffffffffffff8111156120dd57600080fd5b61208d84828501611f23565b803561ffff81168114611e4f57600080fd5b803560ff81168114611e4f57600080fd5b60006020828403121561211e57600080fd5b8135611cdc81612f55565b60006020828403121561213b57600080fd5b81358015158114611cdc57600080fd5b60006020828403121561215d57600080fd5b611cdc826120e9565b600080600080600060a0868803121561217e57600080fd5b612187866120e9565b9450602086013561219781612f55565b9350604086013567ffffffffffffffff808211156121b457600080fd5b90870190610200828a0312156121c957600080fd5b6121d1612d91565b6121da83611e44565b81526121e8602084016120e9565b60208201526121f960408401611e44565b604082015260608301358281111561221057600080fd5b61221c8b828601611e54565b60608301525060808301358281111561223457600080fd5b6122408b828601611e54565b60808301525061225260a08401611e44565b60a082015261226360c08401611fb1565b60c082015260e083810135908201526101008084013590820152610120808401359082015261014080840135908201526101606122a18185016120e9565b908201526101806122b48b858301611fc0565b81830152506101c0808401356101a08301526101e084013581830152508095505060608801359150808211156122e957600080fd5b6122f589838a01612019565b9350608088013591508082111561230b57600080fd5b5061231888828901612099565b9150509295509295909350565b6000806000806080858703121561233b57600080fd5b612344856120e9565b9350602085013561235481612f55565b925060408501359150606085013567ffffffffffffffff81111561237757600080fd5b61238387828801612099565b91505092959194509250565b6000806000604084860312156123a457600080fd5b6123ad846120e9565b9250602084013567ffffffffffffffff8111156123c957600080fd5b6123d586828701611eda565b9497909650939450505050565b600080600080606085870312156123f857600080fd5b612401856120e9565b9350602085013567ffffffffffffffff81111561241d57600080fd5b61242987828801611eda565b909450925050604085013561243d81612f77565b939692955090935050565b60008060006060848603121561245d57600080fd5b612466846120e9565b9250602084013567ffffffffffffffff81111561248257600080fd5b61248e86828701611f23565b925050604084013561249f81612f77565b809150509250925092565b600080600080608085870312156124c057600080fd5b6124c9856120e9565b9350602085013567ffffffffffffffff808211156124e657600080fd5b6124f288838901611f23565b94506040870135915061250482612f77565b9092506060860135908082111561251a57600080fd5b5061238387828801611f23565b60008060008060006080868803121561253f57600080fd5b612548866120e9565b9450612556602087016120e9565b935060408601359250606086013567ffffffffffffffff81111561257957600080fd5b61258588828901611eda565b969995985093965092949392505050565b600080604083850312156125a957600080fd5b6125b2836120e9565b91506125c0602084016120fb565b90509250929050565b600080600080608085870312156125df57600080fd5b6125e8856120e9565b93506125f6602086016120fb565b9250604085013567ffffffffffffffff8082111561261357600080fd5b61261f88838901611f23565b9350606087013591508082111561263557600080fd5b5061238387828801612099565b60008060006060848603121561265757600080fd5b612660846120e9565b925061266e602085016120fb565b9150604084013590509250925092565b6000806040838503121561269157600080fd5b505080516020909101519092909150565b6000602082840312156126b457600080fd5b8151611cdc81612f77565b600081518084526020808501945080840160005b838110156126ef578151875295820195908201906001016126d3565b509495945050505050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b6000815180845261275b816020860160208601612e48565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600681106127c4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b61ffff815116825260006020820151606060208501526127eb6060850182612743565b9050604083015184820360408601526128048282612743565b95945050505050565b8183823760009101908152919050565b6000825161282f818460208701612e48565b9190910192915050565b600080835461284781612e74565b6001828116801561285f576001811461288e576128bd565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008416875282870194506128bd565b8760005260208060002060005b858110156128b45781548a82015290840190820161289b565b50505082870194505b50929695505050505050565b7fffff0000000000000000000000000000000000000000000000000000000000008560f01b16815283600282015282602282015260008251612912816042850160208701612e48565b9190910160420195945050505050565b602081526000611cdc6020830184612743565b61ffff8616815273ffffffffffffffffffffffffffffffffffffffff8516602082015260a06040820152600061296e60a0830186612743565b841515606084015282810360808401526129888185612743565b98975050505050505050565b61ffff841681526040602082015260006128046040830184866126fa565b61ffff871681526000602060c081840152600088546129d081612e74565b8060c087015260e06001808416600081146129f25760018114612a2557612a53565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008516838a015261010089019550612a53565b8d6000528660002060005b85811015612a4b5781548b8201860152908301908801612a30565b8a0184019650505b50505050508381036040850152612a6a8189612743565b915050612a8f606084018773ffffffffffffffffffffffffffffffffffffffff169052565b73ffffffffffffffffffffffffffffffffffffffff8516608084015282810360a0840152612abd8185612743565b9998505050505050505050565b600061ffff808816835280871660208401525084604083015260806060830152612af86080830184866126fa565b979650505050505050565b60ff83168152604060208201526000612b1f6040830184612743565b949350505050565b60ff8416815260606020820152612b5760608201845173ffffffffffffffffffffffffffffffffffffffff169052565b60006020840151612b6e608084018261ffff169052565b50604084015173ffffffffffffffffffffffffffffffffffffffff1660a0830152606084015161020060c0840152612baa6102608401826126bf565b905060808501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa08483030160e0850152612be582826126bf565b91505060a0850151610100612c118186018373ffffffffffffffffffffffffffffffffffffffff169052565b60c08701519150610120612c278187018461278d565b60e08801516101408781019190915291880151610160808801919091529088015161018080880191909152918801516101a0808801919091529088015192506101c09190612c7a8388018561ffff169052565b90880151805173ffffffffffffffffffffffffffffffffffffffff166101e088015260200151610200870152870151610220860152860151610240850152508281036040840152612ccb81856127c8565b9695505050505050565b60ff8716815261ffff8616602082015260a060408201526000612cfc60a0830186886126fa565b67ffffffffffffffff94909416606083015250901515608090910152949350505050565b60ff8616815261ffff8516602082015260a060408201526000612d4660a0830186612743565b67ffffffffffffffff8516606084015282810360808401526129888185612743565b6040516060810167ffffffffffffffff81118282101715612d8b57612d8b612f26565b60405290565b6040516101e0810167ffffffffffffffff81118282101715612d8b57612d8b612f26565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715612dfc57612dfc612f26565b604052919050565b60008219821115612e1757612e17612ec8565b500190565b600067ffffffffffffffff808316818516808303821115612e3f57612e3f612ec8565b01949350505050565b60005b83811015612e63578181015183820152602001612e4b565b83811115610d985750506000910152565b600181811c90821680612e8857607f821691505b60208210811415612ec2577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff8116811461185857600080fd5b67ffffffffffffffff8116811461185857600080fdfea264697066735822122020f51e0fe63e14ebb21f70dee3d55784da62b41cee7c8328c741d7481d28fa5164736f6c63430008060033",
  "deployedBytecode": "0x6080604052600436106101695760003560e01c8063715018a6116100cb5780639f285e1d1161007f578063cbed8b9c11610059578063cbed8b9c1461042d578063f2fde38b1461044d578063fc8691081461046d57600080fd5b80639f285e1d146103c6578063c213dc2b146103d9578063c34c08e5146103f957600080fd5b80638da5cb5b116100b05780638da5cb5b1461034e5780638e3b5d6a1461037957806395635d9b146103a657600080fd5b8063715018a61461030f5780638c7ae0fc1461032457600080fd5b80632c90858d1161012257806342d65a8d1161010757806342d65a8d1461029a57806343b18009146102ba57806354a41394146102da57600080fd5b80632c90858d146102745780633885c8f21461028757600080fd5b806307968db11161015357806307968db1146101db57806307e0db171461023457806310ddb1371461025457600080fd5b80621d35671461016e5780630242205414610190575b600080fd5b34801561017a57600080fd5b5061018e6101893660046124aa565b61048d565b005b34801561019c57600080fd5b506101c86101ab366004612596565b600260209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b3480156101e757600080fd5b5061020f7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101d2565b34801561024057600080fd5b5061018e61024f36600461214b565b610797565b34801561026057600080fd5b5061018e61026f36600461214b565b6108b8565b61018e610282366004612166565b6109af565b61018e610295366004612325565b610ab2565b3480156102a657600080fd5b5061018e6102b536600461238f565b610bcb565b3480156102c657600080fd5b5061018e6102d536600461238f565b610cf9565b3480156102e657600080fd5b506102fa6102f53660046125c9565b610d9e565b604080519283526020830191909152016101d2565b34801561031b57600080fd5b5061018e6110be565b34801561033057600080fd5b5060035461033e9060ff1681565b60405190151581526020016101d2565b34801561035a57600080fd5b5060005473ffffffffffffffffffffffffffffffffffffffff1661020f565b34801561038557600080fd5b5061039961039436600461214b565b611141565b6040516101d29190612922565b3480156103b257600080fd5b506103996103c1366004612448565b6111db565b61018e6103d43660046123e2565b611216565b3480156103e557600080fd5b5061018e6103f4366004612129565b611545565b34801561040557600080fd5b5061020f7f000000000000000000000000000000000000000000000000000000000000000081565b34801561043957600080fd5b5061018e610448366004612527565b6115f7565b34801561045957600080fd5b5061018e61046836600461210c565b61172b565b34801561047957600080fd5b5061018e610488366004612642565b61185b565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610557576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603160248201527f4c75636b733a206f6e6c79204c617965725a65726f20656e64706f696e74206360448201527f616e2063616c6c206c7a5265636569766500000000000000000000000000000060648201526084015b60405180910390fd5b61ffff84166000908152600160205260409020805461057590612e74565b905083511480156105b4575061ffff84166000908152600160205260409081902090516105a29190612839565b60405180910390208380519060200120145b61061a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f4c75636b733a2062726964676520646f6573206e6f74206d6174636800000000604482015260640161054e565b60208101516040517fe44cb8e400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063e44cb8e4906106939084908690600401612b03565b600060405180830381600087803b1580156106ad57600080fd5b505af19250505080156106be575060015b610790573d8080156106ec576040519150601f19603f3d011682016040523d82523d6000602084013e6106f1565b606091505b5061ffff861660009081526004602052604090819020905184919061071790889061281d565b908152604080516020928190038301902067ffffffffffffffff8816600090815290835220825161074e9391929190910190611d19565b507fc90f786d3aa42c98ef212a4f80cf57935f2c8430c5fb3d5f282c55d5846cf1c58287878785604051610786959493929190612d20565b60405180910390a1505b5050505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610818576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161054e565b6040517f07e0db1700000000000000000000000000000000000000000000000000000000815261ffff821660048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906307e0db17906024015b600060405180830381600087803b1580156108a457600080fd5b505af1158015610790573d6000803e3d6000fd5b60005473ffffffffffffffffffffffffffffffffffffffff163314610939576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161054e565b6040517f10ddb13700000000000000000000000000000000000000000000000000000000815261ffff821660048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906310ddb1379060240161088a565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610a73576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f4c75636b733a2063616c6c6572206d757374206265204c75636b73457865637560448201527f746f722e00000000000000000000000000000000000000000000000000000000606482015260840161054e565b600060018484604051602001610a8b93929190612b27565b6040516020818303038152906040529050610aaa86600187858561197f565b505050505050565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610b76576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f4c75636b733a2063616c6c6572206d757374206265204c75636b73457865637560448201527f746f722e00000000000000000000000000000000000000000000000000000000606482015260840161054e565b604080516002602082015273ffffffffffffffffffffffffffffffffffffffff85169181019190915260608101839052600090608001604051602081830303815290604052905061079085600286858561197f565b60005473ffffffffffffffffffffffffffffffffffffffff163314610c4c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161054e565b6040517f42d65a8d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906342d65a8d90610cc290869086908690600401612994565b600060405180830381600087803b158015610cdc57600080fd5b505af1158015610cf0573d6000803e3d6000fd5b50505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610d7a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161054e565b61ffff83166000908152600160205260409020610d98908383611d9d565b50505050565b60408051602080820183526000808352835160028082526060820186529194859493859391908301908036833701905050905061271081600081518110610de757610de7612ef7565b60200260200101818152505061271081600181518110610e0957610e09612ef7565b602090810291909101015260ff871660011415610f2d57604080516101e0810182526000808252602080830182905282840182905260608084018690526080840186905260a08401839052600160c085018190524260e08601819052610100860152683635c9adc5dea00000610120860152670de0b6b3a76400006101408601819052610160860182905286518088018852858152808501919091526101808601526101a08501939093526127106101c08501528451908101855282815284518086018652601981527f6e667420636f6c6c656374696f6e206974656d207469746c650000000000000081840152818301528085018b90529351929392610f1592918591859101612b27565b60405160208183030381529060405293505050610fd0565b60ff871660021415610f6e57604080516002602082015260009181019190915261271060608201526080016040516020818303038152906040529150610fd0565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4c75636b733a20756e737570706f727465642066756e6374696f6e2074797065604482015260640161054e565b6000610fdd898988611b7e565b6003546040517f40a7bb1000000000000000000000000000000000000000000000000000000000815291925073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016916340a7bb109161105f918d913091899160ff16908890600401612935565b604080518083038186803b15801561107657600080fd5b505afa15801561108a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ae919061267e565b9450945050505094509492505050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461113f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161054e565b565b6001602052600090815260409020805461115a90612e74565b80601f016020809104026020016040519081016040528092919081815260200182805461118690612e74565b80156111d35780601f106111a8576101008083540402835291602001916111d3565b820191906000526020600020905b8154815290600101906020018083116111b657829003601f168201915b505050505081565b600460209081526000938452604080852084518086018401805192815290840195840195909520945292905282529020805461115a90612e74565b61ffff84166000908152600460205260408082209051611239908690869061280d565b908152604080516020928190038301902067ffffffffffffffff8516600090815292529020805461126990612e74565b80601f016020809104026020016040519081016040528092919081815260200182805461129590612e74565b80156112e25780601f106112b7576101008083540402835291602001916112e2565b820191906000526020600020905b8154815290600101906020018083116112c557829003601f168201915b505050505090506000815111611354576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4c75636b733a206e6f2072657472792072657665727400000000000000000000604482015260640161054e565b6040805160208082018352600080835261ffff8916815260049091528290209151909190611385908790879061280d565b908152604080516020928190038301902067ffffffffffffffff861660009081529083522082516113bc9391929190910190611d19565b5060208101516040517fe44cb8e400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063e44cb8e4906114369084908690600401612b03565b600060405180830381600087803b15801561145057600080fd5b505af1925050508015611461575060015b61150b5761ffff861660009081526004602052604090819020905183919061148c908890889061280d565b908152604080516020928190038301902067ffffffffffffffff871660009081529083522082516114c39391929190910190611d19565b507f0126dc08690914debb9abca92931edd717f003f2fe29dec4493e6c192a06cdb4818787878760006040516114fe96959493929190612cd5565b60405180910390a1610aaa565b7f0126dc08690914debb9abca92931edd717f003f2fe29dec4493e6c192a06cdb48187878787600160405161078696959493929190612cd5565b60005473ffffffffffffffffffffffffffffffffffffffff1633146115c6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161054e565b600380547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff163314611678576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161054e565b6040517fcbed8b9c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063cbed8b9c906116f29088908890889088908890600401612aca565b600060405180830381600087803b15801561170c57600080fd5b505af1158015611720573d6000803e3d6000fd5b505050505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146117ac576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161054e565b73ffffffffffffffffffffffffffffffffffffffff811661184f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161054e565b61185881611c5b565b50565b60005473ffffffffffffffffffffffffffffffffffffffff1633146118dc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161054e565b60018260ff16101580156118f4575060048260ff1611155b61195a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f4c75636b733a20696e76616c6964205f66756e6374696f6e5479706500000000604482015260640161054e565b61ffff909216600090815260026020908152604080832060ff90941683529290522055565b600061198c868685611b7e565b6040517f7a14574800000000000000000000000000000000000000000000000000000000815261ffff8816600482015230602482015290915060009073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690637a1457489060440160206040518083038186803b158015611a2157600080fd5b505afa158015611a35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a5991906126a2565b611a64906001612e1c565b61ffff88166000908152600160205260409081902090517fc580310000000000000000000000000000000000000000000000000000000000815291925073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169163c5803100913491611af7918c9189908c9030908b906004016129b2565b6000604051808303818588803b158015611b1057600080fd5b505af1158015611b24573d6000803e3d6000fd5b50506040805160ff8b16815267ffffffffffffffff861660208201527f8d3ee0df6a4b7e82a7f20a763f1c6826e6176323e655af64f32318827d2112d49450019150611b6d9050565b60405180910390a150505050505050565b60408082015160140151825161ffff861660009081526002602090815284822060ff881683529052928320546060938493929091611bbb91611cd0565b905060008560200151118015611be6575073ffffffffffffffffffffffffffffffffffffffff821615155b15611c0557611bfe8186602001518760400151611ce3565b9250611c50565b611c4d81604080517e01000000000000000000000000000000000000000000000000000000000000602082015260228082019390935281518082039093018352604201905290565b92505b509095945050505050565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000611cdc8284612e04565b9392505050565b604051606090600290611d009082908790879087906020016128c9565b6040516020818303038152906040529150509392505050565b828054611d2590612e74565b90600052602060002090601f016020900481019282611d475760008555611d8d565b82601f10611d6057805160ff1916838001178555611d8d565b82800160010185558215611d8d579182015b82811115611d8d578251825591602001919060010190611d72565b50611d99929150611e2f565b5090565b828054611da990612e74565b90600052602060002090601f016020900481019282611dcb5760008555611d8d565b82601f10611e02578280017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00823516178555611d8d565b82800160010185558215611d8d579182015b82811115611d8d578235825591602001919060010190611e14565b5b80821115611d995760008155600101611e30565b8035611e4f81612f55565b919050565b600082601f830112611e6557600080fd5b8135602067ffffffffffffffff821115611e8157611e81612f26565b8160051b611e90828201612db5565b838152828101908684018388018501891015611eab57600080fd5b600093505b85841015611ece578035835260019390930192918401918401611eb0565b50979650505050505050565b60008083601f840112611eec57600080fd5b50813567ffffffffffffffff811115611f0457600080fd5b602083019150836020828501011115611f1c57600080fd5b9250929050565b600082601f830112611f3457600080fd5b813567ffffffffffffffff811115611f4e57611f4e612f26565b611f7f60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601612db5565b818152846020838601011115611f9457600080fd5b816020850160208301376000918101602001919091529392505050565b803560068110611e4f57600080fd5b600060408284031215611fd257600080fd5b6040516040810181811067ffffffffffffffff82111715611ff557611ff5612f26565b604052905080823561200681612f55565b8152602092830135920191909152919050565b60006060828403121561202b57600080fd5b612033612d68565b905061203e826120e9565b8152602082013567ffffffffffffffff8082111561205b57600080fd5b61206785838601611f23565b6020840152604084013591508082111561208057600080fd5b5061208d84828501611f23565b60408301525092915050565b6000606082840312156120ab57600080fd5b6120b3612d68565b90508135815260208201356020820152604082013567ffffffffffffffff8111156120dd57600080fd5b61208d84828501611f23565b803561ffff81168114611e4f57600080fd5b803560ff81168114611e4f57600080fd5b60006020828403121561211e57600080fd5b8135611cdc81612f55565b60006020828403121561213b57600080fd5b81358015158114611cdc57600080fd5b60006020828403121561215d57600080fd5b611cdc826120e9565b600080600080600060a0868803121561217e57600080fd5b612187866120e9565b9450602086013561219781612f55565b9350604086013567ffffffffffffffff808211156121b457600080fd5b90870190610200828a0312156121c957600080fd5b6121d1612d91565b6121da83611e44565b81526121e8602084016120e9565b60208201526121f960408401611e44565b604082015260608301358281111561221057600080fd5b61221c8b828601611e54565b60608301525060808301358281111561223457600080fd5b6122408b828601611e54565b60808301525061225260a08401611e44565b60a082015261226360c08401611fb1565b60c082015260e083810135908201526101008084013590820152610120808401359082015261014080840135908201526101606122a18185016120e9565b908201526101806122b48b858301611fc0565b81830152506101c0808401356101a08301526101e084013581830152508095505060608801359150808211156122e957600080fd5b6122f589838a01612019565b9350608088013591508082111561230b57600080fd5b5061231888828901612099565b9150509295509295909350565b6000806000806080858703121561233b57600080fd5b612344856120e9565b9350602085013561235481612f55565b925060408501359150606085013567ffffffffffffffff81111561237757600080fd5b61238387828801612099565b91505092959194509250565b6000806000604084860312156123a457600080fd5b6123ad846120e9565b9250602084013567ffffffffffffffff8111156123c957600080fd5b6123d586828701611eda565b9497909650939450505050565b600080600080606085870312156123f857600080fd5b612401856120e9565b9350602085013567ffffffffffffffff81111561241d57600080fd5b61242987828801611eda565b909450925050604085013561243d81612f77565b939692955090935050565b60008060006060848603121561245d57600080fd5b612466846120e9565b9250602084013567ffffffffffffffff81111561248257600080fd5b61248e86828701611f23565b925050604084013561249f81612f77565b809150509250925092565b600080600080608085870312156124c057600080fd5b6124c9856120e9565b9350602085013567ffffffffffffffff808211156124e657600080fd5b6124f288838901611f23565b94506040870135915061250482612f77565b9092506060860135908082111561251a57600080fd5b5061238387828801611f23565b60008060008060006080868803121561253f57600080fd5b612548866120e9565b9450612556602087016120e9565b935060408601359250606086013567ffffffffffffffff81111561257957600080fd5b61258588828901611eda565b969995985093965092949392505050565b600080604083850312156125a957600080fd5b6125b2836120e9565b91506125c0602084016120fb565b90509250929050565b600080600080608085870312156125df57600080fd5b6125e8856120e9565b93506125f6602086016120fb565b9250604085013567ffffffffffffffff8082111561261357600080fd5b61261f88838901611f23565b9350606087013591508082111561263557600080fd5b5061238387828801612099565b60008060006060848603121561265757600080fd5b612660846120e9565b925061266e602085016120fb565b9150604084013590509250925092565b6000806040838503121561269157600080fd5b505080516020909101519092909150565b6000602082840312156126b457600080fd5b8151611cdc81612f77565b600081518084526020808501945080840160005b838110156126ef578151875295820195908201906001016126d3565b509495945050505050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b6000815180845261275b816020860160208601612e48565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600681106127c4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b61ffff815116825260006020820151606060208501526127eb6060850182612743565b9050604083015184820360408601526128048282612743565b95945050505050565b8183823760009101908152919050565b6000825161282f818460208701612e48565b9190910192915050565b600080835461284781612e74565b6001828116801561285f576001811461288e576128bd565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008416875282870194506128bd565b8760005260208060002060005b858110156128b45781548a82015290840190820161289b565b50505082870194505b50929695505050505050565b7fffff0000000000000000000000000000000000000000000000000000000000008560f01b16815283600282015282602282015260008251612912816042850160208701612e48565b9190910160420195945050505050565b602081526000611cdc6020830184612743565b61ffff8616815273ffffffffffffffffffffffffffffffffffffffff8516602082015260a06040820152600061296e60a0830186612743565b841515606084015282810360808401526129888185612743565b98975050505050505050565b61ffff841681526040602082015260006128046040830184866126fa565b61ffff871681526000602060c081840152600088546129d081612e74565b8060c087015260e06001808416600081146129f25760018114612a2557612a53565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008516838a015261010089019550612a53565b8d6000528660002060005b85811015612a4b5781548b8201860152908301908801612a30565b8a0184019650505b50505050508381036040850152612a6a8189612743565b915050612a8f606084018773ffffffffffffffffffffffffffffffffffffffff169052565b73ffffffffffffffffffffffffffffffffffffffff8516608084015282810360a0840152612abd8185612743565b9998505050505050505050565b600061ffff808816835280871660208401525084604083015260806060830152612af86080830184866126fa565b979650505050505050565b60ff83168152604060208201526000612b1f6040830184612743565b949350505050565b60ff8416815260606020820152612b5760608201845173ffffffffffffffffffffffffffffffffffffffff169052565b60006020840151612b6e608084018261ffff169052565b50604084015173ffffffffffffffffffffffffffffffffffffffff1660a0830152606084015161020060c0840152612baa6102608401826126bf565b905060808501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa08483030160e0850152612be582826126bf565b91505060a0850151610100612c118186018373ffffffffffffffffffffffffffffffffffffffff169052565b60c08701519150610120612c278187018461278d565b60e08801516101408781019190915291880151610160808801919091529088015161018080880191909152918801516101a0808801919091529088015192506101c09190612c7a8388018561ffff169052565b90880151805173ffffffffffffffffffffffffffffffffffffffff166101e088015260200151610200870152870151610220860152860151610240850152508281036040840152612ccb81856127c8565b9695505050505050565b60ff8716815261ffff8616602082015260a060408201526000612cfc60a0830186886126fa565b67ffffffffffffffff94909416606083015250901515608090910152949350505050565b60ff8616815261ffff8516602082015260a060408201526000612d4660a0830186612743565b67ffffffffffffffff8516606084015282810360808401526129888185612743565b6040516060810167ffffffffffffffff81118282101715612d8b57612d8b612f26565b60405290565b6040516101e0810167ffffffffffffffff81118282101715612d8b57612d8b612f26565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715612dfc57612dfc612f26565b604052919050565b60008219821115612e1757612e17612ec8565b500190565b600067ffffffffffffffff808316818516808303821115612e3f57612e3f612ec8565b01949350505050565b60005b83811015612e63578181015183820152602001612e4b565b83811115610d985750506000910152565b600181811c90821680612e8857607f821691505b60208210811415612ec2577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff8116811461185857600080fd5b67ffffffffffffffff8116811461185857600080fdfea264697066735822122020f51e0fe63e14ebb21f70dee3d55784da62b41cee7c8328c741d7481d28fa5164736f6c63430008060033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 307,
        "contract": "contracts/LucksBridge.sol:LucksBridge",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 4840,
        "contract": "contracts/LucksBridge.sol:LucksBridge",
        "label": "bridgeLookup",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint16,t_bytes_storage)"
      },
      {
        "astId": 4846,
        "contract": "contracts/LucksBridge.sol:LucksBridge",
        "label": "gasLookup",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint16,t_mapping(t_uint8,t_uint256))"
      },
      {
        "astId": 4851,
        "contract": "contracts/LucksBridge.sol:LucksBridge",
        "label": "useLayerZeroToken",
        "offset": 0,
        "slot": "3",
        "type": "t_bool"
      },
      {
        "astId": 4859,
        "contract": "contracts/LucksBridge.sol:LucksBridge",
        "label": "revertLookup",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes_storage)))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes_memory_ptr": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes_storage))": {
        "encoding": "mapping",
        "key": "t_bytes_memory_ptr",
        "label": "mapping(bytes => mapping(uint64 => bytes))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint64,t_bytes_storage)"
      },
      "t_mapping(t_uint16,t_bytes_storage)": {
        "encoding": "mapping",
        "key": "t_uint16",
        "label": "mapping(uint16 => bytes)",
        "numberOfBytes": "32",
        "value": "t_bytes_storage"
      },
      "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes_storage)))": {
        "encoding": "mapping",
        "key": "t_uint16",
        "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes_storage))"
      },
      "t_mapping(t_uint16,t_mapping(t_uint8,t_uint256))": {
        "encoding": "mapping",
        "key": "t_uint16",
        "label": "mapping(uint16 => mapping(uint8 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint8,t_uint256)"
      },
      "t_mapping(t_uint64,t_bytes_storage)": {
        "encoding": "mapping",
        "key": "t_uint64",
        "label": "mapping(uint64 => bytes)",
        "numberOfBytes": "32",
        "value": "t_bytes_storage"
      },
      "t_mapping(t_uint8,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint8",
        "label": "mapping(uint8 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint16": {
        "encoding": "inplace",
        "label": "uint16",
        "numberOfBytes": "2"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}