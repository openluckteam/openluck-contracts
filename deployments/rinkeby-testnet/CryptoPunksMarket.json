{
  "address": "0x4bC067171fc23b2cc0f9E9876d83E8B95bF50699",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "punksOfferedForSale",
      "outputs": [
        {
          "name": "isForSale",
          "type": "bool"
        },
        {
          "name": "punkIndex",
          "type": "uint256"
        },
        {
          "name": "seller",
          "type": "address"
        },
        {
          "name": "minValue",
          "type": "uint256"
        },
        {
          "name": "onlySellTo",
          "type": "address"
        }
      ],
      "payable": false,
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "punkIndex",
          "type": "uint256"
        }
      ],
      "name": "enterBidForPunk",
      "outputs": [],
      "payable": true,
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "punkIndex",
          "type": "uint256"
        },
        {
          "name": "minPrice",
          "type": "uint256"
        }
      ],
      "name": "acceptBidForPunk",
      "outputs": [],
      "payable": false,
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "addresses",
          "type": "address[]"
        },
        {
          "name": "indices",
          "type": "uint256[]"
        }
      ],
      "name": "setInitialOwners",
      "outputs": [],
      "payable": false,
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "imageHash",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "nextPunkIndexToAssign",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "punkIndexToAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "standard",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "punkBids",
      "outputs": [
        {
          "name": "hasBid",
          "type": "bool"
        },
        {
          "name": "punkIndex",
          "type": "uint256"
        },
        {
          "name": "bidder",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "payable": false,
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "allInitialOwnersAssigned",
      "outputs": [],
      "payable": false,
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "allPunksAssigned",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "punkIndex",
          "type": "uint256"
        }
      ],
      "name": "buyPunk",
      "outputs": [],
      "payable": true,
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "punkIndex",
          "type": "uint256"
        }
      ],
      "name": "transferPunk",
      "outputs": [],
      "payable": false,
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "punkIndex",
          "type": "uint256"
        }
      ],
      "name": "withdrawBidForPunk",
      "outputs": [],
      "payable": false,
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "punkIndex",
          "type": "uint256"
        }
      ],
      "name": "setInitialOwner",
      "outputs": [],
      "payable": false,
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "punkIndex",
          "type": "uint256"
        },
        {
          "name": "minSalePriceInWei",
          "type": "uint256"
        },
        {
          "name": "toAddress",
          "type": "address"
        }
      ],
      "name": "offerPunkForSaleToAddress",
      "outputs": [],
      "payable": false,
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "punksRemainingToAssign",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "punkIndex",
          "type": "uint256"
        },
        {
          "name": "minSalePriceInWei",
          "type": "uint256"
        }
      ],
      "name": "offerPunkForSale",
      "outputs": [],
      "payable": false,
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "punkIndex",
          "type": "uint256"
        }
      ],
      "name": "getPunk",
      "outputs": [],
      "payable": false,
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "pendingWithdrawals",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "punkIndex",
          "type": "uint256"
        }
      ],
      "name": "punkNoLongerForSale",
      "outputs": [],
      "payable": false,
      "type": "function"
    },
    {
      "inputs": [],
      "payable": true,
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "punkIndex",
          "type": "uint256"
        }
      ],
      "name": "Assign",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "punkIndex",
          "type": "uint256"
        }
      ],
      "name": "PunkTransfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "punkIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "minValue",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "toAddress",
          "type": "address"
        }
      ],
      "name": "PunkOffered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "punkIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "fromAddress",
          "type": "address"
        }
      ],
      "name": "PunkBidEntered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "punkIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "fromAddress",
          "type": "address"
        }
      ],
      "name": "PunkBidWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "punkIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "fromAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "toAddress",
          "type": "address"
        }
      ],
      "name": "PunkBought",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "punkIndex",
          "type": "uint256"
        }
      ],
      "name": "PunkNoLongerForSale",
      "type": "event"
    }
  ],
  "transactionHash": "0x46e39cf1b6d1a5acc1eb51434eb78787949ce3307ed2061fe4f92e7ef6d77b5e",
  "receipt": {
    "to": null,
    "from": "0x5b770F460978C456d69bC46463dfda71FEEE60AD",
    "contractAddress": "0x4bC067171fc23b2cc0f9E9876d83E8B95bF50699",
    "transactionIndex": 2,
    "gasUsed": "2159933",
    "logsBloom": "0x
    "blockHash": "0x3d367657e83335cc98fbb2ba44eb0487daee2a6cbc587cca972e26327a2cb803",
    "transactionHash": "0x46e39cf1b6d1a5acc1eb51434eb78787949ce3307ed2061fe4f92e7ef6d77b5e",
    "logs": [],
    "blockNumber": 10964073,
    "cumulativeGasUsed": "2248721",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "724aff83b6cd8cc45196ece07bff3684",
  "metadata": "{\"compiler\":{\"version\":\"0.4.11+commit.68ef5810.mod\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"punksOfferedForSale\",\"outputs\":[{\"name\":\"isForSale\",\"type\":\"bool\"},{\"name\":\"punkIndex\",\"type\":\"uint256\"},{\"name\":\"seller\",\"type\":\"address\"},{\"name\":\"minValue\",\"type\":\"uint256\"},{\"name\":\"onlySellTo\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"punkIndex\",\"type\":\"uint256\"}],\"name\":\"enterBidForPunk\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"punkIndex\",\"type\":\"uint256\"},{\"name\":\"minPrice\",\"type\":\"uint256\"}],\"name\":\"acceptBidForPunk\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addresses\",\"type\":\"address[]\"},{\"name\":\"indices\",\"type\":\"uint256[]\"}],\"name\":\"setInitialOwners\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"imageHash\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nextPunkIndexToAssign\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"punkIndexToAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"standard\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"punkBids\",\"outputs\":[{\"name\":\"hasBid\",\"type\":\"bool\"},{\"name\":\"punkIndex\",\"type\":\"uint256\"},{\"name\":\"bidder\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"allInitialOwnersAssigned\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"allPunksAssigned\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"punkIndex\",\"type\":\"uint256\"}],\"name\":\"buyPunk\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"punkIndex\",\"type\":\"uint256\"}],\"name\":\"transferPunk\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"punkIndex\",\"type\":\"uint256\"}],\"name\":\"withdrawBidForPunk\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"punkIndex\",\"type\":\"uint256\"}],\"name\":\"setInitialOwner\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"punkIndex\",\"type\":\"uint256\"},{\"name\":\"minSalePriceInWei\",\"type\":\"uint256\"},{\"name\":\"toAddress\",\"type\":\"address\"}],\"name\":\"offerPunkForSaleToAddress\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"punksRemainingToAssign\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"punkIndex\",\"type\":\"uint256\"},{\"name\":\"minSalePriceInWei\",\"type\":\"uint256\"}],\"name\":\"offerPunkForSale\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"punkIndex\",\"type\":\"uint256\"}],\"name\":\"getPunk\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"pendingWithdrawals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"punkIndex\",\"type\":\"uint256\"}],\"name\":\"punkNoLongerForSale\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"punkIndex\",\"type\":\"uint256\"}],\"name\":\"Assign\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"punkIndex\",\"type\":\"uint256\"}],\"name\":\"PunkTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"punkIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"minValue\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"toAddress\",\"type\":\"address\"}],\"name\":\"PunkOffered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"punkIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"fromAddress\",\"type\":\"address\"}],\"name\":\"PunkBidEntered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"punkIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"fromAddress\",\"type\":\"address\"}],\"name\":\"PunkBidWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"punkIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"fromAddress\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"toAddress\",\"type\":\"address\"}],\"name\":\"PunkBought\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"punkIndex\",\"type\":\"uint256\"}],\"name\":\"PunkNoLongerForSale\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/tests/NFTs-ETH/CryptoPunksMarket.sol\":\"CryptoPunksMarket\"},\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[]},\"sources\":{\"contracts/tests/NFTs-ETH/CryptoPunksMarket.sol\":{\"content\":\"\\r\\n// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.4.11;\\r\\n\\r\\ncontract CryptoPunksMarket {\\r\\n\\r\\n    // You can use this hash to verify the image file containing all the punks\\r\\n    string public imageHash = \\\"ac39af4793119ee46bbff351d8cb6b5f23da60222126add4268e261199a2921b\\\";\\r\\n\\r\\n    address owner;\\r\\n\\r\\n    string public standard = 'CryptoPunks';\\r\\n    string public name;\\r\\n    string public symbol;\\r\\n    uint8 public decimals;\\r\\n    uint256 public totalSupply;\\r\\n\\r\\n    uint public nextPunkIndexToAssign = 0;\\r\\n\\r\\n    bool public allPunksAssigned = false;\\r\\n    uint public punksRemainingToAssign = 0;\\r\\n\\r\\n    //mapping (address => uint) public addressToPunkIndex;\\r\\n    mapping (uint => address) public punkIndexToAddress;\\r\\n\\r\\n    /* This creates an array with all balances */\\r\\n    mapping (address => uint256) public balanceOf;\\r\\n\\r\\n    struct Offer {\\r\\n        bool isForSale;\\r\\n        uint punkIndex;\\r\\n        address seller;\\r\\n        uint minValue;          // in ether\\r\\n        address onlySellTo;     // specify to sell only to a specific person\\r\\n    }\\r\\n\\r\\n    struct Bid {\\r\\n        bool hasBid;\\r\\n        uint punkIndex;\\r\\n        address bidder;\\r\\n        uint value;\\r\\n    }\\r\\n\\r\\n    // A record of punks that are offered for sale at a specific minimum value, and perhaps to a specific person\\r\\n    mapping (uint => Offer) public punksOfferedForSale;\\r\\n\\r\\n    // A record of the highest punk bid\\r\\n    mapping (uint => Bid) public punkBids;\\r\\n\\r\\n    mapping (address => uint) public pendingWithdrawals;\\r\\n\\r\\n    event Assign(address indexed to, uint256 punkIndex);\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n    event PunkTransfer(address indexed from, address indexed to, uint256 punkIndex);\\r\\n    event PunkOffered(uint indexed punkIndex, uint minValue, address indexed toAddress);\\r\\n    event PunkBidEntered(uint indexed punkIndex, uint value, address indexed fromAddress);\\r\\n    event PunkBidWithdrawn(uint indexed punkIndex, uint value, address indexed fromAddress);\\r\\n    event PunkBought(uint indexed punkIndex, uint value, address indexed fromAddress, address indexed toAddress);\\r\\n    event PunkNoLongerForSale(uint indexed punkIndex);\\r\\n\\r\\n    /* Initializes contract with initial supply tokens to the creator of the contract */\\r\\n    function CryptoPunksMarket() payable {\\r\\n        //        balanceOf[msg.sender] = initialSupply;              // Give the creator all initial tokens\\r\\n        owner = msg.sender;\\r\\n        totalSupply = 10000;                        // Update total supply\\r\\n        punksRemainingToAssign = totalSupply;\\r\\n        name = \\\"CRYPTOPUNKS\\\";                                   // Set the name for display purposes\\r\\n        symbol = \\\"Ͼ\\\";                               // Set the symbol for display purposes\\r\\n        decimals = 0;                                       // Amount of decimals for display purposes\\r\\n    }\\r\\n\\r\\n    function setInitialOwner(address to, uint punkIndex) {\\r\\n        if (msg.sender != owner) throw;\\r\\n        if (allPunksAssigned) throw;\\r\\n        if (punkIndex >= 10000) throw;\\r\\n        if (punkIndexToAddress[punkIndex] != to) {\\r\\n            if (punkIndexToAddress[punkIndex] != 0x0) {\\r\\n                balanceOf[punkIndexToAddress[punkIndex]]--;\\r\\n            } else {\\r\\n                punksRemainingToAssign--;\\r\\n            }\\r\\n            punkIndexToAddress[punkIndex] = to;\\r\\n            balanceOf[to]++;\\r\\n            Assign(to, punkIndex);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function setInitialOwners(address[] addresses, uint[] indices) {\\r\\n        if (msg.sender != owner) throw;\\r\\n        uint n = addresses.length;\\r\\n        for (uint i = 0; i < n; i++) {\\r\\n            setInitialOwner(addresses[i], indices[i]);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function allInitialOwnersAssigned() {\\r\\n        if (msg.sender != owner) throw;\\r\\n        allPunksAssigned = true;\\r\\n    }\\r\\n\\r\\n    function getPunk(uint punkIndex) {\\r\\n        if (!allPunksAssigned) throw;\\r\\n        if (punksRemainingToAssign == 0) throw;\\r\\n        if (punkIndexToAddress[punkIndex] != 0x0) throw;\\r\\n        if (punkIndex >= 10000) throw;\\r\\n        punkIndexToAddress[punkIndex] = msg.sender;\\r\\n        balanceOf[msg.sender]++;\\r\\n        punksRemainingToAssign--;\\r\\n        Assign(msg.sender, punkIndex);\\r\\n    }\\r\\n\\r\\n    // Transfer ownership of a punk to another user without requiring payment\\r\\n    function transferPunk(address to, uint punkIndex) {\\r\\n        if (!allPunksAssigned) throw;\\r\\n        if (punkIndexToAddress[punkIndex] != msg.sender) throw;\\r\\n        if (punkIndex >= 10000) throw;\\r\\n        if (punksOfferedForSale[punkIndex].isForSale) {\\r\\n            punkNoLongerForSale(punkIndex);\\r\\n        }\\r\\n        punkIndexToAddress[punkIndex] = to;\\r\\n        balanceOf[msg.sender]--;\\r\\n        balanceOf[to]++;\\r\\n        Transfer(msg.sender, to, 1);\\r\\n        PunkTransfer(msg.sender, to, punkIndex);\\r\\n        // Check for the case where there is a bid from the new owner and refund it.\\r\\n        // Any other bid can stay in place.\\r\\n        Bid bid = punkBids[punkIndex];\\r\\n        if (bid.bidder == to) {\\r\\n            // Kill bid and refund value\\r\\n            pendingWithdrawals[to] += bid.value;\\r\\n            punkBids[punkIndex] = Bid(false, punkIndex, 0x0, 0);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function punkNoLongerForSale(uint punkIndex) {\\r\\n        if (!allPunksAssigned) throw;\\r\\n        if (punkIndexToAddress[punkIndex] != msg.sender) throw;\\r\\n        if (punkIndex >= 10000) throw;\\r\\n        punksOfferedForSale[punkIndex] = Offer(false, punkIndex, msg.sender, 0, 0x0);\\r\\n        PunkNoLongerForSale(punkIndex);\\r\\n    }\\r\\n\\r\\n    function offerPunkForSale(uint punkIndex, uint minSalePriceInWei) {\\r\\n        if (!allPunksAssigned) throw;\\r\\n        if (punkIndexToAddress[punkIndex] != msg.sender) throw;\\r\\n        if (punkIndex >= 10000) throw;\\r\\n        punksOfferedForSale[punkIndex] = Offer(true, punkIndex, msg.sender, minSalePriceInWei, 0x0);\\r\\n        PunkOffered(punkIndex, minSalePriceInWei, 0x0);\\r\\n    }\\r\\n\\r\\n    function offerPunkForSaleToAddress(uint punkIndex, uint minSalePriceInWei, address toAddress) {\\r\\n        if (!allPunksAssigned) throw;\\r\\n        if (punkIndexToAddress[punkIndex] != msg.sender) throw;\\r\\n        if (punkIndex >= 10000) throw;\\r\\n        punksOfferedForSale[punkIndex] = Offer(true, punkIndex, msg.sender, minSalePriceInWei, toAddress);\\r\\n        PunkOffered(punkIndex, minSalePriceInWei, toAddress);\\r\\n    }\\r\\n\\r\\n    function buyPunk(uint punkIndex) payable {\\r\\n        if (!allPunksAssigned) throw;\\r\\n        Offer offer = punksOfferedForSale[punkIndex];\\r\\n        if (punkIndex >= 10000) throw;\\r\\n        if (!offer.isForSale) throw;                // punk not actually for sale\\r\\n        if (offer.onlySellTo != 0x0 && offer.onlySellTo != msg.sender) throw;  // punk not supposed to be sold to this user\\r\\n        if (msg.value < offer.minValue) throw;      // Didn't send enough ETH\\r\\n        if (offer.seller != punkIndexToAddress[punkIndex]) throw; // Seller no longer owner of punk\\r\\n\\r\\n        address seller = offer.seller;\\r\\n\\r\\n        punkIndexToAddress[punkIndex] = msg.sender;\\r\\n        balanceOf[seller]--;\\r\\n        balanceOf[msg.sender]++;\\r\\n        Transfer(seller, msg.sender, 1);\\r\\n\\r\\n        punkNoLongerForSale(punkIndex);\\r\\n        pendingWithdrawals[seller] += msg.value;\\r\\n        PunkBought(punkIndex, msg.value, seller, msg.sender);\\r\\n\\r\\n        // Check for the case where there is a bid from the new owner and refund it.\\r\\n        // Any other bid can stay in place.\\r\\n        Bid bid = punkBids[punkIndex];\\r\\n        if (bid.bidder == msg.sender) {\\r\\n            // Kill bid and refund value\\r\\n            pendingWithdrawals[msg.sender] += bid.value;\\r\\n            punkBids[punkIndex] = Bid(false, punkIndex, 0x0, 0);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function withdraw() {\\r\\n        if (!allPunksAssigned) throw;\\r\\n        uint amount = pendingWithdrawals[msg.sender];\\r\\n        // Remember to zero the pending refund before\\r\\n        // sending to prevent re-entrancy attacks\\r\\n        pendingWithdrawals[msg.sender] = 0;\\r\\n        msg.sender.transfer(amount);\\r\\n    }\\r\\n\\r\\n    function enterBidForPunk(uint punkIndex) payable {\\r\\n        if (punkIndex >= 10000) throw;\\r\\n        if (!allPunksAssigned) throw;                \\r\\n        if (punkIndexToAddress[punkIndex] == 0x0) throw;\\r\\n        if (punkIndexToAddress[punkIndex] == msg.sender) throw;\\r\\n        if (msg.value == 0) throw;\\r\\n        Bid existing = punkBids[punkIndex];\\r\\n        if (msg.value <= existing.value) throw;\\r\\n        if (existing.value > 0) {\\r\\n            // Refund the failing bid\\r\\n            pendingWithdrawals[existing.bidder] += existing.value;\\r\\n        }\\r\\n        punkBids[punkIndex] = Bid(true, punkIndex, msg.sender, msg.value);\\r\\n        PunkBidEntered(punkIndex, msg.value, msg.sender);\\r\\n    }\\r\\n\\r\\n    function acceptBidForPunk(uint punkIndex, uint minPrice) {\\r\\n        if (punkIndex >= 10000) throw;\\r\\n        if (!allPunksAssigned) throw;                \\r\\n        if (punkIndexToAddress[punkIndex] != msg.sender) throw;\\r\\n        address seller = msg.sender;\\r\\n        Bid bid = punkBids[punkIndex];\\r\\n        if (bid.value == 0) throw;\\r\\n        if (bid.value < minPrice) throw;\\r\\n\\r\\n        punkIndexToAddress[punkIndex] = bid.bidder;\\r\\n        balanceOf[seller]--;\\r\\n        balanceOf[bid.bidder]++;\\r\\n        Transfer(seller, bid.bidder, 1);\\r\\n\\r\\n        punksOfferedForSale[punkIndex] = Offer(false, punkIndex, bid.bidder, 0, 0x0);\\r\\n        uint amount = bid.value;\\r\\n        punkBids[punkIndex] = Bid(false, punkIndex, 0x0, 0);\\r\\n        pendingWithdrawals[seller] += amount;\\r\\n        PunkBought(punkIndex, bid.value, seller, bid.bidder);\\r\\n    }\\r\\n\\r\\n    function withdrawBidForPunk(uint punkIndex) {\\r\\n        if (punkIndex >= 10000) throw;\\r\\n        if (!allPunksAssigned) throw;                \\r\\n        if (punkIndexToAddress[punkIndex] == 0x0) throw;\\r\\n        if (punkIndexToAddress[punkIndex] == msg.sender) throw;\\r\\n        Bid bid = punkBids[punkIndex];\\r\\n        if (bid.bidder != msg.sender) throw;\\r\\n        PunkBidWithdrawn(punkIndex, bid.value, msg.sender);\\r\\n        uint amount = bid.value;\\r\\n        punkBids[punkIndex] = Bid(false, punkIndex, 0x0, 0);\\r\\n        // Refund the bid money\\r\\n        msg.sender.transfer(amount);\\r\\n    }\\r\\n\\r\\n}\",\"keccak256\":\"0x0c7be7af8ae2b8edf90ca4d76458e5205af4f964aa64135c9f540c2f1c7fe708\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6060604052361561015c5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde03811461015e578063088f11f31461020c578063091dbfd21461026557806318160ddd1461027257806323165b7514610294578063313ce567146102ac57806339c5dde6146102d25780633ccfd60b1461035f57806351605d801461037157806352f29a251461041f57806358178168146104415780635a3b7e421461047d5780636e743fa91461052b57806370a082311461057b5780637ecedac9146105b65780638126c38a146105c85780638264fe98146105ec5780638b72a2ec146105f957806395d89b4114610627578063979bc638146106d5578063a75a9049146106ea578063bf31196f14610718578063c0d6ce6314610749578063c44193c31461076b578063c81d1d5b14610783578063f3f4370314610798578063f6eeff1e146107d3575bfe5b341561016657fe5b61016e6107e8565b6040805160208082528351818301528351919283929083019185019080838382156101d2575b8051825260208311156101d2577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101610194565b505050905090810190601f1680156101fe5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561021457fe5b61021f600435610894565b604080519515158652602086019490945273ffffffffffffffffffffffffffffffffffffffff928316858501526060850191909152166080830152519081900360a00190f35b6102706004356108df565b005b341561027a57fe5b610282610ace565b60408051918252519081900360200190f35b341561029c57fe5b610270600435602435610ad4565b005b34156102b457fe5b6102bc610f47565b6040805160ff9092168252519081900360200190f35b34156102da57fe5b610270600480803590602001908201803590602001908080602002602001604051908101604052809392919081815260200183836020028082843750506040805187358901803560208181028481018201909552818452989a998901989297509082019550935083925085019084908082843750949650610f5095505050505050565b005b341561036757fe5b610270610fd5565b005b341561037957fe5b61016e61103d565b6040805160208082528351818301528351919283929083019185019080838382156101d2575b8051825260208311156101d2577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101610194565b505050905090810190601f1680156101fe5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561042757fe5b6102826110e9565b60408051918252519081900360200190f35b341561044957fe5b6104546004356110ef565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b341561048557fe5b61016e611117565b6040805160208082528351818301528351919283929083019185019080838382156101d2575b8051825260208311156101d2577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101610194565b505050905090810190601f1680156101fe5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561053357fe5b61053e6004356111c0565b604080519415158552602085019390935273ffffffffffffffffffffffffffffffffffffffff909116838301526060830152519081900360800190f35b341561058357fe5b61028273ffffffffffffffffffffffffffffffffffffffff60043516611204565b60408051918252519081900360200190f35b34156105be57fe5b610270611216565b005b34156105d057fe5b6105d861126d565b604080519115158252519081900360200190f35b610270600435611276565b005b341561060157fe5b61027073ffffffffffffffffffffffffffffffffffffffff600435166024356115aa565b005b341561062f57fe5b61016e611859565b6040805160208082528351818301528351919283929083019185019080838382156101d2575b8051825260208311156101d2577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101610194565b505050905090810190601f1680156101fe5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156106dd57fe5b610270600435611905565b005b34156106f257fe5b61027073ffffffffffffffffffffffffffffffffffffffff60043516602435611aff565b005b341561072057fe5b61027060043560243573ffffffffffffffffffffffffffffffffffffffff60443516611cc1565b005b341561075157fe5b610282611e2a565b60408051918252519081900360200190f35b341561077357fe5b610270600435602435611e30565b005b341561078b57fe5b610270600435611f95565b005b34156107a057fe5b61028273ffffffffffffffffffffffffffffffffffffffff600435166120b7565b60408051918252519081900360200190f35b34156107db57fe5b6102706004356120c9565b005b6003805460408051602060026001851615610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190941693909304601f8101849004840282018401909252818152929183018282801561088c5780601f106108615761010080835404028352916020019161088c565b820191906000526020600020905b81548152906001019060200180831161086f57829003601f168201915b505050505081565b600c602052600090815260409020805460018201546002830154600384015460049094015460ff90931693919273ffffffffffffffffffffffffffffffffffffffff91821692911685565b600061271082106108f05760006000fd5b60085460ff1615156109025760006000fd5b6000828152600a602052604090205473ffffffffffffffffffffffffffffffffffffffff1615156109335760006000fd5b6000828152600a60205260409020543373ffffffffffffffffffffffffffffffffffffffff908116911614156109695760006000fd5b3415156109765760006000fd5b506000818152600d60205260409020600381015434116109965760006000fd5b6000816003015411156109d9576003810154600282015473ffffffffffffffffffffffffffffffffffffffff166000908152600e60205260409020805490910190555b60408051608081018252600180825260208083018681523373ffffffffffffffffffffffffffffffffffffffff908116858701818152346060880181815260008c8152600d88528a9020985189547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016901515178955945196880196909655516002870180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169190931617909155905160039094019390935583519182529251919285927f5b859394fabae0c1ba88baffe67e751ab5248d2e879028b8c8d6897b0519f56a9281900390910190a35b5050565b60065481565b600080806127108510610ae75760006000fd5b60085460ff161515610af95760006000fd5b6000858152600a60205260409020543373ffffffffffffffffffffffffffffffffffffffff908116911614610b2e5760006000fd5b6000858152600d6020526040902060038101543394509092501515610b535760006000fd5b8382600301541015610b655760006000fd5b6002820180546000878152600a6020908152604080832080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff958616179055878416808452600b835281842080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019055855485168452928190208054600190810190915594548151958652905193169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a360a0604051908101604052806000151581526020018681526020018360020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff16815250600c600087815260200190815260200160002060008201518160000160006101000a81548160ff0219169083151502179055506020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060820151816003015560808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505081600301549050608060405190810160405280600015158152602001868152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815250600d600087815260200190815260200160002060008201518160000160006101000a81548160ff0219169083151502179055506020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060820151816003015590505080600e60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16867f58e5d5a525e3b40bc15abaa38b5882678db1ee68befd2f60bafe3a7fd06db9e385600301546040518082815260200191505060405180910390a45b5050505050565b60055460ff1681565b60015460009081903373ffffffffffffffffffffffffffffffffffffffff908116911614610f7e5760006000fd5b5050815160005b81811015610fce57610fc58482815181101515610f9e57fe5b906020019060200201518483815181101515610fb657fe5b90602001906020020151611aff565b5b600101610f85565b5b50505050565b60085460009060ff161515610fea5760006000fd5b5073ffffffffffffffffffffffffffffffffffffffff33166000818152600e6020526040808220805490839055905190929183156108fc02918491818181858888f19350505050151561103957fe5b5b50565b6000805460408051602060026001851615610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190941693909304601f8101849004840282018401909252818152929183018282801561088c5780601f106108615761010080835404028352916020019161088c565b820191906000526020600020905b81548152906001019060200180831161086f57829003601f168201915b505050505081565b60075481565b600a6020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b600280546040805160206001841615610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01909316849004601f8101849004840282018401909252818152929183018282801561088c5780601f106108615761010080835404028352916020019161088c565b820191906000526020600020905b81548152906001019060200180831161086f57829003601f168201915b505050505081565b600d60205260009081526040902080546001820154600283015460039093015460ff90921692909173ffffffffffffffffffffffffffffffffffffffff9091169084565b600b6020526000908152604090205481565b6001543373ffffffffffffffffffffffffffffffffffffffff90811691161461123f5760006000fd5b600880547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790555b565b60085460ff1681565b6008546000908190819060ff16151561128f5760006000fd5b6000848152600c60205260409020925061271084106112ae5760006000fd5b825460ff1615156112bf5760006000fd5b600483015473ffffffffffffffffffffffffffffffffffffffff1615801590611306575060048301543373ffffffffffffffffffffffffffffffffffffffff908116911614155b156113115760006000fd5b82600301543410156113235760006000fd5b6000848152600a6020526040902054600284015473ffffffffffffffffffffffffffffffffffffffff90811691161461135c5760006000fd5b60028301546000858152600a6020908152604080832080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff3381169182179092559416808452600b835281842080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01905584845292819020805460019081019091558151908152905192955085927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a3611437846120c9565b73ffffffffffffffffffffffffffffffffffffffff8083166000818152600e602090815260409182902080543490810190915582519081529151339094169388927f58e5d5a525e3b40bc15abaa38b5882678db1ee68befd2f60bafe3a7fd06db9e392908290030190a4506000838152600d6020526040902060028101543373ffffffffffffffffffffffffffffffffffffffff90811691161415610fce576003818101543373ffffffffffffffffffffffffffffffffffffffff9081166000908152600e60209081526040808320805490950190945583516080810185528281528082018a8152818601848152606083018581528c8652600d90945295909320905181547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169015151781559151600183015592516002820180547fffffffffffffffffffffffff000000000000000000000000000000000000000016919093161790915590519101555b5b50505050565b60085460009060ff1615156115bf5760006000fd5b6000828152600a60205260409020543373ffffffffffffffffffffffffffffffffffffffff9081169116146115f45760006000fd5b61271082106116035760006000fd5b6000828152600c602052604090205460ff161561162357611623826120c9565b5b6000828152600a6020908152604080832080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff88811691821790925533909116808552600b845282852080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190558185529382902080546001908101909155825190815291519093927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef928290030190a38273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f05af636b70da6819000c49f85b21fa82081c632069bb626f30932034099107d8846040518082815260200191505060405180910390a3506000818152600d60205260409020600281015473ffffffffffffffffffffffffffffffffffffffff848116911614156118535760038181015473ffffffffffffffffffffffffffffffffffffffff8581166000908152600e6020908152604080832080549095019094558351608081018552828152808201888152818601848152606083018581528a8652600d90945295909320905181547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169015151781559151600183015592516002820180547fffffffffffffffffffffffff000000000000000000000000000000000000000016919093161790915590519101555b5b505050565b6004805460408051602060026001851615610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190941693909304601f8101849004840282018401909252818152929183018282801561088c5780601f106108615761010080835404028352916020019161088c565b820191906000526020600020905b81548152906001019060200180831161086f57829003601f168201915b505050505081565b60008061271083106119175760006000fd5b60085460ff1615156119295760006000fd5b6000838152600a602052604090205473ffffffffffffffffffffffffffffffffffffffff16151561195a5760006000fd5b6000838152600a60205260409020543373ffffffffffffffffffffffffffffffffffffffff908116911614156119905760006000fd5b6000838152600d6020526040902060028101549092503373ffffffffffffffffffffffffffffffffffffffff9081169116146119cc5760006000fd5b6003820154604080519182525173ffffffffffffffffffffffffffffffffffffffff33169185917f6f30e1ee4d81dcc7a8a478577f65d2ed2edb120565960ac45fe7c50551c879329181900360200190a3506003818101546040805160808101825260008082526020808301888152838501838152606085018481528a8552600d909352858420945185547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690151517855590516001850155516002840180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92831617905590519290950191909155905191923316916108fc84150291849190818181858888f19350505050151561185357fe5b5b505050565b6001543373ffffffffffffffffffffffffffffffffffffffff908116911614611b285760006000fd5b60085460ff1615611b395760006000fd5b6127108110611b485760006000fd5b6000818152600a602052604090205473ffffffffffffffffffffffffffffffffffffffff838116911614610aca576000818152600a602052604090205473ffffffffffffffffffffffffffffffffffffffff1615611bfc576000818152600a602090815260408083205473ffffffffffffffffffffffffffffffffffffffff168352600b909152902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019055611c25565b600980547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190555b6000818152600a6020908152604080832080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8716908117909155808452600b83529281902080546001019055805184815290517f8a0e37b73a0d9c82e205d4d1a3ff3d0b57ce5f4d7bccf6bac03336dc101cb7ba929181900390910190a25b5b5050565b60085460ff161515611cd35760006000fd5b6000838152600a60205260409020543373ffffffffffffffffffffffffffffffffffffffff908116911614611d085760006000fd5b6127108310611d175760006000fd5b6040805160a081018252600180825260208083018781523373ffffffffffffffffffffffffffffffffffffffff908116858701908152606086018981528883166080880181815260008d8152600c88528a9020985189547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690151517895594519688019690965590516002870180547fffffffffffffffffffffffff00000000000000000000000000000000000000009081169285169290921790559051600387015591516004909501805490921694169390931790925582518581529251909286927f3c7b682d5da98001a9b8cbda6c647d2c63d698a4184fd1d55e2ce7b66f5d21eb92918290030190a35b505050565b60095481565b60085460ff161515611e425760006000fd5b6000828152600a60205260409020543373ffffffffffffffffffffffffffffffffffffffff908116911614611e775760006000fd5b6127108210611e865760006000fd5b6040805160a081018252600180825260208083018681523373ffffffffffffffffffffffffffffffffffffffff908116858701908152606086018881526000608088018181528b8252600c8752898220985189547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690151517895594519688019690965590516002870180547fffffffffffffffffffffffff00000000000000000000000000000000000000009081169285169290921790559051600387015591516004909501805490921694169390931790925582518481529251909285927f3c7b682d5da98001a9b8cbda6c647d2c63d698a4184fd1d55e2ce7b66f5d21eb92918290030190a35b5050565b60085460ff161515611fa75760006000fd5b6009541515611fb65760006000fd5b6000818152600a602052604090205473ffffffffffffffffffffffffffffffffffffffff1615611fe65760006000fd5b6127108110611ff55760006000fd5b6000818152600a6020908152604080832080547fffffffffffffffffffffffff0000000000000000000000000000000000000000163373ffffffffffffffffffffffffffffffffffffffff16908117909155808452600b83529281902080546001019055600980547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019055805184815290517f8a0e37b73a0d9c82e205d4d1a3ff3d0b57ce5f4d7bccf6bac03336dc101cb7ba929181900390910190a25b50565b600e6020526000908152604090205481565b60085460ff1615156120db5760006000fd5b6000818152600a60205260409020543373ffffffffffffffffffffffffffffffffffffffff9081169116146121105760006000fd5b612710811061211f5760006000fd5b6040805160a0810182526000808252602080830185815273ffffffffffffffffffffffffffffffffffffffff3381168587019081526060860185815260808701868152898752600c909552878620965187549015157fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0090911617875592516001870155516002860180549183167fffffffffffffffffffffffff00000000000000000000000000000000000000009283161790559151600386015591516004909401805494909216931692909217909155905182917fb0e0a660b4e50f26f0b7ce75c24655fc76cc66e3334a54ff410277229fa10bd491a25b505600a165627a7a72305820ecf0d4a06a34c5fac065b47cd73925d481d32116dda10a2bd9f8172f7502663a0029",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}