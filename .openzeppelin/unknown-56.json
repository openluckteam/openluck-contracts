{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x4a616a03064770C3b269b4e165F46AF4F36d3a16",
    "txHash": "0x913bfddb40628e7eb3b8a8d4210b9fa6b66f3d1d65ed25acac023a0f22cadc31"
  },
  "proxies": [
    {
      "address": "0xd667Ae0B67A1f3b92F2dF1219C2C501FECF306bF",
      "txHash": "0xb6b6c4a48b51a4f41687bdedf9d303254eca0cbd2a1838a3b38cc2f02d7cc960",
      "kind": "transparent"
    },
    {
      "address": "0x85C8c8E11aCa93ac7C4e3b5beEf10fA803Bb19b1",
      "txHash": "0x64f59f37ff983caeafa14ceace3e3ecae154620b959f37bf3be78f5b17cac255",
      "kind": "transparent"
    }
  ],
  "impls": {
    "8b1e7aa8926ec732f201f612cdcccd4b14e0941a0d4f35303ad2cb8d2cf76031": {
      "address": "0x7B3a23f69f5548E7eEFb57F613027c4252f52366",
      "txHash": "0x06a24413f6d2a4d2688c1cbb232acc49425bec04d00a839cb6eee103ca6fc5a6",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "label": "ids",
            "offset": 0,
            "slot": "151",
            "type": "t_struct(Counter)4842_storage",
            "contract": "LucksExecutor",
            "src": "contracts\\LucksExecutor.sol:28"
          },
          {
            "label": "HELPER",
            "offset": 0,
            "slot": "152",
            "type": "t_contract(ILucksHelper)10587",
            "contract": "LucksExecutor",
            "src": "contracts\\LucksExecutor.sol:31"
          },
          {
            "label": "NFT",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IProxyNFTStation)10857",
            "contract": "LucksExecutor",
            "src": "contracts\\LucksExecutor.sol:32"
          },
          {
            "label": "TOKEN",
            "offset": 0,
            "slot": "154",
            "type": "t_contract(IProxyTokenStation)10898",
            "contract": "LucksExecutor",
            "src": "contracts\\LucksExecutor.sol:33"
          },
          {
            "label": "BRIDGE",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(ILucksBridge)10047",
            "contract": "LucksExecutor",
            "src": "contracts\\LucksExecutor.sol:34"
          },
          {
            "label": "lzChainId",
            "offset": 20,
            "slot": "155",
            "type": "t_uint16",
            "contract": "LucksExecutor",
            "src": "contracts\\LucksExecutor.sol:36"
          },
          {
            "label": "isAllowTask",
            "offset": 22,
            "slot": "155",
            "type": "t_bool",
            "contract": "LucksExecutor",
            "src": "contracts\\LucksExecutor.sol:37"
          },
          {
            "label": "tasks",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_uint256,t_struct(TaskItem)10098_storage)",
            "contract": "LucksExecutor",
            "src": "contracts\\LucksExecutor.sol:42"
          },
          {
            "label": "infos",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_uint256,t_struct(TaskInfo)10119_storage)",
            "contract": "LucksExecutor",
            "src": "contracts\\LucksExecutor.sol:43"
          },
          {
            "label": "tickets",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Ticket)10112_storage))",
            "contract": "LucksExecutor",
            "src": "contracts\\LucksExecutor.sol:44"
          },
          {
            "label": "ticketIds",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "LucksExecutor",
            "src": "contracts\\LucksExecutor.sol:45"
          },
          {
            "label": "userState",
            "offset": 0,
            "slot": "160",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(UserState)10124_storage))",
            "contract": "LucksExecutor",
            "src": "contracts\\LucksExecutor.sol:46"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(ILucksBridge)10047": {
            "label": "contract ILucksBridge",
            "numberOfBytes": "20"
          },
          "t_contract(ILucksHelper)10587": {
            "label": "contract ILucksHelper",
            "numberOfBytes": "20"
          },
          "t_contract(IProxyNFTStation)10857": {
            "label": "contract IProxyNFTStation",
            "numberOfBytes": "20"
          },
          "t_contract(IProxyTokenStation)10898": {
            "label": "contract IProxyTokenStation",
            "numberOfBytes": "20"
          },
          "t_enum(TaskStatus)10058": {
            "label": "enum TaskStatus",
            "members": [
              "Pending",
              "Open",
              "Close",
              "Success",
              "Fail",
              "Cancel"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(UserState)10124_storage))": {
            "label": "mapping(address => mapping(uint256 => struct UserState))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Ticket)10112_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct Ticket))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TaskInfo)10119_storage)": {
            "label": "mapping(uint256 => struct TaskInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TaskItem)10098_storage)": {
            "label": "mapping(uint256 => struct TaskItem)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Ticket)10112_storage)": {
            "label": "mapping(uint256 => struct Ticket)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(UserState)10124_storage)": {
            "label": "mapping(uint256 => struct UserState)",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)4842_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ExclusiveToken)10063_storage": {
            "label": "struct ExclusiveToken",
            "members": [
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TaskInfo)10119_storage": {
            "label": "struct TaskInfo",
            "members": [
              {
                "label": "lastTID",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "closeTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "finalNo",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(TaskItem)10098_storage": {
            "label": "struct TaskItem",
            "members": [
              {
                "label": "seller",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "nftChainId",
                "type": "t_uint16",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "nftContract",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokenIds",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tokenAmounts",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "acceptToken",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "status",
                "type": "t_enum(TaskStatus)10058",
                "offset": 20,
                "slot": "4"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "targetAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "paymentStrategy",
                "type": "t_uint16",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "exclusiveToken",
                "type": "t_struct(ExclusiveToken)10063_storage",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "amountCollected",
                "type": "t_uint256",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "depositId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "13"
              }
            ],
            "numberOfBytes": "448"
          },
          "t_struct(Ticket)10112_storage": {
            "label": "struct Ticket",
            "members": [
              {
                "label": "number",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "count",
                "type": "t_uint32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "owner",
                "type": "t_address",
                "offset": 4,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UserState)10124_storage": {
            "label": "struct UserState",
            "members": [
              {
                "label": "num",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "claimed",
                "type": "t_bool",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "00dc81080add80dbc4e1507df0e8ad46fc352ad33e6fe71c2277cf29c7ddaaf2": {
      "address": "0x1a403Eb1294aeb6596935e3369Ae1E041C9ADd95",
      "txHash": "0x97b5f619c4def6c1f53276b7d1fdb3da90f411a4236088efdb736010f5cf642e",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "label": "EXECUTOR",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(ILucksExecutor)10402",
            "contract": "LucksGroup",
            "src": "contracts\\lucks\\LucksGroup.sol:21"
          },
          {
            "label": "MAX_SEAT",
            "offset": 20,
            "slot": "151",
            "type": "t_uint32",
            "contract": "LucksGroup",
            "src": "contracts\\lucks\\LucksGroup.sol:23"
          },
          {
            "label": "groupIds",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "LucksGroup",
            "src": "contracts\\lucks\\LucksGroup.sol:25"
          },
          {
            "label": "groups",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_address)dyn_storage))",
            "contract": "LucksGroup",
            "src": "contracts\\lucks\\LucksGroup.sol:26"
          },
          {
            "label": "userGroups",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "LucksGroup",
            "src": "contracts\\lucks\\LucksGroup.sol:27"
          },
          {
            "label": "groupSeat",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint16))",
            "contract": "LucksGroup",
            "src": "contracts\\lucks\\LucksGroup.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(ILucksExecutor)10402": {
            "label": "contract ILucksExecutor",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_address)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint16))": {
            "label": "mapping(uint256 => mapping(uint256 => uint16))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint16)": {
            "label": "mapping(uint256 => uint16)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
